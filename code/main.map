Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                              main.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                              main.o (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                              main.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
                              main.o (__eerd_byte_m644)

Allocating common symbols
Common symbol       size              file

bfly_buff           0x200             main.o
output              0x80              main.o
u1                  0x1               main.o
c1                  0x2               main.o
c                   0x2               main.o
s                   0x1               main.o
capture             0x100             main.o
ymin                0x2               main.o
u_c                 0x2               main.o
ymax                0x2               main.o
u                   0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
LOAD main.o
LOAD ffft.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2054
 *(.vectors)
 .vectors       0x00000000       0x70 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000070                . = ALIGN (0x2)
                0x00000070                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000070        0x0 linker stubs
 *(.trampolines*)
                0x00000070                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000070                __ctors_start = .
 *(.ctors)
                0x00000070                __ctors_end = .
                0x00000070                __dtors_start = .
 *(.dtors)
                0x00000070                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000070        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
                0x00000070                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000070        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000007c       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x0000007c                __do_copy_data
 .init4         0x00000092       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00000092                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000a2        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
 *(.init9)
 *(.text)
 .text          0x000000aa        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
                0x000000aa                __vector_22
                0x000000aa                __vector_1
                0x000000aa                __vector_12
                0x000000aa                __bad_interrupt
                0x000000aa                __vector_6
                0x000000aa                __vector_3
                0x000000aa                __vector_23
                0x000000aa                __vector_25
                0x000000aa                __vector_11
                0x000000aa                __vector_13
                0x000000aa                __vector_17
                0x000000aa                __vector_19
                0x000000aa                __vector_7
                0x000000aa                __vector_27
                0x000000aa                __vector_5
                0x000000aa                __vector_4
                0x000000aa                __vector_9
                0x000000aa                __vector_2
                0x000000aa                __vector_21
                0x000000aa                __vector_15
                0x000000aa                __vector_8
                0x000000aa                __vector_26
                0x000000aa                __vector_10
                0x000000aa                __vector_16
                0x000000aa                __vector_20
 .text          0x000000ae     0x18b4 main.o
                0x000000ae                uart_init
                0x000000c6                uart_putc
                0x000000f8                uart_getc
                0x0000012c                uart_flush
                0x00000144                uart_communicate
                0x00000174                delay_ms
                0x00000188                delay_us
                0x0000029a                lcd_databits
                0x000002c6                lcd_goto_xblock
                0x000002e2                lcd_goto_yblock
                0x000002ee                lcd_goto
                0x00000300                lcd_block
                0x00000320                lcd_all
                0x00000384                lcd_init
                0x000003d8                lcd_read
                0x00000402                lcd_pixel
                0x0000042e                lcd_pixel_share
                0x00000478                lcd_line_from_bottom
                0x00000516                lcd_pixel_line_from_left
                0x0000059c                lcd_yblockof
                0x000005ac                lcd_constx_line
                0x00000614                buttons_update
                0x0000063e                __vector_14
                0x00000670                __vector_24
                0x000007a6                lcd_sym
                0x000007ea                lcd_num_from_right
                0x00000866                lcd_str
                0x0000089a                main
                0x000011d2                __vector_18
 .text          0x00001962      0x5a8 ffft.o
                0x00001962                tbl_window
                0x00001be2                fft_input
                0x00001c40                fft_execute
                0x00001dd4                fft_output
                0x00001ee2                fmuls_f
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00001f0a        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
                0x00001f0a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001f0a       0x28 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                0x00001f0a                __udivmodhi4
 .text.libgcc   0x00001f32       0x26 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                0x00001f32                __divmodhi4
                0x00001f32                _div
 .text.libgcc   0x00001f58       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o)
                0x00001f58                __divmodsi4
 .text.libgcc   0x00001f8e       0x38 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                0x00001f8e                __prologue_saves__
 .text.libgcc   0x00001fc6       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                0x00001fc6                __epilogue_restores__
 .text.libgcc   0x00001ffc        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00001ffc        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001ffc        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001ffc       0x44 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodsi4.o)
                0x00001ffc                __udivmodsi4
 .text.avr-libc
                0x00002040       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
                0x00002040                __eerd_byte_m644
                0x00002050                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00002050        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x00002050                exit
                0x00002050                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00002050        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00002054                _etext = .

.data           0x00800100      0x106 load address 0x00002054
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
 .data          0x00800100      0x105 main.o
                0x008001f7                mode
                0x008001f8                adc_step
                0x008001f9                menu_state
                0x008001fa                m
                0x008001fb                lcd_skip
                0x008001fc                lcd_skip_c
                0x008001fd                adc_max
                0x008001ff                adc_error
                0x00800201                adc_check
                0x00800203                adc_reset
 .data          0x00800205        0x0 ffft.o
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x00800205        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800206                . = ALIGN (0x2)
 *fill*         0x00800205        0x1 00
                0x00800206                _edata = .
                0x00800206                PROVIDE (__data_end, .)

.bss            0x00800206      0x3a2
                0x00800206                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800206        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
 .bss           0x00800206       0x15 main.o
                0x00800206                current
                0x00800207                top_state1
                0x00800208                left_state1
                0x00800209                right_state1
                0x0080020a                up_state1
                0x0080020b                down_state1
                0x0080020c                redraw_menu
                0x0080020d                array_filled
                0x0080020e                error_storage
                0x0080020f                spectrum_scale
                0x00800210                adc_reset_c
 .bss           0x0080021b        0x0 ffft.o
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0080021b        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080021b      0x38d main.o
                0x0080021b                bfly_buff
                0x0080041b                output
                0x0080049b                u1
                0x0080049c                c1
                0x0080049e                c
                0x008004a0                s
                0x008004a1                capture
                0x008005a1                ymin
                0x008005a3                u_c
                0x008005a5                ymax
                0x008005a7                u
                0x008005a8                PROVIDE (__bss_end, .)
                0x00002054                __data_load_start = LOADADDR (.data)
                0x0000215a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008005a8        0x0
                0x008005a8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008005a8                PROVIDE (__noinit_end, .)
                0x008005a8                _end = .
                0x008005a8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x34e0
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o
 .stab          0x000006b4     0x2658 main.o
                               0x2664 (size before relaxing)
 .stab          0x00002d0c      0x744 ffft.o
                                0x750 (size before relaxing)
 .stab          0x00003450       0x90 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(eerd_byte_atmega644.o)
                                 0x9c (size before relaxing)

.stabstr        0x00000000     0x11af
 *(.stabstr)
 .stabstr       0x00000000     0x11af /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm644.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
