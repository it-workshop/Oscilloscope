
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000106  00800100  00002054  000020e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002054  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000003a2  00800206  00800206  000021ee  2**0
                  ALLOC
  3 .stab         000034e0  00000000  00000000  000021f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011af  00000000  00000000  000056d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 1f 03 	jmp	0x63e	; 0x63e <__vector_14>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 e9 08 	jmp	0x11d2	; 0x11d2 <__vector_18>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 38 03 	jmp	0x670	; 0x670 <__vector_24>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d0 e1       	ldi	r29, 0x10	; 16
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	12 e0       	ldi	r17, 0x02	; 2
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e4 e5       	ldi	r30, 0x54	; 84
      84:	f0 e2       	ldi	r31, 0x20	; 32
      86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
      8c:	a6 30       	cpi	r26, 0x06	; 6
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
      92:	15 e0       	ldi	r17, 0x05	; 5
      94:	a6 e0       	ldi	r26, 0x06	; 6
      96:	b2 e0       	ldi	r27, 0x02	; 2
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a8 3a       	cpi	r26, 0xA8	; 168
      9e:	b1 07       	cpc	r27, r17
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 4d 04 	call	0x89a	; 0x89a <main>
      a6:	0c 94 28 10 	jmp	0x2050	; 0x2050 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <uart_init>:
#define BAUD 9600UL
#define UBRRVAL (F_CPU/(BAUD*16)-1)
#define U_M	1000
uint16_t u_c;
void uart_init() {
    UBRRH = UBRRVAL >> 8;
      ae:	10 92 c5 00 	sts	0x00C5, r1
    UBRRL = UBRRVAL & 0xff;
      b2:	81 e8       	ldi	r24, 0x81	; 129
      b4:	80 93 c4 00 	sts	0x00C4, r24
    UCSRC = UCSRC_SELECT | (1 << UCSZ1) | (1 << UCSZ0);
      b8:	86 e0       	ldi	r24, 0x06	; 6
      ba:	80 93 c2 00 	sts	0x00C2, r24
    UCSRB = (1 << RXEN) | (1 << TXEN);
      be:	88 e1       	ldi	r24, 0x18	; 24
      c0:	80 93 c1 00 	sts	0x00C1, r24
}
      c4:	08 95       	ret

000000c6 <uart_putc>:

void uart_putc(uint8_t c) {
      c6:	98 2f       	mov	r25, r24
	u_c=0;
      c8:	10 92 a4 05 	sts	0x05A4, r1
      cc:	10 92 a3 05 	sts	0x05A3, r1
      d0:	20 e0       	ldi	r18, 0x00	; 0
      d2:	30 e0       	ldi	r19, 0x00	; 0
      d4:	02 c0       	rjmp	.+4      	; 0xda <uart_putc+0x14>
    while(!(UCSRA&(1<<UDRE))&&(u_c<U_M)) {
      d6:	2f 5f       	subi	r18, 0xFF	; 255
      d8:	3f 4f       	sbci	r19, 0xFF	; 255
      da:	80 91 c0 00 	lds	r24, 0x00C0
      de:	85 fd       	sbrc	r24, 5
      e0:	04 c0       	rjmp	.+8      	; 0xea <uart_putc+0x24>
      e2:	83 e0       	ldi	r24, 0x03	; 3
      e4:	28 3e       	cpi	r18, 0xE8	; 232
      e6:	38 07       	cpc	r19, r24
      e8:	b0 f3       	brcs	.-20     	; 0xd6 <uart_putc+0x10>
      ea:	30 93 a4 05 	sts	0x05A4, r19
      ee:	20 93 a3 05 	sts	0x05A3, r18
		u_c++;
	}
    UDR = c;
      f2:	90 93 c6 00 	sts	0x00C6, r25
}
      f6:	08 95       	ret

000000f8 <uart_getc>:

uint8_t uart_getc() {
	u_c=0;
      f8:	10 92 a4 05 	sts	0x05A4, r1
      fc:	10 92 a3 05 	sts	0x05A3, r1
     100:	20 e0       	ldi	r18, 0x00	; 0
     102:	30 e0       	ldi	r19, 0x00	; 0
     104:	02 c0       	rjmp	.+4      	; 0x10a <uart_getc+0x12>
	static uint8_t c;
    while(!(UCSRA & (1 << RXC))&&(u_c<U_M)) {
     106:	2f 5f       	subi	r18, 0xFF	; 255
     108:	3f 4f       	sbci	r19, 0xFF	; 255
     10a:	80 91 c0 00 	lds	r24, 0x00C0
     10e:	87 fd       	sbrc	r24, 7
     110:	04 c0       	rjmp	.+8      	; 0x11a <uart_getc+0x22>
     112:	83 e0       	ldi	r24, 0x03	; 3
     114:	28 3e       	cpi	r18, 0xE8	; 232
     116:	38 07       	cpc	r19, r24
     118:	b0 f3       	brcs	.-20     	; 0x106 <uart_getc+0xe>
     11a:	30 93 a4 05 	sts	0x05A4, r19
     11e:	20 93 a3 05 	sts	0x05A3, r18
		u_c++;
	}
	c=UDR;
     122:	80 91 c6 00 	lds	r24, 0x00C6
     126:	80 93 1a 02 	sts	0x021A, r24
    return c;
}
     12a:	08 95       	ret

0000012c <uart_flush>:

void uart_flush( void ) {
     12c:	90 91 19 02 	lds	r25, 0x0219
     130:	02 c0       	rjmp	.+4      	; 0x136 <uart_flush+0xa>
  static unsigned char dummy;
  while ( UCSRA & (1<<RXC) ) dummy = UDR;
     132:	90 91 c6 00 	lds	r25, 0x00C6
     136:	80 91 c0 00 	lds	r24, 0x00C0
     13a:	87 fd       	sbrc	r24, 7
     13c:	fa cf       	rjmp	.-12     	; 0x132 <uart_flush+0x6>
     13e:	90 93 19 02 	sts	0x0219, r25
}
     142:	08 95       	ret

00000144 <uart_communicate>:

void uart_communicate(unsigned char w_byte) {
     144:	1f 93       	push	r17
     146:	18 2f       	mov	r17, r24
    static uint8_t c;
    c=uart_getc();
     148:	0e 94 7c 00 	call	0xf8	; 0xf8 <uart_getc>
     14c:	80 93 18 02 	sts	0x0218, r24
    if(c=='g') uart_putc(w_byte);
     150:	87 36       	cpi	r24, 0x67	; 103
     152:	19 f4       	brne	.+6      	; 0x15a <uart_communicate+0x16>
     154:	81 2f       	mov	r24, r17
     156:	0e 94 63 00 	call	0xc6	; 0xc6 <uart_putc>
     15a:	90 91 19 02 	lds	r25, 0x0219
     15e:	02 c0       	rjmp	.+4      	; 0x164 <uart_communicate+0x20>
    return c;
}

void uart_flush( void ) {
  static unsigned char dummy;
  while ( UCSRA & (1<<RXC) ) dummy = UDR;
     160:	90 91 c6 00 	lds	r25, 0x00C6
     164:	80 91 c0 00 	lds	r24, 0x00C0
     168:	87 fd       	sbrc	r24, 7
     16a:	fa cf       	rjmp	.-12     	; 0x160 <uart_communicate+0x1c>
     16c:	90 93 19 02 	sts	0x0219, r25
void uart_communicate(unsigned char w_byte) {
    static uint8_t c;
    c=uart_getc();
    if(c=='g') uart_putc(w_byte);
    uart_flush();
}
     170:	1f 91       	pop	r17
     172:	08 95       	ret

00000174 <delay_ms>:
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     174:	28 e8       	ldi	r18, 0x88	; 136
     176:	33 e1       	ldi	r19, 0x13	; 19
     178:	04 c0       	rjmp	.+8      	; 0x182 <delay_ms+0xe>
     17a:	f9 01       	movw	r30, r18
     17c:	31 97       	sbiw	r30, 0x01	; 1
     17e:	f1 f7       	brne	.-4      	; 0x17c <delay_ms+0x8>
     180:	01 97       	sbiw	r24, 0x01	; 1
#include <avr/eeprom.h>

#define lcd_arrows(x,y) lcd_str("< >",x,y)

void delay_ms(unsigned int delay) {
	while(delay--)
     182:	00 97       	sbiw	r24, 0x00	; 0
     184:	d1 f7       	brne	.-12     	; 0x17a <delay_ms+0x6>
		_delay_ms(1);
}
     186:	08 95       	ret

00000188 <delay_us>:

void delay_us(unsigned long long  int delay) {
     188:	df 92       	push	r13
     18a:	ef 92       	push	r14
     18c:	ff 92       	push	r15
     18e:	0f 93       	push	r16
     190:	1f 93       	push	r17
     192:	16 2f       	mov	r17, r22
     194:	f7 2e       	mov	r15, r23
     196:	79 2f       	mov	r23, r25
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     198:	96 e0       	ldi	r25, 0x06	; 6
     19a:	d9 2e       	mov	r13, r25
     19c:	03 c0       	rjmp	.+6      	; 0x1a4 <delay_us+0x1c>
     19e:	ed 2d       	mov	r30, r13
     1a0:	ea 95       	dec	r30
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <delay_us+0x18>
	while(delay--)
     1a4:	e2 2e       	mov	r14, r18
     1a6:	ea 94       	dec	r14
     1a8:	f1 e0       	ldi	r31, 0x01	; 1
     1aa:	e2 16       	cp	r14, r18
     1ac:	08 f0       	brcs	.+2      	; 0x1b0 <delay_us+0x28>
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	23 2f       	mov	r18, r19
     1b2:	21 50       	subi	r18, 0x01	; 1
     1b4:	e1 e0       	ldi	r30, 0x01	; 1
     1b6:	23 17       	cp	r18, r19
     1b8:	08 f0       	brcs	.+2      	; 0x1bc <delay_us+0x34>
     1ba:	e0 e0       	ldi	r30, 0x00	; 0
     1bc:	0f 2f       	mov	r16, r31
     1be:	02 0f       	add	r16, r18
     1c0:	31 e0       	ldi	r19, 0x01	; 1
     1c2:	02 17       	cp	r16, r18
     1c4:	08 f0       	brcs	.+2      	; 0x1c8 <delay_us+0x40>
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	e3 2b       	or	r30, r19
     1ca:	24 2f       	mov	r18, r20
     1cc:	21 50       	subi	r18, 0x01	; 1
     1ce:	f1 e0       	ldi	r31, 0x01	; 1
     1d0:	24 17       	cp	r18, r20
     1d2:	08 f0       	brcs	.+2      	; 0x1d6 <delay_us+0x4e>
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	6e 2f       	mov	r22, r30
     1d8:	62 0f       	add	r22, r18
     1da:	31 e0       	ldi	r19, 0x01	; 1
     1dc:	62 17       	cp	r22, r18
     1de:	08 f0       	brcs	.+2      	; 0x1e2 <delay_us+0x5a>
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	f3 2b       	or	r31, r19
     1e4:	25 2f       	mov	r18, r21
     1e6:	21 50       	subi	r18, 0x01	; 1
     1e8:	41 e0       	ldi	r20, 0x01	; 1
     1ea:	25 17       	cp	r18, r21
     1ec:	08 f0       	brcs	.+2      	; 0x1f0 <delay_us+0x68>
     1ee:	40 e0       	ldi	r20, 0x00	; 0
     1f0:	9f 2f       	mov	r25, r31
     1f2:	92 0f       	add	r25, r18
     1f4:	31 e0       	ldi	r19, 0x01	; 1
     1f6:	92 17       	cp	r25, r18
     1f8:	08 f0       	brcs	.+2      	; 0x1fc <delay_us+0x74>
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	43 2b       	or	r20, r19
     1fe:	21 2f       	mov	r18, r17
     200:	21 50       	subi	r18, 0x01	; 1
     202:	51 e0       	ldi	r21, 0x01	; 1
     204:	21 17       	cp	r18, r17
     206:	08 f0       	brcs	.+2      	; 0x20a <delay_us+0x82>
     208:	50 e0       	ldi	r21, 0x00	; 0
     20a:	b4 2f       	mov	r27, r20
     20c:	b2 0f       	add	r27, r18
     20e:	31 e0       	ldi	r19, 0x01	; 1
     210:	b2 17       	cp	r27, r18
     212:	08 f0       	brcs	.+2      	; 0x216 <delay_us+0x8e>
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	53 2b       	or	r21, r19
     218:	2f 2d       	mov	r18, r15
     21a:	21 50       	subi	r18, 0x01	; 1
     21c:	41 e0       	ldi	r20, 0x01	; 1
     21e:	2f 15       	cp	r18, r15
     220:	08 f0       	brcs	.+2      	; 0x224 <delay_us+0x9c>
     222:	40 e0       	ldi	r20, 0x00	; 0
     224:	a5 2f       	mov	r26, r21
     226:	a2 0f       	add	r26, r18
     228:	31 e0       	ldi	r19, 0x01	; 1
     22a:	a2 17       	cp	r26, r18
     22c:	08 f0       	brcs	.+2      	; 0x230 <delay_us+0xa8>
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	43 2b       	or	r20, r19
     232:	28 2f       	mov	r18, r24
     234:	21 50       	subi	r18, 0x01	; 1
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	28 17       	cp	r18, r24
     23a:	08 f0       	brcs	.+2      	; 0x23e <delay_us+0xb6>
     23c:	e0 e0       	ldi	r30, 0x00	; 0
     23e:	f4 2f       	mov	r31, r20
     240:	f2 0f       	add	r31, r18
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	f2 17       	cp	r31, r18
     246:	08 f0       	brcs	.+2      	; 0x24a <delay_us+0xc2>
     248:	80 e0       	ldi	r24, 0x00	; 0
     24a:	e8 2b       	or	r30, r24
     24c:	71 50       	subi	r23, 0x01	; 1
     24e:	2e 2d       	mov	r18, r14
     250:	30 2f       	mov	r19, r16
     252:	46 2f       	mov	r20, r22
     254:	59 2f       	mov	r21, r25
     256:	1b 2f       	mov	r17, r27
     258:	fa 2e       	mov	r15, r26
     25a:	8f 2f       	mov	r24, r31
     25c:	7e 0f       	add	r23, r30
     25e:	2f 3f       	cpi	r18, 0xFF	; 255
     260:	09 f0       	breq	.+2      	; 0x264 <delay_us+0xdc>
     262:	9d cf       	rjmp	.-198    	; 0x19e <delay_us+0x16>
     264:	0f 3f       	cpi	r16, 0xFF	; 255
     266:	09 f0       	breq	.+2      	; 0x26a <delay_us+0xe2>
     268:	9a cf       	rjmp	.-204    	; 0x19e <delay_us+0x16>
     26a:	6f 3f       	cpi	r22, 0xFF	; 255
     26c:	09 f0       	breq	.+2      	; 0x270 <delay_us+0xe8>
     26e:	97 cf       	rjmp	.-210    	; 0x19e <delay_us+0x16>
     270:	9f 3f       	cpi	r25, 0xFF	; 255
     272:	09 f0       	breq	.+2      	; 0x276 <delay_us+0xee>
     274:	94 cf       	rjmp	.-216    	; 0x19e <delay_us+0x16>
     276:	bf 3f       	cpi	r27, 0xFF	; 255
     278:	09 f0       	breq	.+2      	; 0x27c <delay_us+0xf4>
     27a:	91 cf       	rjmp	.-222    	; 0x19e <delay_us+0x16>
     27c:	af 3f       	cpi	r26, 0xFF	; 255
     27e:	09 f0       	breq	.+2      	; 0x282 <delay_us+0xfa>
     280:	8e cf       	rjmp	.-228    	; 0x19e <delay_us+0x16>
     282:	ff 3f       	cpi	r31, 0xFF	; 255
     284:	09 f0       	breq	.+2      	; 0x288 <delay_us+0x100>
     286:	8b cf       	rjmp	.-234    	; 0x19e <delay_us+0x16>
     288:	7f 3f       	cpi	r23, 0xFF	; 255
     28a:	09 f0       	breq	.+2      	; 0x28e <delay_us+0x106>
     28c:	88 cf       	rjmp	.-240    	; 0x19e <delay_us+0x16>
		_delay_us(1);
}
     28e:	1f 91       	pop	r17
     290:	0f 91       	pop	r16
     292:	ff 90       	pop	r15
     294:	ef 90       	pop	r14
     296:	df 90       	pop	r13
     298:	08 95       	ret

0000029a <lcd_databits>:

#define SEND_CMD 1
#define SEND_DATA 2

void lcd_databits(uint8_t cmd,uint8_t src) {
  DATAPORT=src;
     29a:	68 b9       	out	0x08, r22	; 8
  if(cmd==SEND_DATA) CMDPORT|=DI;
     29c:	82 30       	cpi	r24, 0x02	; 2
     29e:	11 f4       	brne	.+4      	; 0x2a4 <lcd_databits+0xa>
     2a0:	5d 9a       	sbi	0x0b, 5	; 11
     2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <lcd_databits+0xc>
  else CMDPORT&=~DI;
     2a4:	5d 98       	cbi	0x0b, 5	; 11
  CMDPORT|=EN;
     2a6:	5e 9a       	sbi	0x0b, 6	; 11
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	36 e0       	ldi	r19, 0x06	; 6
     2ae:	03 c0       	rjmp	.+6      	; 0x2b6 <lcd_databits+0x1c>
     2b0:	23 2f       	mov	r18, r19
     2b2:	2a 95       	dec	r18
     2b4:	f1 f7       	brne	.-4      	; 0x2b2 <lcd_databits+0x18>
     2b6:	01 96       	adiw	r24, 0x01	; 1
	while(delay--)
		_delay_ms(1);
}

void delay_us(unsigned long long  int delay) {
	while(delay--)
     2b8:	87 30       	cpi	r24, 0x07	; 7
     2ba:	91 05       	cpc	r25, r1
     2bc:	c9 f7       	brne	.-14     	; 0x2b0 <lcd_databits+0x16>
  DATAPORT=src;
  if(cmd==SEND_DATA) CMDPORT|=DI;
  else CMDPORT&=~DI;
  CMDPORT|=EN;
  delay_us(6);
  CMDPORT&=~EN;
     2be:	5e 98       	cbi	0x0b, 6	; 11
  CMDPORT&=~DI;
     2c0:	5d 98       	cbi	0x0b, 5	; 11
  DATAPORT=0;
     2c2:	18 b8       	out	0x08, r1	; 8
}
     2c4:	08 95       	ret

000002c6 <lcd_goto_xblock>:

void lcd_goto_xblock(uint8_t s) { //s={0,1...127}
     2c6:	68 2f       	mov	r22, r24
  if(s>=64) {
     2c8:	80 34       	cpi	r24, 0x40	; 64
     2ca:	20 f0       	brcs	.+8      	; 0x2d4 <lcd_goto_xblock+0xe>
    CMDPORT|=CSEL2;
     2cc:	5b 9a       	sbi	0x0b, 3	; 11
    CMDPORT&=~CSEL1;
     2ce:	5a 98       	cbi	0x0b, 2	; 11
    lcd_databits(SEND_CMD,(1<<6)|(s-64));
     2d0:	60 54       	subi	r22, 0x40	; 64
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <lcd_goto_xblock+0x12>
  }
  else {
    CMDPORT|=CSEL1;
     2d4:	5a 9a       	sbi	0x0b, 2	; 11
    CMDPORT&=~CSEL2;
     2d6:	5b 98       	cbi	0x0b, 3	; 11
    lcd_databits(SEND_CMD,(1<<6)|s);
     2d8:	60 64       	ori	r22, 0x40	; 64
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
     2e0:	08 95       	ret

000002e2 <lcd_goto_yblock>:
  }
}

void lcd_goto_yblock(uint8_t s) { //s={0,1...7}
  lcd_databits(SEND_CMD,0xb8|s);
     2e2:	68 2f       	mov	r22, r24
     2e4:	68 6b       	ori	r22, 0xB8	; 184
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}
     2ec:	08 95       	ret

000002ee <lcd_goto>:
void lcd_goto(uint8_t x,uint8_t y) {
     2ee:	1f 93       	push	r17
     2f0:	16 2f       	mov	r17, r22
	lcd_goto_xblock(x);
     2f2:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
	lcd_goto_yblock(y);
     2f6:	81 2f       	mov	r24, r17
     2f8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
}
     2fc:	1f 91       	pop	r17
     2fe:	08 95       	ret

00000300 <lcd_block>:
void lcd_block(uint8_t x,uint8_t y,uint8_t block) {
     300:	0f 93       	push	r16
     302:	1f 93       	push	r17
     304:	16 2f       	mov	r17, r22
     306:	04 2f       	mov	r16, r20
  lcd_goto_xblock(x);
     308:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
  lcd_goto_yblock(y);
     30c:	81 2f       	mov	r24, r17
     30e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
  lcd_databits(SEND_DATA,block);
     312:	82 e0       	ldi	r24, 0x02	; 2
     314:	60 2f       	mov	r22, r16
     316:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}
     31a:	1f 91       	pop	r17
     31c:	0f 91       	pop	r16
     31e:	08 95       	ret

00000320 <lcd_all>:

void lcd_all(uint8_t w) {
     320:	ff 92       	push	r15
     322:	0f 93       	push	r16
     324:	1f 93       	push	r17
     326:	cf 93       	push	r28
     328:	df 93       	push	r29
     32a:	f8 2e       	mov	r15, r24
  unsigned static int i,si;
  CMDPORT|=CSEL1|CSEL2;
     32c:	8b b1       	in	r24, 0x0b	; 11
     32e:	8c 60       	ori	r24, 0x0C	; 12
     330:	8b b9       	out	0x0b, r24	; 11
     332:	80 91 14 02 	lds	r24, 0x0214
     336:	90 91 15 02 	lds	r25, 0x0215
     33a:	00 e0       	ldi	r16, 0x00	; 0
     33c:	10 e0       	ldi	r17, 0x00	; 0
     33e:	12 c0       	rjmp	.+36     	; 0x364 <lcd_all+0x44>
  for(i=0;i<8;i++) {
   lcd_goto_yblock(i);
     340:	80 2f       	mov	r24, r16
     342:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
     346:	c0 e0       	ldi	r28, 0x00	; 0
     348:	d0 e0       	ldi	r29, 0x00	; 0
     34a:	04 c0       	rjmp	.+8      	; 0x354 <lcd_all+0x34>
   for(si=0;si<64;si++)
     lcd_databits(SEND_DATA,w);
     34c:	82 e0       	ldi	r24, 0x02	; 2
     34e:	6f 2d       	mov	r22, r15
     350:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
     354:	21 96       	adiw	r28, 0x01	; 1
void lcd_all(uint8_t w) {
  unsigned static int i,si;
  CMDPORT|=CSEL1|CSEL2;
  for(i=0;i<8;i++) {
   lcd_goto_yblock(i);
   for(si=0;si<64;si++)
     356:	c1 34       	cpi	r28, 0x41	; 65
     358:	d1 05       	cpc	r29, r1
     35a:	c1 f7       	brne	.-16     	; 0x34c <lcd_all+0x2c>
     35c:	0f 5f       	subi	r16, 0xFF	; 255
     35e:	1f 4f       	sbci	r17, 0xFF	; 255
     360:	80 e4       	ldi	r24, 0x40	; 64
     362:	90 e0       	ldi	r25, 0x00	; 0
}

void lcd_all(uint8_t w) {
  unsigned static int i,si;
  CMDPORT|=CSEL1|CSEL2;
  for(i=0;i<8;i++) {
     364:	08 30       	cpi	r16, 0x08	; 8
     366:	11 05       	cpc	r17, r1
     368:	58 f3       	brcs	.-42     	; 0x340 <lcd_all+0x20>
     36a:	90 93 15 02 	sts	0x0215, r25
     36e:	80 93 14 02 	sts	0x0214, r24
     372:	10 93 17 02 	sts	0x0217, r17
     376:	00 93 16 02 	sts	0x0216, r16
   lcd_goto_yblock(i);
   for(si=0;si<64;si++)
     lcd_databits(SEND_DATA,w);
  }
}
     37a:	cd b7       	in	r28, 0x3d	; 61
     37c:	de b7       	in	r29, 0x3e	; 62
     37e:	e5 e0       	ldi	r30, 0x05	; 5
     380:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <__epilogue_restores__+0x1a>

00000384 <lcd_init>:

void lcd_init() {
  CMDDDR=CSEL1|CSEL2|RW|RS|EN|DI;
     384:	8c ef       	ldi	r24, 0xFC	; 252
     386:	8a b9       	out	0x0a, r24	; 10
  CMDPORT=0x00;
     388:	1b b8       	out	0x0b, r1	; 11
  DATADDR=0xff;
     38a:	8f ef       	ldi	r24, 0xFF	; 255
     38c:	87 b9       	out	0x07, r24	; 7
  DATAPORT=0x00;
     38e:	18 b8       	out	0x08, r1	; 8
     390:	28 ee       	ldi	r18, 0xE8	; 232
     392:	33 e0       	ldi	r19, 0x03	; 3
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     394:	48 e8       	ldi	r20, 0x88	; 136
     396:	53 e1       	ldi	r21, 0x13	; 19
     398:	03 c0       	rjmp	.+6      	; 0x3a0 <lcd_init+0x1c>
     39a:	ca 01       	movw	r24, r20
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <lcd_init+0x18>
#include <avr/eeprom.h>

#define lcd_arrows(x,y) lcd_str("< >",x,y)

void delay_ms(unsigned int delay) {
	while(delay--)
     3a0:	21 50       	subi	r18, 0x01	; 1
     3a2:	30 40       	sbci	r19, 0x00	; 0
     3a4:	8f ef       	ldi	r24, 0xFF	; 255
     3a6:	2f 3f       	cpi	r18, 0xFF	; 255
     3a8:	38 07       	cpc	r19, r24
     3aa:	b9 f7       	brne	.-18     	; 0x39a <lcd_init+0x16>
  CMDDDR=CSEL1|CSEL2|RW|RS|EN|DI;
  CMDPORT=0x00;
  DATADDR=0xff;
  DATAPORT=0x00;
  delay_ms(1000);
  CMDPORT=RS|CSEL1|CSEL2;
     3ac:	8c e8       	ldi	r24, 0x8C	; 140
     3ae:	8b b9       	out	0x0b, r24	; 11
  lcd_databits(SEND_CMD,0x3f);
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	6f e3       	ldi	r22, 0x3F	; 63
     3b4:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
  lcd_databits(SEND_CMD,0xc0);
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	60 ec       	ldi	r22, 0xC0	; 192
     3bc:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
  lcd_databits(SEND_CMD,0x40);
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	60 e4       	ldi	r22, 0x40	; 64
     3c4:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
  lcd_databits(SEND_CMD,0xb8);
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	68 eb       	ldi	r22, 0xB8	; 184
     3cc:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
  lcd_all(0);
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	0e 94 90 01 	call	0x320	; 0x320 <lcd_all>
}
     3d6:	08 95       	ret

000003d8 <lcd_read>:
		x+=6;
	}
}

uint8_t lcd_read(uint8_t x,uint8_t y) {
	lcd_goto(x,y);
     3d8:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_goto>
	CMDPORT|=DI|RW;
     3dc:	8b b1       	in	r24, 0x0b	; 11
     3de:	80 63       	ori	r24, 0x30	; 48
     3e0:	8b b9       	out	0x0b, r24	; 11
     3e2:	80 e0       	ldi	r24, 0x00	; 0
     3e4:	90 e0       	ldi	r25, 0x00	; 0
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     3e6:	36 e0       	ldi	r19, 0x06	; 6
     3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <lcd_read+0x18>
     3ea:	23 2f       	mov	r18, r19
     3ec:	2a 95       	dec	r18
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <lcd_read+0x14>
     3f0:	01 96       	adiw	r24, 0x01	; 1
	while(delay--)
		_delay_ms(1);
}

void delay_us(unsigned long long  int delay) {
	while(delay--)
     3f2:	87 30       	cpi	r24, 0x07	; 7
     3f4:	91 05       	cpc	r25, r1
     3f6:	c9 f7       	brne	.-14     	; 0x3ea <lcd_read+0x12>

uint8_t lcd_read(uint8_t x,uint8_t y) {
	lcd_goto(x,y);
	CMDPORT|=DI|RW;
	delay_us(6);
	CMDPORT&=~(DI|RW);
     3f8:	8b b1       	in	r24, 0x0b	; 11
     3fa:	8f 7c       	andi	r24, 0xCF	; 207
     3fc:	8b b9       	out	0x0b, r24	; 11
	return(DATAPORT);
     3fe:	88 b1       	in	r24, 0x08	; 8
	
}
     400:	08 95       	ret

00000402 <lcd_pixel>:

inline void lcd_pixel(uint8_t x,uint8_t y) {
     402:	e8 2f       	mov	r30, r24
    lcd_block(x,(y-y%8)/8,1<<(y%8));
     404:	26 2f       	mov	r18, r22
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	c9 01       	movw	r24, r18
     40a:	88 7f       	andi	r24, 0xF8	; 248
     40c:	68 e0       	ldi	r22, 0x08	; 8
     40e:	70 e0       	ldi	r23, 0x00	; 0
     410:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divmodhi4>
     414:	27 70       	andi	r18, 0x07	; 7
     416:	30 70       	andi	r19, 0x00	; 0
     418:	41 e0       	ldi	r20, 0x01	; 1
     41a:	50 e0       	ldi	r21, 0x00	; 0
     41c:	02 c0       	rjmp	.+4      	; 0x422 <lcd_pixel+0x20>
     41e:	44 0f       	add	r20, r20
     420:	55 1f       	adc	r21, r21
     422:	2a 95       	dec	r18
     424:	e2 f7       	brpl	.-8      	; 0x41e <lcd_pixel+0x1c>
     426:	8e 2f       	mov	r24, r30
     428:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
}
     42c:	08 95       	ret

0000042e <lcd_pixel_share>:

void lcd_pixel_share(uint8_t x,uint8_t y) {
     42e:	ef 92       	push	r14
     430:	ff 92       	push	r15
     432:	0f 93       	push	r16
     434:	1f 93       	push	r17
     436:	e8 2e       	mov	r14, r24
	lcd_block(x,(y-y%8)/8,(1<<(y%8))|lcd_read(x,(y-y%8)/8));
     438:	06 2f       	mov	r16, r22
     43a:	10 e0       	ldi	r17, 0x00	; 0
     43c:	c8 01       	movw	r24, r16
     43e:	88 7f       	andi	r24, 0xF8	; 248
     440:	68 e0       	ldi	r22, 0x08	; 8
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divmodhi4>
     448:	f6 2e       	mov	r15, r22
     44a:	8e 2d       	mov	r24, r14
     44c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <lcd_read>
     450:	07 70       	andi	r16, 0x07	; 7
     452:	10 70       	andi	r17, 0x00	; 0
     454:	21 e0       	ldi	r18, 0x01	; 1
     456:	30 e0       	ldi	r19, 0x00	; 0
     458:	02 c0       	rjmp	.+4      	; 0x45e <lcd_pixel_share+0x30>
     45a:	22 0f       	add	r18, r18
     45c:	33 1f       	adc	r19, r19
     45e:	0a 95       	dec	r16
     460:	e2 f7       	brpl	.-8      	; 0x45a <lcd_pixel_share+0x2c>
     462:	48 2f       	mov	r20, r24
     464:	42 2b       	or	r20, r18
     466:	8e 2d       	mov	r24, r14
     468:	6f 2d       	mov	r22, r15
     46a:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
}
     46e:	1f 91       	pop	r17
     470:	0f 91       	pop	r16
     472:	ff 90       	pop	r15
     474:	ef 90       	pop	r14
     476:	08 95       	ret

00000478 <lcd_line_from_bottom>:

void lcd_line_from_bottom(uint8_t x1,uint8_t y1) {
     478:	a0 e0       	ldi	r26, 0x00	; 0
     47a:	b0 e0       	ldi	r27, 0x00	; 0
     47c:	e2 e4       	ldi	r30, 0x42	; 66
     47e:	f2 e0       	ldi	r31, 0x02	; 2
     480:	0c 94 d2 0f 	jmp	0x1fa4	; 0x1fa4 <__prologue_saves__+0x16>
     484:	d8 2e       	mov	r13, r24
	int y=0;
	uint8_t res=0;
	for(y=7;y>(7-((y1-y1%8)/8));y--) {
     486:	e6 2e       	mov	r14, r22
     488:	ff 24       	eor	r15, r15
     48a:	c7 01       	movw	r24, r14
     48c:	88 7f       	andi	r24, 0xF8	; 248
     48e:	68 e0       	ldi	r22, 0x08	; 8
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divmodhi4>
     496:	00 27       	eor	r16, r16
     498:	11 27       	eor	r17, r17
     49a:	06 1b       	sub	r16, r22
     49c:	17 0b       	sbc	r17, r23
     49e:	09 5f       	subi	r16, 0xF9	; 249
     4a0:	1f 4f       	sbci	r17, 0xFF	; 255
     4a2:	c7 e0       	ldi	r28, 0x07	; 7
     4a4:	d0 e0       	ldi	r29, 0x00	; 0
     4a6:	0b c0       	rjmp	.+22     	; 0x4be <lcd_line_from_bottom+0x46>
		lcd_goto_xblock(x1);
     4a8:	8d 2d       	mov	r24, r13
     4aa:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
		lcd_goto_yblock(y);
     4ae:	8c 2f       	mov	r24, r28
     4b0:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
		lcd_databits(SEND_DATA,0xff);
     4b4:	82 e0       	ldi	r24, 0x02	; 2
     4b6:	6f ef       	ldi	r22, 0xFF	; 255
     4b8:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}

void lcd_line_from_bottom(uint8_t x1,uint8_t y1) {
	int y=0;
	uint8_t res=0;
	for(y=7;y>(7-((y1-y1%8)/8));y--) {
     4bc:	21 97       	sbiw	r28, 0x01	; 1
     4be:	0c 17       	cp	r16, r28
     4c0:	1d 07       	cpc	r17, r29
     4c2:	94 f3       	brlt	.-28     	; 0x4a8 <lcd_line_from_bottom+0x30>
		lcd_goto_xblock(x1);
		lcd_goto_yblock(y);
		lcd_databits(SEND_DATA,0xff);
	}
	lcd_goto_xblock(x1);
     4c4:	8d 2d       	mov	r24, r13
     4c6:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
	lcd_goto_yblock(y);
     4ca:	8c 2f       	mov	r24, r28
     4cc:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
     4d0:	27 e0       	ldi	r18, 0x07	; 7
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e0       	ldi	r20, 0x00	; 0
	for(y=7;y>=(7-y1%8);y--) {
     4d6:	b7 01       	movw	r22, r14
     4d8:	60 95       	com	r22
     4da:	70 95       	com	r23
     4dc:	67 70       	andi	r22, 0x07	; 7
     4de:	70 70       	andi	r23, 0x00	; 0
		res|=1<<y;
     4e0:	e1 e0       	ldi	r30, 0x01	; 1
     4e2:	f0 e0       	ldi	r31, 0x00	; 0
     4e4:	0a c0       	rjmp	.+20     	; 0x4fa <lcd_line_from_bottom+0x82>
     4e6:	cf 01       	movw	r24, r30
     4e8:	02 2e       	mov	r0, r18
     4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <lcd_line_from_bottom+0x78>
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	0a 94       	dec	r0
     4f2:	e2 f7       	brpl	.-8      	; 0x4ec <lcd_line_from_bottom+0x74>
     4f4:	48 2b       	or	r20, r24
		lcd_goto_yblock(y);
		lcd_databits(SEND_DATA,0xff);
	}
	lcd_goto_xblock(x1);
	lcd_goto_yblock(y);
	for(y=7;y>=(7-y1%8);y--) {
     4f6:	21 50       	subi	r18, 0x01	; 1
     4f8:	30 40       	sbci	r19, 0x00	; 0
     4fa:	26 17       	cp	r18, r22
     4fc:	37 07       	cpc	r19, r23
     4fe:	9c f7       	brge	.-26     	; 0x4e6 <lcd_line_from_bottom+0x6e>
		res|=1<<y;
	}
	if(res) lcd_databits(SEND_DATA,res);
     500:	44 23       	and	r20, r20
     502:	21 f0       	breq	.+8      	; 0x50c <lcd_line_from_bottom+0x94>
     504:	82 e0       	ldi	r24, 0x02	; 2
     506:	64 2f       	mov	r22, r20
     508:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}
     50c:	cd b7       	in	r28, 0x3d	; 61
     50e:	de b7       	in	r29, 0x3e	; 62
     510:	e7 e0       	ldi	r30, 0x07	; 7
     512:	0c 94 ee 0f 	jmp	0x1fdc	; 0x1fdc <__epilogue_restores__+0x16>

00000516 <lcd_pixel_line_from_left>:

void lcd_pixel_line_from_left(uint8_t y, uint16_t v) {
     516:	a0 e0       	ldi	r26, 0x00	; 0
     518:	b0 e0       	ldi	r27, 0x00	; 0
     51a:	e1 e9       	ldi	r30, 0x91	; 145
     51c:	f2 e0       	ldi	r31, 0x02	; 2
     51e:	0c 94 d2 0f 	jmp	0x1fa4	; 0x1fa4 <__prologue_saves__+0x16>
     522:	d8 2e       	mov	r13, r24
     524:	7b 01       	movw	r14, r22
	uint16_t s=(v-v%8)/8,x;
     526:	8b 01       	movw	r16, r22
     528:	23 e0       	ldi	r18, 0x03	; 3
     52a:	16 95       	lsr	r17
     52c:	07 95       	ror	r16
     52e:	2a 95       	dec	r18
     530:	e1 f7       	brne	.-8      	; 0x52a <lcd_pixel_line_from_left+0x14>
     532:	c0 e0       	ldi	r28, 0x00	; 0
     534:	d0 e0       	ldi	r29, 0x00	; 0
     536:	09 c0       	rjmp	.+18     	; 0x54a <lcd_pixel_line_from_left+0x34>
	uint8_t r;
	for(x=0;x<s;x++) {
		lcd_goto(x,y);
     538:	8c 2f       	mov	r24, r28
     53a:	6d 2d       	mov	r22, r13
     53c:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_goto>
		lcd_databits(SEND_DATA,0xff);
     540:	82 e0       	ldi	r24, 0x02	; 2
     542:	6f ef       	ldi	r22, 0xFF	; 255
     544:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}

void lcd_pixel_line_from_left(uint8_t y, uint16_t v) {
	uint16_t s=(v-v%8)/8,x;
	uint8_t r;
	for(x=0;x<s;x++) {
     548:	21 96       	adiw	r28, 0x01	; 1
     54a:	c0 17       	cp	r28, r16
     54c:	d1 07       	cpc	r29, r17
     54e:	a0 f3       	brcs	.-24     	; 0x538 <lcd_pixel_line_from_left+0x22>
		lcd_goto(x,y);
		lcd_databits(SEND_DATA,0xff);
	}
	lcd_goto(x,y);
     550:	80 2f       	mov	r24, r16
     552:	6d 2d       	mov	r22, r13
     554:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_goto>
	s=v%8;
     558:	b7 01       	movw	r22, r14
     55a:	67 70       	andi	r22, 0x07	; 7
     55c:	70 70       	andi	r23, 0x00	; 0
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e0       	ldi	r20, 0x00	; 0
	r=0;
	for(x=0;x<=s;x++) {
		r|=1<<(7-x);
     564:	a7 e0       	ldi	r26, 0x07	; 7
     566:	b0 e0       	ldi	r27, 0x00	; 0
     568:	e1 e0       	ldi	r30, 0x01	; 1
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	cd 01       	movw	r24, r26
     56e:	82 1b       	sub	r24, r18
     570:	93 0b       	sbc	r25, r19
     572:	ef 01       	movw	r28, r30
     574:	02 c0       	rjmp	.+4      	; 0x57a <lcd_pixel_line_from_left+0x64>
     576:	cc 0f       	add	r28, r28
     578:	dd 1f       	adc	r29, r29
     57a:	8a 95       	dec	r24
     57c:	e2 f7       	brpl	.-8      	; 0x576 <lcd_pixel_line_from_left+0x60>
     57e:	4c 2b       	or	r20, r28
		lcd_databits(SEND_DATA,0xff);
	}
	lcd_goto(x,y);
	s=v%8;
	r=0;
	for(x=0;x<=s;x++) {
     580:	2f 5f       	subi	r18, 0xFF	; 255
     582:	3f 4f       	sbci	r19, 0xFF	; 255
     584:	62 17       	cp	r22, r18
     586:	73 07       	cpc	r23, r19
     588:	88 f7       	brcc	.-30     	; 0x56c <lcd_pixel_line_from_left+0x56>
		r|=1<<(7-x);
	}
	lcd_databits(SEND_DATA,r);
     58a:	82 e0       	ldi	r24, 0x02	; 2
     58c:	64 2f       	mov	r22, r20
     58e:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}
     592:	cd b7       	in	r28, 0x3d	; 61
     594:	de b7       	in	r29, 0x3e	; 62
     596:	e7 e0       	ldi	r30, 0x07	; 7
     598:	0c 94 ee 0f 	jmp	0x1fdc	; 0x1fdc <__epilogue_restores__+0x16>

0000059c <lcd_yblockof>:
		x-=FONT_SIZE+1;
		n-=m;
		n/=10;
	}
}
inline uint8_t lcd_yblockof(uint8_t y) {
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	88 7f       	andi	r24, 0xF8	; 248
     5a0:	68 e0       	ldi	r22, 0x08	; 8
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <__divmodhi4>
     5a8:	86 2f       	mov	r24, r22
	return((y-y%8)/8);
}
     5aa:	08 95       	ret

000005ac <lcd_constx_line>:
void lcd_constx_line(uint8_t x,uint8_t ymin,uint8_t ymax) {
     5ac:	ef 92       	push	r14
     5ae:	ff 92       	push	r15
     5b0:	0f 93       	push	r16
     5b2:	1f 93       	push	r17
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
     5b8:	e8 2e       	mov	r14, r24
     5ba:	16 2f       	mov	r17, r22
     5bc:	f4 2e       	mov	r15, r20
     5be:	00 e0       	ldi	r16, 0x00	; 0
	static uint8_t buf;
	buf=0;
	while(ymin<=ymax) {
		buf|=1<<(ymin%8);
     5c0:	c1 e0       	ldi	r28, 0x01	; 1
     5c2:	d0 e0       	ldi	r29, 0x00	; 0
     5c4:	1e c0       	rjmp	.+60     	; 0x602 <lcd_constx_line+0x56>
     5c6:	81 2f       	mov	r24, r17
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	87 70       	andi	r24, 0x07	; 7
     5cc:	90 70       	andi	r25, 0x00	; 0
     5ce:	9e 01       	movw	r18, r28
     5d0:	08 2e       	mov	r0, r24
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <lcd_constx_line+0x2c>
     5d4:	22 0f       	add	r18, r18
     5d6:	33 1f       	adc	r19, r19
     5d8:	0a 94       	dec	r0
     5da:	e2 f7       	brpl	.-8      	; 0x5d4 <lcd_constx_line+0x28>
     5dc:	02 2b       	or	r16, r18
		if(((ymin%8)==7)||(ymin==ymax)) {
     5de:	07 97       	sbiw	r24, 0x07	; 7
     5e0:	11 f0       	breq	.+4      	; 0x5e6 <lcd_constx_line+0x3a>
     5e2:	1f 15       	cp	r17, r15
     5e4:	69 f4       	brne	.+26     	; 0x600 <lcd_constx_line+0x54>
			lcd_goto_xblock(x);
     5e6:	8e 2d       	mov	r24, r14
     5e8:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
			lcd_goto_yblock(lcd_yblockof(ymin));
     5ec:	81 2f       	mov	r24, r17
     5ee:	0e 94 ce 02 	call	0x59c	; 0x59c <lcd_yblockof>
     5f2:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
			lcd_databits(SEND_DATA,buf);
     5f6:	82 e0       	ldi	r24, 0x02	; 2
     5f8:	60 2f       	mov	r22, r16
     5fa:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
     5fe:	00 e0       	ldi	r16, 0x00	; 0
			buf=0;
		}
		ymin++;
     600:	1f 5f       	subi	r17, 0xFF	; 255
	return((y-y%8)/8);
}
void lcd_constx_line(uint8_t x,uint8_t ymin,uint8_t ymax) {
	static uint8_t buf;
	buf=0;
	while(ymin<=ymax) {
     602:	f1 16       	cp	r15, r17
     604:	00 f7       	brcc	.-64     	; 0x5c6 <lcd_constx_line+0x1a>
     606:	00 93 12 02 	sts	0x0212, r16
			lcd_databits(SEND_DATA,buf);
			buf=0;
		}
		ymin++;
	}
}
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	e6 e0       	ldi	r30, 0x06	; 6
     610:	0c 94 ef 0f 	jmp	0x1fde	; 0x1fde <__epilogue_restores__+0x18>

00000614 <buttons_update>:
	adc_check=10,
	adc_reset=4*ALL_N,
	adc_reset_c=0;

inline void buttons_update() {
	right_state1=right_state();
     614:	83 b1       	in	r24, 0x03	; 3
     616:	82 70       	andi	r24, 0x02	; 2
     618:	80 93 09 02 	sts	0x0209, r24
	left_state1=left_state();
     61c:	83 b1       	in	r24, 0x03	; 3
     61e:	84 70       	andi	r24, 0x04	; 4
     620:	80 93 08 02 	sts	0x0208, r24
	top_state1=top_state();
     624:	83 b1       	in	r24, 0x03	; 3
     626:	81 70       	andi	r24, 0x01	; 1
     628:	80 93 07 02 	sts	0x0207, r24
	up_state1=up_state();
     62c:	83 b1       	in	r24, 0x03	; 3
     62e:	80 71       	andi	r24, 0x10	; 16
     630:	80 93 0a 02 	sts	0x020A, r24
	down_state1=down_state();
     634:	83 b1       	in	r24, 0x03	; 3
     636:	80 72       	andi	r24, 0x20	; 32
     638:	80 93 0b 02 	sts	0x020B, r24
}
     63c:	08 95       	ret

0000063e <__vector_14>:

ISR(TIMER1_COMPB_vect) {
     63e:	1f 92       	push	r1
     640:	0f 92       	push	r0
     642:	0f b6       	in	r0, 0x3f	; 63
     644:	0f 92       	push	r0
     646:	11 24       	eor	r1, r1
     648:	8f 93       	push	r24
     64a:	ef 93       	push	r30
     64c:	ff 93       	push	r31
	TCNT1=0;
     64e:	10 92 85 00 	sts	0x0085, r1
     652:	10 92 84 00 	sts	0x0084, r1
	ADCSRA|=1<<6;
     656:	ea e7       	ldi	r30, 0x7A	; 122
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	80 81       	ld	r24, Z
     65c:	80 64       	ori	r24, 0x40	; 64
     65e:	80 83       	st	Z, r24
}
     660:	ff 91       	pop	r31
     662:	ef 91       	pop	r30
     664:	8f 91       	pop	r24
     666:	0f 90       	pop	r0
     668:	0f be       	out	0x3f, r0	; 63
     66a:	0f 90       	pop	r0
     66c:	1f 90       	pop	r1
     66e:	18 95       	reti

00000670 <__vector_24>:

ISR(ADC_vect) {
     670:	1f 92       	push	r1
     672:	0f 92       	push	r0
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	0f 92       	push	r0
     678:	11 24       	eor	r1, r1
     67a:	2f 93       	push	r18
     67c:	3f 93       	push	r19
     67e:	4f 93       	push	r20
     680:	5f 93       	push	r21
     682:	6f 93       	push	r22
     684:	7f 93       	push	r23
     686:	8f 93       	push	r24
     688:	9f 93       	push	r25
     68a:	af 93       	push	r26
     68c:	ef 93       	push	r30
     68e:	ff 93       	push	r31
	if((current<ALL_N)||mode==MODE_UART) {
     690:	80 91 06 02 	lds	r24, 0x0206
     694:	87 ff       	sbrs	r24, 7
     696:	05 c0       	rjmp	.+10     	; 0x6a2 <__vector_24+0x32>
     698:	80 91 f7 01 	lds	r24, 0x01F7
     69c:	85 30       	cpi	r24, 0x05	; 5
     69e:	09 f0       	breq	.+2      	; 0x6a2 <__vector_24+0x32>
     6a0:	72 c0       	rjmp	.+228    	; 0x786 <__vector_24+0x116>
		if(mode==MODE_UART) current=ALL_N-1;
     6a2:	a0 91 f7 01 	lds	r26, 0x01F7
     6a6:	a5 30       	cpi	r26, 0x05	; 5
     6a8:	19 f4       	brne	.+6      	; 0x6b0 <__vector_24+0x40>
     6aa:	8f e7       	ldi	r24, 0x7F	; 127
     6ac:	80 93 06 02 	sts	0x0206, r24
		if(mode==MODE_SIGNAL||mode==MODE_SPECTRUM||mode==MODE_DUAL||mode==MODE_UART_BUF) {
     6b0:	8a 2f       	mov	r24, r26
     6b2:	81 50       	subi	r24, 0x01	; 1
     6b4:	82 30       	cpi	r24, 0x02	; 2
     6b6:	28 f0       	brcs	.+10     	; 0x6c2 <__vector_24+0x52>
     6b8:	a4 30       	cpi	r26, 0x04	; 4
     6ba:	19 f0       	breq	.+6      	; 0x6c2 <__vector_24+0x52>
     6bc:	a6 30       	cpi	r26, 0x06	; 6
     6be:	09 f0       	breq	.+2      	; 0x6c2 <__vector_24+0x52>
     6c0:	42 c0       	rjmp	.+132    	; 0x746 <__vector_24+0xd6>
			if(adc_reset_c>=adc_reset) {
     6c2:	40 91 10 02 	lds	r20, 0x0210
     6c6:	50 91 11 02 	lds	r21, 0x0211
     6ca:	80 91 03 02 	lds	r24, 0x0203
     6ce:	90 91 04 02 	lds	r25, 0x0204
     6d2:	48 17       	cp	r20, r24
     6d4:	59 07       	cpc	r21, r25
     6d6:	38 f0       	brcs	.+14     	; 0x6e6 <__vector_24+0x76>
				adc_reset_c=0;
     6d8:	10 92 11 02 	sts	0x0211, r1
     6dc:	10 92 10 02 	sts	0x0210, r1
				array_filled=0;
     6e0:	10 92 0d 02 	sts	0x020D, r1
     6e4:	2d c0       	rjmp	.+90     	; 0x740 <__vector_24+0xd0>
				current=0;
				return;
			}
			if(array_filled&&(abs(ADC-capture[current])>adc_error)&&current<adc_check) {
     6e6:	80 91 0d 02 	lds	r24, 0x020D
     6ea:	88 23       	and	r24, r24
     6ec:	61 f1       	breq	.+88     	; 0x746 <__vector_24+0xd6>
     6ee:	80 91 78 00 	lds	r24, 0x0078
     6f2:	90 91 79 00 	lds	r25, 0x0079
     6f6:	20 91 78 00 	lds	r18, 0x0078
     6fa:	30 91 79 00 	lds	r19, 0x0079
     6fe:	80 91 06 02 	lds	r24, 0x0206
     702:	68 2f       	mov	r22, r24
     704:	70 e0       	ldi	r23, 0x00	; 0
     706:	fb 01       	movw	r30, r22
     708:	ee 0f       	add	r30, r30
     70a:	ff 1f       	adc	r31, r31
     70c:	ef 55       	subi	r30, 0x5F	; 95
     70e:	fb 4f       	sbci	r31, 0xFB	; 251
     710:	80 81       	ld	r24, Z
     712:	91 81       	ldd	r25, Z+1	; 0x01
     714:	28 1b       	sub	r18, r24
     716:	39 0b       	sbc	r19, r25
     718:	80 91 ff 01 	lds	r24, 0x01FF
     71c:	90 91 00 02 	lds	r25, 0x0200
     720:	82 17       	cp	r24, r18
     722:	93 07       	cpc	r25, r19
     724:	80 f4       	brcc	.+32     	; 0x746 <__vector_24+0xd6>
     726:	80 91 01 02 	lds	r24, 0x0201
     72a:	90 91 02 02 	lds	r25, 0x0202
     72e:	68 17       	cp	r22, r24
     730:	79 07       	cpc	r23, r25
     732:	48 f4       	brcc	.+18     	; 0x746 <__vector_24+0xd6>
				adc_reset_c++;
     734:	4f 5f       	subi	r20, 0xFF	; 255
     736:	5f 4f       	sbci	r21, 0xFF	; 255
     738:	50 93 11 02 	sts	0x0211, r21
     73c:	40 93 10 02 	sts	0x0210, r20
				//error_storage=current;
				current=0;
     740:	10 92 06 02 	sts	0x0206, r1
     744:	20 c0       	rjmp	.+64     	; 0x786 <__vector_24+0x116>
				return;
			}
		}
		capture[current]=ADC>>1;
     746:	40 91 06 02 	lds	r20, 0x0206
     74a:	24 2f       	mov	r18, r20
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	80 91 78 00 	lds	r24, 0x0078
     752:	90 91 79 00 	lds	r25, 0x0079
     756:	f9 01       	movw	r30, r18
     758:	ee 0f       	add	r30, r30
     75a:	ff 1f       	adc	r31, r31
     75c:	ef 55       	subi	r30, 0x5F	; 95
     75e:	fb 4f       	sbci	r31, 0xFB	; 251
     760:	96 95       	lsr	r25
     762:	87 95       	ror	r24
     764:	91 83       	std	Z+1, r25	; 0x01
     766:	80 83       	st	Z, r24
		if(mode==MODE_XY) {
     768:	a3 30       	cpi	r26, 0x03	; 3
     76a:	41 f4       	brne	.+16     	; 0x77c <__vector_24+0x10c>
			if(!(current%2)) ADMUX=0b01100001;
     76c:	40 fd       	sbrc	r20, 0
     76e:	02 c0       	rjmp	.+4      	; 0x774 <__vector_24+0x104>
     770:	81 e6       	ldi	r24, 0x61	; 97
     772:	01 c0       	rjmp	.+2      	; 0x776 <__vector_24+0x106>
			else ADMUX=0b01100000;
     774:	80 e6       	ldi	r24, 0x60	; 96
     776:	80 93 7c 00 	sts	0x007C, r24
     77a:	02 c0       	rjmp	.+4      	; 0x780 <__vector_24+0x110>
		}
		if(mode!=MODE_UART) current++;
     77c:	a5 30       	cpi	r26, 0x05	; 5
     77e:	19 f0       	breq	.+6      	; 0x786 <__vector_24+0x116>
     780:	4f 5f       	subi	r20, 0xFF	; 255
     782:	40 93 06 02 	sts	0x0206, r20
	}
}
     786:	ff 91       	pop	r31
     788:	ef 91       	pop	r30
     78a:	af 91       	pop	r26
     78c:	9f 91       	pop	r25
     78e:	8f 91       	pop	r24
     790:	7f 91       	pop	r23
     792:	6f 91       	pop	r22
     794:	5f 91       	pop	r21
     796:	4f 91       	pop	r20
     798:	3f 91       	pop	r19
     79a:	2f 91       	pop	r18
     79c:	0f 90       	pop	r0
     79e:	0f be       	out	0x3f, r0	; 63
     7a0:	0f 90       	pop	r0
     7a2:	1f 90       	pop	r1
     7a4:	18 95       	reti

000007a6 <lcd_sym>:
  lcd_databits(SEND_CMD,0xc0);
  lcd_databits(SEND_CMD,0x40);
  lcd_databits(SEND_CMD,0xb8);
  lcd_all(0);
}
void lcd_sym(uint8_t sym) {
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
	static uint8_t t;
	for(t=0;t<5;t++)
     7ac:	10 92 13 02 	sts	0x0213, r1
		lcd_databits(SEND_DATA,eeprom_read_byte((uint8_t*) (5*sym+t)));
     7b0:	95 e0       	ldi	r25, 0x05	; 5
     7b2:	89 9f       	mul	r24, r25
     7b4:	e0 01       	movw	r28, r0
     7b6:	11 24       	eor	r1, r1
     7b8:	0c c0       	rjmp	.+24     	; 0x7d2 <lcd_sym+0x2c>
  lcd_databits(SEND_CMD,0xb8);
  lcd_all(0);
}
void lcd_sym(uint8_t sym) {
	static uint8_t t;
	for(t=0;t<5;t++)
     7ba:	ce 01       	movw	r24, r28
     7bc:	81 0f       	add	r24, r17
     7be:	91 1d       	adc	r25, r1
     7c0:	0e 94 20 10 	call	0x2040	; 0x2040 <__eerd_byte_m644>
     7c4:	68 2f       	mov	r22, r24
		lcd_databits(SEND_DATA,eeprom_read_byte((uint8_t*) (5*sym+t)));
     7c6:	82 e0       	ldi	r24, 0x02	; 2
     7c8:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
  lcd_databits(SEND_CMD,0xb8);
  lcd_all(0);
}
void lcd_sym(uint8_t sym) {
	static uint8_t t;
	for(t=0;t<5;t++)
     7cc:	1f 5f       	subi	r17, 0xFF	; 255
     7ce:	10 93 13 02 	sts	0x0213, r17
     7d2:	10 91 13 02 	lds	r17, 0x0213
     7d6:	15 30       	cpi	r17, 0x05	; 5
     7d8:	80 f3       	brcs	.-32     	; 0x7ba <lcd_sym+0x14>
		lcd_databits(SEND_DATA,eeprom_read_byte((uint8_t*) (5*sym+t)));
	lcd_databits(SEND_DATA,0);
     7da:	82 e0       	ldi	r24, 0x02	; 2
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
}
     7e2:	df 91       	pop	r29
     7e4:	cf 91       	pop	r28
     7e6:	1f 91       	pop	r17
     7e8:	08 95       	ret

000007ea <lcd_num_from_right>:
	for(x=0;x<=s;x++) {
		r|=1<<(7-x);
	}
	lcd_databits(SEND_DATA,r);
}
void lcd_num_from_right(unsigned int maxx,unsigned int y,unsigned int n) {
     7ea:	a0 e0       	ldi	r26, 0x00	; 0
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 d2 0f 	jmp	0x1fa4	; 0x1fa4 <__prologue_saves__+0x16>
     7f6:	d6 2e       	mov	r13, r22
     7f8:	ea 01       	movw	r28, r20
	short unsigned int m,x=maxx-FONT_SIZE-1;
     7fa:	2a ef       	ldi	r18, 0xFA	; 250
     7fc:	e2 2e       	mov	r14, r18
     7fe:	2f ef       	ldi	r18, 0xFF	; 255
     800:	f2 2e       	mov	r15, r18
     802:	e8 0e       	add	r14, r24
     804:	f9 1e       	adc	r15, r25
	if(!n) {
     806:	41 15       	cp	r20, r1
     808:	51 05       	cpc	r21, r1
     80a:	31 f5       	brne	.+76     	; 0x858 <lcd_num_from_right+0x6e>
		lcd_goto_xblock(x);
     80c:	8e 2d       	mov	r24, r14
     80e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
		lcd_goto_yblock(y);
     812:	8d 2d       	mov	r24, r13
     814:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
		lcd_sym('0');
     818:	80 e3       	ldi	r24, 0x30	; 48
     81a:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <lcd_sym>
     81e:	1c c0       	rjmp	.+56     	; 0x858 <lcd_num_from_right+0x6e>
	}
	while(n) {
		m=n%10;
     820:	ce 01       	movw	r24, r28
     822:	6a e0       	ldi	r22, 0x0A	; 10
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <__udivmodhi4>
     82a:	8c 01       	movw	r16, r24
		lcd_goto_xblock(x);
     82c:	8e 2d       	mov	r24, r14
     82e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
		lcd_goto_yblock(y);
     832:	8d 2d       	mov	r24, r13
     834:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
		lcd_sym('0'+m);
     838:	80 2f       	mov	r24, r16
     83a:	80 5d       	subi	r24, 0xD0	; 208
     83c:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <lcd_sym>
		x-=FONT_SIZE+1;
     840:	8a ef       	ldi	r24, 0xFA	; 250
     842:	9f ef       	ldi	r25, 0xFF	; 255
     844:	e8 0e       	add	r14, r24
     846:	f9 1e       	adc	r15, r25
		n-=m;
		n/=10;
     848:	ce 01       	movw	r24, r28
     84a:	80 1b       	sub	r24, r16
     84c:	91 0b       	sbc	r25, r17
     84e:	6a e0       	ldi	r22, 0x0A	; 10
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <__udivmodhi4>
     856:	eb 01       	movw	r28, r22
	if(!n) {
		lcd_goto_xblock(x);
		lcd_goto_yblock(y);
		lcd_sym('0');
	}
	while(n) {
     858:	20 97       	sbiw	r28, 0x00	; 0
     85a:	11 f7       	brne	.-60     	; 0x820 <lcd_num_from_right+0x36>
		lcd_sym('0'+m);
		x-=FONT_SIZE+1;
		n-=m;
		n/=10;
	}
}
     85c:	cd b7       	in	r28, 0x3d	; 61
     85e:	de b7       	in	r29, 0x3e	; 62
     860:	e7 e0       	ldi	r30, 0x07	; 7
     862:	0c 94 ee 0f 	jmp	0x1fdc	; 0x1fdc <__epilogue_restores__+0x16>

00000866 <lcd_str>:
		lcd_databits(SEND_DATA,eeprom_read_byte((uint8_t*) (5*sym+t)));
	lcd_databits(SEND_DATA,0);
}


void lcd_str(char* s,uint8_t x,uint8_t y) {
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
     870:	16 2f       	mov	r17, r22
     872:	04 2f       	mov	r16, r20
     874:	0a c0       	rjmp	.+20     	; 0x88a <lcd_str+0x24>
	while(*s) {
		if(x!=-1&&y!=-1) {
			lcd_goto_xblock(x);
     876:	81 2f       	mov	r24, r17
     878:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
			lcd_goto_yblock(y);
     87c:	80 2f       	mov	r24, r16
     87e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
		}
		lcd_sym(*s++);
     882:	89 91       	ld	r24, Y+
     884:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <lcd_sym>
		x+=6;
     888:	1a 5f       	subi	r17, 0xFA	; 250
	lcd_databits(SEND_DATA,0);
}


void lcd_str(char* s,uint8_t x,uint8_t y) {
	while(*s) {
     88a:	88 81       	ld	r24, Y
     88c:	88 23       	and	r24, r24
     88e:	99 f7       	brne	.-26     	; 0x876 <lcd_str+0x10>
			lcd_goto_yblock(y);
		}
		lcd_sym(*s++);
		x+=6;
	}
}
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	08 95       	ret

0000089a <main>:
		}
	}
	buttons_update();
}

int main() {
     89a:	4f 92       	push	r4
     89c:	5f 92       	push	r5
     89e:	6f 92       	push	r6
     8a0:	7f 92       	push	r7
     8a2:	8f 92       	push	r8
     8a4:	9f 92       	push	r9
     8a6:	af 92       	push	r10
     8a8:	bf 92       	push	r11
     8aa:	cf 92       	push	r12
     8ac:	df 92       	push	r13
     8ae:	ef 92       	push	r14
     8b0:	ff 92       	push	r15
     8b2:	1f 93       	push	r17
     8b4:	cf 93       	push	r28
     8b6:	df 93       	push	r29
// pins init
DDRB&=~(0x3f);
     8b8:	84 b1       	in	r24, 0x04	; 4
     8ba:	80 7c       	andi	r24, 0xC0	; 192
     8bc:	84 b9       	out	0x04, r24	; 4
DDRA|=1<<7;
     8be:	0f 9a       	sbi	0x01, 7	; 1
PORTA&=~(1<<7);
     8c0:	17 98       	cbi	0x02, 7	; 2
PORTB|=0x3f;
     8c2:	85 b1       	in	r24, 0x05	; 5
     8c4:	8f 63       	ori	r24, 0x3F	; 63
     8c6:	85 b9       	out	0x05, r24	; 5
#define BAUD 9600UL
#define UBRRVAL (F_CPU/(BAUD*16)-1)
#define U_M	1000
uint16_t u_c;
void uart_init() {
    UBRRH = UBRRVAL >> 8;
     8c8:	10 92 c5 00 	sts	0x00C5, r1
    UBRRL = UBRRVAL & 0xff;
     8cc:	81 e8       	ldi	r24, 0x81	; 129
     8ce:	80 93 c4 00 	sts	0x00C4, r24
    UCSRC = UCSRC_SELECT | (1 << UCSZ1) | (1 << UCSZ0);
     8d2:	86 e0       	ldi	r24, 0x06	; 6
     8d4:	80 93 c2 00 	sts	0x00C2, r24
    UCSRB = (1 << RXEN) | (1 << TXEN);
     8d8:	88 e1       	ldi	r24, 0x18	; 24
     8da:	80 93 c1 00 	sts	0x00C1, r24
uart_init();
lcd_init();
     8de:	0e 94 c2 01 	call	0x384	; 0x384 <lcd_init>
ADMUX=0b01100000;
     8e2:	80 e6       	ldi	r24, 0x60	; 96
     8e4:	80 93 7c 00 	sts	0x007C, r24
ADCSRA=0b11011101;
     8e8:	8d ed       	ldi	r24, 0xDD	; 221
     8ea:	80 93 7a 00 	sts	0x007A, r24
SPCR=0x53;
     8ee:	83 e5       	ldi	r24, 0x53	; 83
     8f0:	8c bd       	out	0x2c, r24	; 44


//button & adc interrupt init
TCCR0B=0b101;
     8f2:	85 e0       	ldi	r24, 0x05	; 5
     8f4:	85 bd       	out	0x25, r24	; 37
TIMSK0=1<<TOIE0;
     8f6:	21 e0       	ldi	r18, 0x01	; 1
     8f8:	20 93 6e 00 	sts	0x006E, r18
TIMSK1=(1<<OCIE1B);
     8fc:	84 e0       	ldi	r24, 0x04	; 4
     8fe:	80 93 6f 00 	sts	0x006F, r24
TCNT0=0x00;
     902:	16 bc       	out	0x26, r1	; 38
TCNT1=0x00;
     904:	10 92 85 00 	sts	0x0085, r1
     908:	10 92 84 00 	sts	0x0084, r1
adc_period=ADC_PERIOD_MIN;
     90c:	88 ec       	ldi	r24, 0xC8	; 200
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	90 93 8b 00 	sts	0x008B, r25
     914:	80 93 8a 00 	sts	0x008A, r24

TCCR1B=0b001;
     918:	20 93 81 00 	sts	0x0081, r18
sei();
     91c:	78 94       	sei
for(;;) {
	if(redraw_menu) {
     91e:	80 91 0c 02 	lds	r24, 0x020C
     922:	88 23       	and	r24, r24
     924:	09 f4       	brne	.+2      	; 0x928 <main+0x8e>
     926:	bc c1       	rjmp	.+888    	; 0xca0 <main+0x406>
			lcd_all(0);
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	0e 94 90 01 	call	0x320	; 0x320 <lcd_all>
			redraw_menu=0;
     92e:	10 92 0c 02 	sts	0x020C, r1
			if(menu_state>MENU_MAX) {
     932:	80 91 f9 01 	lds	r24, 0x01F9
     936:	89 30       	cpi	r24, 0x09	; 9
     938:	0c f4       	brge	.+2      	; 0x93c <main+0xa2>
     93a:	49 c1       	rjmp	.+658    	; 0xbce <main+0x334>
				if(menu_state==(MENU_MAX+MENU_ADCPERIOD)) {
     93c:	8a 30       	cpi	r24, 0x0A	; 10
     93e:	21 f5       	brne	.+72     	; 0x988 <main+0xee>
					lcd_str("adc period",0,0);
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	40 e0       	ldi	r20, 0x00	; 0
     948:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_pixel_line_from_left(1,(adc_period-ADC_PERIOD_MIN)>>3);
     94c:	60 91 8a 00 	lds	r22, 0x008A
     950:	70 91 8b 00 	lds	r23, 0x008B
     954:	68 5c       	subi	r22, 0xC8	; 200
     956:	70 40       	sbci	r23, 0x00	; 0
     958:	13 e0       	ldi	r17, 0x03	; 3
     95a:	76 95       	lsr	r23
     95c:	67 95       	ror	r22
     95e:	1a 95       	dec	r17
     960:	e1 f7       	brne	.-8      	; 0x95a <main+0xc0>
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	0e 94 8b 02 	call	0x516	; 0x516 <lcd_pixel_line_from_left>
					lcd_num_from_right(127,2,adc_period);
     968:	40 91 8a 00 	lds	r20, 0x008A
     96c:	50 91 8b 00 	lds	r21, 0x008B
     970:	8f e7       	ldi	r24, 0x7F	; 127
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	62 e0       	ldi	r22, 0x02	; 2
     976:	70 e0       	ldi	r23, 0x00	; 0
     978:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
					lcd_arrows(0,2);
     97c:	8b e0       	ldi	r24, 0x0B	; 11
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	60 e0       	ldi	r22, 0x00	; 0
     982:	42 e0       	ldi	r20, 0x02	; 2
     984:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_ABOUT)) {
     988:	80 91 f9 01 	lds	r24, 0x01F9
     98c:	80 31       	cpi	r24, 0x10	; 16
     98e:	b1 f5       	brne	.+108    	; 0x9fc <main+0x162>
					lcd_str("digital",0,0);
     990:	8f e0       	ldi	r24, 0x0F	; 15
     992:	91 e0       	ldi	r25, 0x01	; 1
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	40 e0       	ldi	r20, 0x00	; 0
     998:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("oscill.",10,1);
     99c:	87 e1       	ldi	r24, 0x17	; 23
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	6a e0       	ldi	r22, 0x0A	; 10
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("v1.0",0,2);
     9a8:	8f e1       	ldi	r24, 0x1F	; 31
     9aa:	91 e0       	ldi	r25, 0x01	; 1
     9ac:	60 e0       	ldi	r22, 0x00	; 0
     9ae:	42 e0       	ldi	r20, 0x02	; 2
     9b0:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("fft lib.",0,4);
     9b4:	84 e2       	ldi	r24, 0x24	; 36
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	44 e0       	ldi	r20, 0x04	; 4
     9bc:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("by chan",0,5);
     9c0:	8d e2       	ldi	r24, 0x2D	; 45
     9c2:	91 e0       	ldi	r25, 0x01	; 1
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	45 e0       	ldi	r20, 0x05	; 5
     9c8:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("sergey",64,0);
     9cc:	85 e3       	ldi	r24, 0x35	; 53
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	60 e4       	ldi	r22, 0x40	; 64
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("volodin",70,1);
     9d8:	8c e3       	ldi	r24, 0x3C	; 60
     9da:	91 e0       	ldi	r25, 0x01	; 1
     9dc:	66 e4       	ldi	r22, 0x46	; 70
     9de:	41 e0       	ldi	r20, 0x01	; 1
     9e0:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("2011",80,2);
     9e4:	84 e4       	ldi	r24, 0x44	; 68
     9e6:	91 e0       	ldi	r25, 0x01	; 1
     9e8:	60 e5       	ldi	r22, 0x50	; 80
     9ea:	42 e0       	ldi	r20, 0x02	; 2
     9ec:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("i.179e.net",64,4);
     9f0:	89 e4       	ldi	r24, 0x49	; 73
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	60 e4       	ldi	r22, 0x40	; 64
     9f6:	44 e0       	ldi	r20, 0x04	; 4
     9f8:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_LCDSKIP)) {
     9fc:	80 91 f9 01 	lds	r24, 0x01F9
     a00:	8e 30       	cpi	r24, 0x0E	; 14
     a02:	91 f4       	brne	.+36     	; 0xa28 <main+0x18e>
					lcd_str("lcd_skip",0,0);
     a04:	84 e5       	ldi	r24, 0x54	; 84
     a06:	91 e0       	ldi	r25, 0x01	; 1
     a08:	60 e0       	ldi	r22, 0x00	; 0
     a0a:	40 e0       	ldi	r20, 0x00	; 0
     a0c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_pixel_line_from_left(1,lcd_skip);
     a10:	60 91 fb 01 	lds	r22, 0x01FB
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	70 e0       	ldi	r23, 0x00	; 0
     a18:	0e 94 8b 02 	call	0x516	; 0x516 <lcd_pixel_line_from_left>
					lcd_arrows(0,2);
     a1c:	8b e0       	ldi	r24, 0x0B	; 11
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	60 e0       	ldi	r22, 0x00	; 0
     a22:	42 e0       	ldi	r20, 0x02	; 2
     a24:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_ADCSTEP)) {
     a28:	80 91 f9 01 	lds	r24, 0x01F9
     a2c:	8d 30       	cpi	r24, 0x0D	; 13
     a2e:	a9 f4       	brne	.+42     	; 0xa5a <main+0x1c0>
					lcd_str("adc p step",0,0);
     a30:	8d e5       	ldi	r24, 0x5D	; 93
     a32:	91 e0       	ldi	r25, 0x01	; 1
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	40 e0       	ldi	r20, 0x00	; 0
     a38:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_num_from_right(64,1,adc_step);
     a3c:	40 91 f8 01 	lds	r20, 0x01F8
     a40:	80 e4       	ldi	r24, 0x40	; 64
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	61 e0       	ldi	r22, 0x01	; 1
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	50 e0       	ldi	r21, 0x00	; 0
     a4a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
					lcd_arrows(0,2);
     a4e:	8b e0       	ldi	r24, 0x0B	; 11
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	42 e0       	ldi	r20, 0x02	; 2
     a56:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_ADCERROR)) {
     a5a:	80 91 f9 01 	lds	r24, 0x01F9
     a5e:	8c 30       	cpi	r24, 0x0C	; 12
     a60:	b1 f4       	brne	.+44     	; 0xa8e <main+0x1f4>
					lcd_str("adc error",0,0);
     a62:	88 e6       	ldi	r24, 0x68	; 104
     a64:	91 e0       	ldi	r25, 0x01	; 1
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_num_from_right(64,1,adc_error);
     a6e:	40 91 ff 01 	lds	r20, 0x01FF
     a72:	50 91 00 02 	lds	r21, 0x0200
     a76:	80 e4       	ldi	r24, 0x40	; 64
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	61 e0       	ldi	r22, 0x01	; 1
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
					lcd_arrows(0,2);
     a82:	8b e0       	ldi	r24, 0x0B	; 11
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	42 e0       	ldi	r20, 0x02	; 2
     a8a:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_ADCCHECK)) {
     a8e:	80 91 f9 01 	lds	r24, 0x01F9
     a92:	8b 30       	cpi	r24, 0x0B	; 11
     a94:	31 f5       	brne	.+76     	; 0xae2 <main+0x248>
					lcd_str("adc error",0,0);
     a96:	88 e6       	ldi	r24, 0x68	; 104
     a98:	91 e0       	ldi	r25, 0x01	; 1
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					if(adc_check) lcd_num_from_right(64,1,adc_check);
     aa2:	40 91 01 02 	lds	r20, 0x0201
     aa6:	50 91 02 02 	lds	r21, 0x0202
     aaa:	41 15       	cp	r20, r1
     aac:	51 05       	cpc	r21, r1
     aae:	39 f0       	breq	.+14     	; 0xabe <main+0x224>
     ab0:	80 e4       	ldi	r24, 0x40	; 64
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	61 e0       	ldi	r22, 0x01	; 1
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
     abc:	06 c0       	rjmp	.+12     	; 0xaca <main+0x230>
					else lcd_str("disabled",0,1);
     abe:	82 e7       	ldi	r24, 0x72	; 114
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	60 e0       	ldi	r22, 0x00	; 0
     ac4:	41 e0       	ldi	r20, 0x01	; 1
     ac6:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_str("0 to dsbl.",64,4);
     aca:	8b e7       	ldi	r24, 0x7B	; 123
     acc:	91 e0       	ldi	r25, 0x01	; 1
     ace:	60 e4       	ldi	r22, 0x40	; 64
     ad0:	44 e0       	ldi	r20, 0x04	; 4
     ad2:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_arrows(0,2);
     ad6:	8b e0       	ldi	r24, 0x0B	; 11
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	60 e0       	ldi	r22, 0x00	; 0
     adc:	42 e0       	ldi	r20, 0x02	; 2
     ade:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_SPECTRUMSCALE)) {
     ae2:	80 91 f9 01 	lds	r24, 0x01F9
     ae6:	8f 30       	cpi	r24, 0x0F	; 15
     ae8:	c9 f4       	brne	.+50     	; 0xb1c <main+0x282>
					lcd_str("sp. scale",0,0);
     aea:	86 e8       	ldi	r24, 0x86	; 134
     aec:	91 e0       	ldi	r25, 0x01	; 1
     aee:	60 e0       	ldi	r22, 0x00	; 0
     af0:	40 e0       	ldi	r20, 0x00	; 0
     af2:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					if(spectrum_scale) lcd_str("enabled",0,1);
     af6:	80 91 0f 02 	lds	r24, 0x020F
     afa:	88 23       	and	r24, r24
     afc:	19 f0       	breq	.+6      	; 0xb04 <main+0x26a>
     afe:	80 e9       	ldi	r24, 0x90	; 144
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	02 c0       	rjmp	.+4      	; 0xb08 <main+0x26e>
					else lcd_str("disabled",0,1);
     b04:	82 e7       	ldi	r24, 0x72	; 114
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	60 e0       	ldi	r22, 0x00	; 0
     b0a:	41 e0       	ldi	r20, 0x01	; 1
     b0c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					lcd_arrows(0,2);
     b10:	8b e0       	ldi	r24, 0x0B	; 11
     b12:	91 e0       	ldi	r25, 0x01	; 1
     b14:	60 e0       	ldi	r22, 0x00	; 0
     b16:	42 e0       	ldi	r20, 0x02	; 2
     b18:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				}
				if(menu_state==(MENU_MAX+MENU_MODE)) {
     b1c:	80 91 f9 01 	lds	r24, 0x01F9
     b20:	89 30       	cpi	r24, 0x09	; 9
     b22:	09 f0       	breq	.+2      	; 0xb26 <main+0x28c>
     b24:	bd c0       	rjmp	.+378    	; 0xca0 <main+0x406>
					lcd_str("mode",0,0);
     b26:	88 e9       	ldi	r24, 0x98	; 152
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	60 e0       	ldi	r22, 0x00	; 0
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
					if(mode==MODE_SIGNAL) {
     b32:	80 91 f7 01 	lds	r24, 0x01F7
     b36:	81 30       	cpi	r24, 0x01	; 1
     b38:	19 f4       	brne	.+6      	; 0xb40 <main+0x2a6>
						lcd_str("signal",0,1);
     b3a:	8d e9       	ldi	r24, 0x9D	; 157
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	a6 c0       	rjmp	.+332    	; 0xc8c <main+0x3f2>
					}
					else if(mode==MODE_SPECTRUM) {
     b40:	82 30       	cpi	r24, 0x02	; 2
     b42:	19 f4       	brne	.+6      	; 0xb4a <main+0x2b0>
						lcd_str("spectrum",0,1);
     b44:	84 ea       	ldi	r24, 0xA4	; 164
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	09 c0       	rjmp	.+18     	; 0xb5c <main+0x2c2>
						if(mode==MODE_SPECTRUM||mode==MODE_DUAL) fft_maxfreq();
					}
					else if(mode==MODE_XY) {
     b4a:	83 30       	cpi	r24, 0x03	; 3
     b4c:	19 f4       	brne	.+6      	; 0xb54 <main+0x2ba>
						lcd_str("xy",0,1);
     b4e:	85 eb       	ldi	r24, 0xB5	; 181
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	9c c0       	rjmp	.+312    	; 0xc8c <main+0x3f2>
					}
					else if(mode==MODE_DUAL) {
     b54:	84 30       	cpi	r24, 0x04	; 4
     b56:	81 f5       	brne	.+96     	; 0xbb8 <main+0x31e>
						lcd_str("dual",0,1);
     b58:	88 eb       	ldi	r24, 0xB8	; 184
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	41 e0       	ldi	r20, 0x01	; 1
     b60:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
						if(mode==MODE_SPECTRUM||mode==MODE_DUAL) fft_maxfreq();
     b64:	80 91 f7 01 	lds	r24, 0x01F7
     b68:	82 30       	cpi	r24, 0x02	; 2
     b6a:	11 f0       	breq	.+4      	; 0xb70 <main+0x2d6>
     b6c:	84 30       	cpi	r24, 0x04	; 4
     b6e:	31 f4       	brne	.+12     	; 0xb7c <main+0x2e2>
     b70:	8d ea       	ldi	r24, 0xAD	; 173
     b72:	91 e0       	ldi	r25, 0x01	; 1
     b74:	60 e4       	ldi	r22, 0x40	; 64
     b76:	40 e0       	ldi	r20, 0x00	; 0
     b78:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
     b7c:	20 91 8a 00 	lds	r18, 0x008A
     b80:	30 91 8b 00 	lds	r19, 0x008B
     b84:	40 e0       	ldi	r20, 0x00	; 0
     b86:	50 e0       	ldi	r21, 0x00	; 0
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	7d e2       	ldi	r23, 0x2D	; 45
     b8c:	81 e3       	ldi	r24, 0x31	; 49
     b8e:	91 e0       	ldi	r25, 0x01	; 1
     b90:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
     b94:	b4 e0       	ldi	r27, 0x04	; 4
     b96:	55 95       	asr	r21
     b98:	47 95       	ror	r20
     b9a:	37 95       	ror	r19
     b9c:	27 95       	ror	r18
     b9e:	ba 95       	dec	r27
     ba0:	d1 f7       	brne	.-12     	; 0xb96 <main+0x2fc>
     ba2:	80 e8       	ldi	r24, 0x80	; 128
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	a9 01       	movw	r20, r18
     bac:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
     bb0:	82 eb       	ldi	r24, 0xB2	; 178
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	65 e7       	ldi	r22, 0x75	; 117
     bb6:	6b c0       	rjmp	.+214    	; 0xc8e <main+0x3f4>
					}
					else if(mode==MODE_UART) {
     bb8:	85 30       	cpi	r24, 0x05	; 5
     bba:	19 f4       	brne	.+6      	; 0xbc2 <main+0x328>
						lcd_str("uart",0,1);
     bbc:	8d eb       	ldi	r24, 0xBD	; 189
     bbe:	91 e0       	ldi	r25, 0x01	; 1
     bc0:	65 c0       	rjmp	.+202    	; 0xc8c <main+0x3f2>
					}
					else if(mode==MODE_UART_BUF) {
     bc2:	86 30       	cpi	r24, 0x06	; 6
     bc4:	09 f0       	breq	.+2      	; 0xbc8 <main+0x32e>
     bc6:	66 c0       	rjmp	.+204    	; 0xc94 <main+0x3fa>
						lcd_str("uart buf",0,1);
     bc8:	82 ec       	ldi	r24, 0xC2	; 194
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	5f c0       	rjmp	.+190    	; 0xc8c <main+0x3f2>
					}
					lcd_arrows(0,2);
				}
			}
			else if(menu_state!=-1) {
     bce:	8f 3f       	cpi	r24, 0xFF	; 255
     bd0:	09 f4       	brne	.+2      	; 0xbd4 <main+0x33a>
     bd2:	66 c0       	rjmp	.+204    	; 0xca0 <main+0x406>
				lcd_str("menu",0,0);
     bd4:	8b ec       	ldi	r24, 0xCB	; 203
     bd6:	91 e0       	ldi	r25, 0x01	; 1
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	40 e0       	ldi	r20, 0x00	; 0
     bdc:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_EXIT) lcd_str("exit",0,1);
     be0:	80 91 f9 01 	lds	r24, 0x01F9
     be4:	88 23       	and	r24, r24
     be6:	31 f4       	brne	.+12     	; 0xbf4 <main+0x35a>
     be8:	80 ed       	ldi	r24, 0xD0	; 208
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	60 e0       	ldi	r22, 0x00	; 0
     bee:	41 e0       	ldi	r20, 0x01	; 1
     bf0:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_ADCPERIOD) lcd_str("adc period",0,1);
     bf4:	80 91 f9 01 	lds	r24, 0x01F9
     bf8:	82 30       	cpi	r24, 0x02	; 2
     bfa:	31 f4       	brne	.+12     	; 0xc08 <main+0x36e>
     bfc:	80 e0       	ldi	r24, 0x00	; 0
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	41 e0       	ldi	r20, 0x01	; 1
     c04:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_ADCSTEP) lcd_str("adc p step",0,1);
     c08:	80 91 f9 01 	lds	r24, 0x01F9
     c0c:	85 30       	cpi	r24, 0x05	; 5
     c0e:	31 f4       	brne	.+12     	; 0xc1c <main+0x382>
     c10:	8d e5       	ldi	r24, 0x5D	; 93
     c12:	91 e0       	ldi	r25, 0x01	; 1
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	41 e0       	ldi	r20, 0x01	; 1
     c18:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_LCDSKIP) lcd_str("lcd skip",0,1);
     c1c:	80 91 f9 01 	lds	r24, 0x01F9
     c20:	86 30       	cpi	r24, 0x06	; 6
     c22:	31 f4       	brne	.+12     	; 0xc30 <main+0x396>
     c24:	85 ed       	ldi	r24, 0xD5	; 213
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	41 e0       	ldi	r20, 0x01	; 1
     c2c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_ADCCHECK) lcd_str("adc check",0,1);
     c30:	80 91 f9 01 	lds	r24, 0x01F9
     c34:	83 30       	cpi	r24, 0x03	; 3
     c36:	31 f4       	brne	.+12     	; 0xc44 <main+0x3aa>
     c38:	8e ed       	ldi	r24, 0xDE	; 222
     c3a:	91 e0       	ldi	r25, 0x01	; 1
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	41 e0       	ldi	r20, 0x01	; 1
     c40:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_ADCERROR) lcd_str("adc error",0,1);
     c44:	80 91 f9 01 	lds	r24, 0x01F9
     c48:	84 30       	cpi	r24, 0x04	; 4
     c4a:	31 f4       	brne	.+12     	; 0xc58 <main+0x3be>
     c4c:	88 e6       	ldi	r24, 0x68	; 104
     c4e:	91 e0       	ldi	r25, 0x01	; 1
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	41 e0       	ldi	r20, 0x01	; 1
     c54:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_SPECTRUMSCALE) lcd_str("sp. scale",0,1);
     c58:	80 91 f9 01 	lds	r24, 0x01F9
     c5c:	87 30       	cpi	r24, 0x07	; 7
     c5e:	31 f4       	brne	.+12     	; 0xc6c <main+0x3d2>
     c60:	86 e8       	ldi	r24, 0x86	; 134
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	41 e0       	ldi	r20, 0x01	; 1
     c68:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_ABOUT) lcd_str("about",0,1);
     c6c:	80 91 f9 01 	lds	r24, 0x01F9
     c70:	88 30       	cpi	r24, 0x08	; 8
     c72:	31 f4       	brne	.+12     	; 0xc80 <main+0x3e6>
     c74:	88 ee       	ldi	r24, 0xE8	; 232
     c76:	91 e0       	ldi	r25, 0x01	; 1
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	41 e0       	ldi	r20, 0x01	; 1
     c7c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				if(menu_state==MENU_MODE) lcd_str("mode",0,1);
     c80:	80 91 f9 01 	lds	r24, 0x01F9
     c84:	81 30       	cpi	r24, 0x01	; 1
     c86:	31 f4       	brne	.+12     	; 0xc94 <main+0x3fa>
     c88:	88 e9       	ldi	r24, 0x98	; 152
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	60 e0       	ldi	r22, 0x00	; 0
     c8e:	41 e0       	ldi	r20, 0x01	; 1
     c90:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				lcd_arrows(0,2);
     c94:	8b e0       	ldi	r24, 0x0B	; 11
     c96:	91 e0       	ldi	r25, 0x01	; 1
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	42 e0       	ldi	r20, 0x02	; 2
     c9c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
			}
		}
		//lcd_num_from_right(120,6,error_storage);
		if(current>=(ALL_N-1)) {
     ca0:	80 91 06 02 	lds	r24, 0x0206
     ca4:	8f 37       	cpi	r24, 0x7F	; 127
     ca6:	08 f4       	brcc	.+2      	; 0xcaa <main+0x410>
     ca8:	92 c2       	rjmp	.+1316   	; 0x11ce <__stack+0xcf>
			if(!array_filled) array_filled=1;
     caa:	80 91 0d 02 	lds	r24, 0x020D
     cae:	88 23       	and	r24, r24
     cb0:	19 f4       	brne	.+6      	; 0xcb8 <main+0x41e>
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	80 93 0d 02 	sts	0x020D, r24
			adc_reset_c=0;
     cb8:	10 92 11 02 	sts	0x0211, r1
     cbc:	10 92 10 02 	sts	0x0210, r1
			
			if(menu_state==-1) {
     cc0:	80 91 f9 01 	lds	r24, 0x01F9
     cc4:	90 91 f7 01 	lds	r25, 0x01F7
     cc8:	8f 3f       	cpi	r24, 0xFF	; 255
     cca:	09 f0       	breq	.+2      	; 0xcce <main+0x434>
     ccc:	3c c2       	rjmp	.+1144   	; 0x1146 <__stack+0x47>
				if((mode==MODE_SPECTRUM)||(mode==MODE_DUAL)) {
     cce:	92 30       	cpi	r25, 0x02	; 2
     cd0:	19 f0       	breq	.+6      	; 0xcd8 <main+0x43e>
     cd2:	94 30       	cpi	r25, 0x04	; 4
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <main+0x43e>
     cd6:	69 c0       	rjmp	.+210    	; 0xdaa <main+0x510>
						fft_input(capture, bfly_buff);
     cd8:	81 ea       	ldi	r24, 0xA1	; 161
     cda:	94 e0       	ldi	r25, 0x04	; 4
     cdc:	6b e1       	ldi	r22, 0x1B	; 27
     cde:	72 e0       	ldi	r23, 0x02	; 2
     ce0:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <fft_input>
						fft_execute(bfly_buff);
     ce4:	8b e1       	ldi	r24, 0x1B	; 27
     ce6:	92 e0       	ldi	r25, 0x02	; 2
     ce8:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <fft_execute>
						fft_output(bfly_buff, output);
     cec:	8b e1       	ldi	r24, 0x1B	; 27
     cee:	92 e0       	ldi	r25, 0x02	; 2
     cf0:	6b e1       	ldi	r22, 0x1B	; 27
     cf2:	74 e0       	ldi	r23, 0x04	; 4
     cf4:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <fft_output>
						for (m=0;m<ALL_N/2;m++) {
     cf8:	10 92 fa 01 	sts	0x01FA, r1
							if(spectrum_scale) s=output[m]>>5;
							else s=output[m]>>9;
							if(s>63) s=63;
     cfc:	1f e3       	ldi	r17, 0x3F	; 63
     cfe:	50 c0       	rjmp	.+160    	; 0xda0 <main+0x506>
				if((mode==MODE_SPECTRUM)||(mode==MODE_DUAL)) {
						fft_input(capture, bfly_buff);
						fft_execute(bfly_buff);
						fft_output(bfly_buff, output);
						for (m=0;m<ALL_N/2;m++) {
							if(spectrum_scale) s=output[m]>>5;
     d00:	80 91 0f 02 	lds	r24, 0x020F
     d04:	e9 2f       	mov	r30, r25
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	88 23       	and	r24, r24
     d0a:	61 f0       	breq	.+24     	; 0xd24 <main+0x48a>
     d0c:	ee 0f       	add	r30, r30
     d0e:	ff 1f       	adc	r31, r31
     d10:	e5 5e       	subi	r30, 0xE5	; 229
     d12:	fb 4f       	sbci	r31, 0xFB	; 251
     d14:	80 81       	ld	r24, Z
     d16:	91 81       	ldd	r25, Z+1	; 0x01
     d18:	e5 e0       	ldi	r30, 0x05	; 5
     d1a:	96 95       	lsr	r25
     d1c:	87 95       	ror	r24
     d1e:	ea 95       	dec	r30
     d20:	e1 f7       	brne	.-8      	; 0xd1a <main+0x480>
     d22:	06 c0       	rjmp	.+12     	; 0xd30 <main+0x496>
							else s=output[m]>>9;
     d24:	ee 0f       	add	r30, r30
     d26:	ff 1f       	adc	r31, r31
     d28:	e5 5e       	subi	r30, 0xE5	; 229
     d2a:	fb 4f       	sbci	r31, 0xFB	; 251
     d2c:	81 81       	ldd	r24, Z+1	; 0x01
     d2e:	86 95       	lsr	r24
     d30:	80 93 a0 04 	sts	0x04A0, r24
							if(s>63) s=63;
     d34:	80 91 a0 04 	lds	r24, 0x04A0
     d38:	80 34       	cpi	r24, 0x40	; 64
     d3a:	10 f0       	brcs	.+4      	; 0xd40 <main+0x4a6>
     d3c:	10 93 a0 04 	sts	0x04A0, r17
							if(s<0) s=0;
							for(u=0;u<7;u++) lcd_block(ALL_N/2+m,u,0);
     d40:	10 92 a7 05 	sts	0x05A7, r1
     d44:	0a c0       	rjmp	.+20     	; 0xd5a <main+0x4c0>
     d46:	82 2f       	mov	r24, r18
     d48:	80 5c       	subi	r24, 0xC0	; 192
     d4a:	40 e0       	ldi	r20, 0x00	; 0
     d4c:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
     d50:	80 91 a7 05 	lds	r24, 0x05A7
     d54:	8f 5f       	subi	r24, 0xFF	; 255
     d56:	80 93 a7 05 	sts	0x05A7, r24
     d5a:	60 91 a7 05 	lds	r22, 0x05A7
     d5e:	20 91 fa 01 	lds	r18, 0x01FA
     d62:	67 30       	cpi	r22, 0x07	; 7
     d64:	80 f3       	brcs	.-32     	; 0xd46 <main+0x4ac>
							if(!(m%8)) {
     d66:	82 2f       	mov	r24, r18
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	87 70       	andi	r24, 0x07	; 7
     d6c:	90 70       	andi	r25, 0x00	; 0
     d6e:	89 2b       	or	r24, r25
     d70:	59 f4       	brne	.+22     	; 0xd88 <main+0x4ee>
								lcd_goto_xblock(ALL_N/2+m);
     d72:	82 2f       	mov	r24, r18
     d74:	80 5c       	subi	r24, 0xC0	; 192
     d76:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_goto_xblock>
								lcd_goto_yblock(2);
     d7a:	82 e0       	ldi	r24, 0x02	; 2
     d7c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_goto_yblock>
								lcd_databits(SEND_DATA,0x1);
     d80:	82 e0       	ldi	r24, 0x02	; 2
     d82:	61 e0       	ldi	r22, 0x01	; 1
     d84:	0e 94 4d 01 	call	0x29a	; 0x29a <lcd_databits>
							}
							lcd_line_from_bottom(ALL_N/2+m,s);
     d88:	80 91 fa 01 	lds	r24, 0x01FA
     d8c:	80 5c       	subi	r24, 0xC0	; 192
     d8e:	60 91 a0 04 	lds	r22, 0x04A0
     d92:	0e 94 3c 02 	call	0x478	; 0x478 <lcd_line_from_bottom>
			if(menu_state==-1) {
				if((mode==MODE_SPECTRUM)||(mode==MODE_DUAL)) {
						fft_input(capture, bfly_buff);
						fft_execute(bfly_buff);
						fft_output(bfly_buff, output);
						for (m=0;m<ALL_N/2;m++) {
     d96:	80 91 fa 01 	lds	r24, 0x01FA
     d9a:	8f 5f       	subi	r24, 0xFF	; 255
     d9c:	80 93 fa 01 	sts	0x01FA, r24
     da0:	90 91 fa 01 	lds	r25, 0x01FA
     da4:	90 34       	cpi	r25, 0x40	; 64
     da6:	08 f4       	brcc	.+2      	; 0xdaa <main+0x510>
     da8:	ab cf       	rjmp	.-170    	; 0xd00 <main+0x466>
								lcd_databits(SEND_DATA,0x1);
							}
							lcd_line_from_bottom(ALL_N/2+m,s);
						}
				}
				if((mode==MODE_SIGNAL)||(mode==MODE_DUAL)) {
     daa:	80 91 f7 01 	lds	r24, 0x01F7
     dae:	81 30       	cpi	r24, 0x01	; 1
     db0:	19 f0       	breq	.+6      	; 0xdb8 <main+0x51e>
     db2:	84 30       	cpi	r24, 0x04	; 4
     db4:	09 f0       	breq	.+2      	; 0xdb8 <main+0x51e>
     db6:	7b c1       	rjmp	.+758    	; 0x10ae <main+0x814>
					if(lcd_skip_c>=lcd_skip) {
     db8:	90 91 fc 01 	lds	r25, 0x01FC
     dbc:	80 91 fb 01 	lds	r24, 0x01FB
     dc0:	98 17       	cp	r25, r24
     dc2:	08 f4       	brcc	.+2      	; 0xdc6 <main+0x52c>
     dc4:	70 c1       	rjmp	.+736    	; 0x10a6 <main+0x80c>
						lcd_skip_c=1;
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	80 93 fc 01 	sts	0x01FC, r24
						for(m=0;m<ALL_N;m++) {
     dcc:	10 92 fa 01 	sts	0x01FA, r1
								for(s=0;s<8;s++) lcd_block(m/2,s,0);
								lcd_constx_line(m/2,ymin,ymax);
								m++;
							}
							else {
								c=63-(capture[m]>>9);
     dd0:	cf e3       	ldi	r28, 0x3F	; 63
     dd2:	d0 e0       	ldi	r29, 0x00	; 0
     dd4:	63 c1       	rjmp	.+710    	; 0x109c <main+0x802>
				}
				if((mode==MODE_SIGNAL)||(mode==MODE_DUAL)) {
					if(lcd_skip_c>=lcd_skip) {
						lcd_skip_c=1;
						for(m=0;m<ALL_N;m++) {
							if(mode==MODE_DUAL)  {
     dd6:	80 91 f7 01 	lds	r24, 0x01F7
     dda:	a4 2f       	mov	r26, r20
     ddc:	b0 e0       	ldi	r27, 0x00	; 0
     dde:	84 30       	cpi	r24, 0x04	; 4
     de0:	09 f0       	breq	.+2      	; 0xde4 <main+0x54a>
     de2:	af c0       	rjmp	.+350    	; 0xf42 <main+0x6a8>
								c=63-(capture[m]>>9);
     de4:	fd 01       	movw	r30, r26
     de6:	ee 0f       	add	r30, r30
     de8:	ff 1f       	adc	r31, r31
     dea:	ef 55       	subi	r30, 0x5F	; 95
     dec:	fb 4f       	sbci	r31, 0xFB	; 251
     dee:	81 81       	ldd	r24, Z+1	; 0x01
     df0:	e8 2e       	mov	r14, r24
     df2:	e6 94       	lsr	r14
     df4:	ff 24       	eor	r15, r15
     df6:	9e 01       	movw	r18, r28
     df8:	2e 19       	sub	r18, r14
     dfa:	3f 09       	sbc	r19, r15
     dfc:	30 93 9f 04 	sts	0x049F, r19
     e00:	20 93 9e 04 	sts	0x049E, r18
								
								//prev
								if(m>1) {
     e04:	42 30       	cpi	r20, 0x02	; 2
     e06:	78 f1       	brcs	.+94     	; 0xe66 <main+0x5cc>
									c1=(63-(capture[m-2]>>9));
     e08:	fd 01       	movw	r30, r26
     e0a:	ee 0f       	add	r30, r30
     e0c:	ff 1f       	adc	r31, r31
     e0e:	e3 56       	subi	r30, 0x63	; 99
     e10:	fb 4f       	sbci	r31, 0xFB	; 251
     e12:	81 81       	ldd	r24, Z+1	; 0x01
     e14:	c8 2e       	mov	r12, r24
     e16:	c6 94       	lsr	r12
     e18:	dd 24       	eor	r13, r13
     e1a:	ce 01       	movw	r24, r28
     e1c:	8c 19       	sub	r24, r12
     e1e:	9d 09       	sbc	r25, r13
     e20:	90 93 9d 04 	sts	0x049D, r25
     e24:	80 93 9c 04 	sts	0x049C, r24
									if(c1<c) ymin=(c1+c)>>1;
     e28:	82 17       	cp	r24, r18
     e2a:	93 07       	cpc	r25, r19
     e2c:	40 f4       	brcc	.+16     	; 0xe3e <main+0x5a4>
     e2e:	82 0f       	add	r24, r18
     e30:	93 1f       	adc	r25, r19
     e32:	96 95       	lsr	r25
     e34:	87 95       	ror	r24
     e36:	90 93 a2 05 	sts	0x05A2, r25
     e3a:	80 93 a1 05 	sts	0x05A1, r24
									if(c1>c) ymax=(c1+c)>>1;
     e3e:	20 91 9c 04 	lds	r18, 0x049C
     e42:	30 91 9d 04 	lds	r19, 0x049D
     e46:	80 91 9e 04 	lds	r24, 0x049E
     e4a:	90 91 9f 04 	lds	r25, 0x049F
     e4e:	82 17       	cp	r24, r18
     e50:	93 07       	cpc	r25, r19
     e52:	88 f4       	brcc	.+34     	; 0xe76 <main+0x5dc>
     e54:	82 0f       	add	r24, r18
     e56:	93 1f       	adc	r25, r19
     e58:	96 95       	lsr	r25
     e5a:	87 95       	ror	r24
     e5c:	90 93 a6 05 	sts	0x05A6, r25
     e60:	80 93 a5 05 	sts	0x05A5, r24
     e64:	08 c0       	rjmp	.+16     	; 0xe76 <main+0x5dc>
								}
								else {
									ymin=c;
     e66:	30 93 a2 05 	sts	0x05A2, r19
     e6a:	20 93 a1 05 	sts	0x05A1, r18
									ymax=c;
     e6e:	30 93 a6 05 	sts	0x05A6, r19
     e72:	20 93 a5 05 	sts	0x05A5, r18
								}
								
								//next
								if(m<(ALL_N-2)) {
     e76:	4e 37       	cpi	r20, 0x7E	; 126
     e78:	08 f0       	brcs	.+2      	; 0xe7c <main+0x5e2>
     e7a:	42 c0       	rjmp	.+132    	; 0xf00 <main+0x666>
									c1=63-(capture[m+2]>>9);
     e7c:	aa 0f       	add	r26, r26
     e7e:	bb 1f       	adc	r27, r27
     e80:	ab 55       	subi	r26, 0x5B	; 91
     e82:	bb 4f       	sbci	r27, 0xFB	; 251
     e84:	11 96       	adiw	r26, 0x01	; 1
     e86:	8c 91       	ld	r24, X
     e88:	a8 2e       	mov	r10, r24
     e8a:	a6 94       	lsr	r10
     e8c:	bb 24       	eor	r11, r11
     e8e:	ce 01       	movw	r24, r28
     e90:	8a 19       	sub	r24, r10
     e92:	9b 09       	sbc	r25, r11
     e94:	90 93 9d 04 	sts	0x049D, r25
     e98:	80 93 9c 04 	sts	0x049C, r24
									if(c1<c) ymin=min(ymin,(c+c1)>>1);
     e9c:	20 91 9e 04 	lds	r18, 0x049E
     ea0:	30 91 9f 04 	lds	r19, 0x049F
     ea4:	82 17       	cp	r24, r18
     ea6:	93 07       	cpc	r25, r19
     ea8:	80 f4       	brcc	.+32     	; 0xeca <main+0x630>
     eaa:	82 0f       	add	r24, r18
     eac:	93 1f       	adc	r25, r19
     eae:	20 91 a1 05 	lds	r18, 0x05A1
     eb2:	30 91 a2 05 	lds	r19, 0x05A2
     eb6:	96 95       	lsr	r25
     eb8:	87 95       	ror	r24
     eba:	28 17       	cp	r18, r24
     ebc:	39 07       	cpc	r19, r25
     ebe:	08 f4       	brcc	.+2      	; 0xec2 <main+0x628>
     ec0:	c9 01       	movw	r24, r18
     ec2:	90 93 a2 05 	sts	0x05A2, r25
     ec6:	80 93 a1 05 	sts	0x05A1, r24
									if(c1>c) ymax=max(ymax,(c1+c)>>1);
     eca:	20 91 9c 04 	lds	r18, 0x049C
     ece:	30 91 9d 04 	lds	r19, 0x049D
     ed2:	80 91 9e 04 	lds	r24, 0x049E
     ed6:	90 91 9f 04 	lds	r25, 0x049F
     eda:	82 17       	cp	r24, r18
     edc:	93 07       	cpc	r25, r19
     ede:	80 f4       	brcc	.+32     	; 0xf00 <main+0x666>
     ee0:	82 0f       	add	r24, r18
     ee2:	93 1f       	adc	r25, r19
     ee4:	20 91 a5 05 	lds	r18, 0x05A5
     ee8:	30 91 a6 05 	lds	r19, 0x05A6
     eec:	96 95       	lsr	r25
     eee:	87 95       	ror	r24
     ef0:	82 17       	cp	r24, r18
     ef2:	93 07       	cpc	r25, r19
     ef4:	08 f4       	brcc	.+2      	; 0xef8 <main+0x65e>
     ef6:	c9 01       	movw	r24, r18
     ef8:	90 93 a6 05 	sts	0x05A6, r25
     efc:	80 93 a5 05 	sts	0x05A5, r24
								}
								for(s=0;s<8;s++) lcd_block(m/2,s,0);
     f00:	10 92 a0 04 	sts	0x04A0, r1
     f04:	0a c0       	rjmp	.+20     	; 0xf1a <main+0x680>
     f06:	82 2f       	mov	r24, r18
     f08:	86 95       	lsr	r24
     f0a:	40 e0       	ldi	r20, 0x00	; 0
     f0c:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
     f10:	80 91 a0 04 	lds	r24, 0x04A0
     f14:	8f 5f       	subi	r24, 0xFF	; 255
     f16:	80 93 a0 04 	sts	0x04A0, r24
     f1a:	60 91 a0 04 	lds	r22, 0x04A0
     f1e:	20 91 fa 01 	lds	r18, 0x01FA
     f22:	68 30       	cpi	r22, 0x08	; 8
     f24:	80 f3       	brcs	.-32     	; 0xf06 <main+0x66c>
								lcd_constx_line(m/2,ymin,ymax);
     f26:	82 2f       	mov	r24, r18
     f28:	86 95       	lsr	r24
     f2a:	60 91 a1 05 	lds	r22, 0x05A1
     f2e:	40 91 a5 05 	lds	r20, 0x05A5
     f32:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_constx_line>
								m++;
     f36:	80 91 fa 01 	lds	r24, 0x01FA
     f3a:	8f 5f       	subi	r24, 0xFF	; 255
     f3c:	80 93 fa 01 	sts	0x01FA, r24
     f40:	a8 c0       	rjmp	.+336    	; 0x1092 <main+0x7f8>
							}
							else {
								c=63-(capture[m]>>9);
     f42:	fd 01       	movw	r30, r26
     f44:	ee 0f       	add	r30, r30
     f46:	ff 1f       	adc	r31, r31
     f48:	ef 55       	subi	r30, 0x5F	; 95
     f4a:	fb 4f       	sbci	r31, 0xFB	; 251
     f4c:	81 81       	ldd	r24, Z+1	; 0x01
     f4e:	88 2e       	mov	r8, r24
     f50:	86 94       	lsr	r8
     f52:	99 24       	eor	r9, r9
     f54:	9e 01       	movw	r18, r28
     f56:	28 19       	sub	r18, r8
     f58:	39 09       	sbc	r19, r9
     f5a:	30 93 9f 04 	sts	0x049F, r19
     f5e:	20 93 9e 04 	sts	0x049E, r18
								
								//prev
								if(m) {
     f62:	44 23       	and	r20, r20
     f64:	79 f1       	breq	.+94     	; 0xfc4 <main+0x72a>
									c1=(63-(capture[m-1]>>9));
     f66:	fd 01       	movw	r30, r26
     f68:	ee 0f       	add	r30, r30
     f6a:	ff 1f       	adc	r31, r31
     f6c:	e1 56       	subi	r30, 0x61	; 97
     f6e:	fb 4f       	sbci	r31, 0xFB	; 251
     f70:	81 81       	ldd	r24, Z+1	; 0x01
     f72:	68 2e       	mov	r6, r24
     f74:	66 94       	lsr	r6
     f76:	77 24       	eor	r7, r7
     f78:	ce 01       	movw	r24, r28
     f7a:	86 19       	sub	r24, r6
     f7c:	97 09       	sbc	r25, r7
     f7e:	90 93 9d 04 	sts	0x049D, r25
     f82:	80 93 9c 04 	sts	0x049C, r24
									if(c1<c) ymin=(c1+c)>>1;
     f86:	82 17       	cp	r24, r18
     f88:	93 07       	cpc	r25, r19
     f8a:	40 f4       	brcc	.+16     	; 0xf9c <main+0x702>
     f8c:	82 0f       	add	r24, r18
     f8e:	93 1f       	adc	r25, r19
     f90:	96 95       	lsr	r25
     f92:	87 95       	ror	r24
     f94:	90 93 a2 05 	sts	0x05A2, r25
     f98:	80 93 a1 05 	sts	0x05A1, r24
									if(c1>c) ymax=(c1+c)>>1;
     f9c:	20 91 9c 04 	lds	r18, 0x049C
     fa0:	30 91 9d 04 	lds	r19, 0x049D
     fa4:	80 91 9e 04 	lds	r24, 0x049E
     fa8:	90 91 9f 04 	lds	r25, 0x049F
     fac:	82 17       	cp	r24, r18
     fae:	93 07       	cpc	r25, r19
     fb0:	90 f4       	brcc	.+36     	; 0xfd6 <main+0x73c>
     fb2:	82 0f       	add	r24, r18
     fb4:	93 1f       	adc	r25, r19
     fb6:	96 95       	lsr	r25
     fb8:	87 95       	ror	r24
     fba:	90 93 a6 05 	sts	0x05A6, r25
     fbe:	80 93 a5 05 	sts	0x05A5, r24
     fc2:	09 c0       	rjmp	.+18     	; 0xfd6 <main+0x73c>
								}
								else {
									ymin=c;
     fc4:	30 93 a2 05 	sts	0x05A2, r19
     fc8:	20 93 a1 05 	sts	0x05A1, r18
									ymax=c;
     fcc:	30 93 a6 05 	sts	0x05A6, r19
     fd0:	20 93 a5 05 	sts	0x05A5, r18
     fd4:	03 c0       	rjmp	.+6      	; 0xfdc <main+0x742>
								}
								
								//next
								if(m<(ALL_N-1)) {
     fd6:	4f 37       	cpi	r20, 0x7F	; 127
     fd8:	08 f0       	brcs	.+2      	; 0xfdc <main+0x742>
     fda:	42 c0       	rjmp	.+132    	; 0x1060 <main+0x7c6>
									c1=63-(capture[m+1]>>9);
     fdc:	aa 0f       	add	r26, r26
     fde:	bb 1f       	adc	r27, r27
     fe0:	ad 55       	subi	r26, 0x5D	; 93
     fe2:	bb 4f       	sbci	r27, 0xFB	; 251
     fe4:	11 96       	adiw	r26, 0x01	; 1
     fe6:	8c 91       	ld	r24, X
     fe8:	48 2e       	mov	r4, r24
     fea:	46 94       	lsr	r4
     fec:	55 24       	eor	r5, r5
     fee:	ce 01       	movw	r24, r28
     ff0:	84 19       	sub	r24, r4
     ff2:	95 09       	sbc	r25, r5
     ff4:	90 93 9d 04 	sts	0x049D, r25
     ff8:	80 93 9c 04 	sts	0x049C, r24
									if(c1<c) ymin=min(ymin,(c+c1)>>1);
     ffc:	20 91 9e 04 	lds	r18, 0x049E
    1000:	30 91 9f 04 	lds	r19, 0x049F
    1004:	82 17       	cp	r24, r18
    1006:	93 07       	cpc	r25, r19
    1008:	80 f4       	brcc	.+32     	; 0x102a <main+0x790>
    100a:	82 0f       	add	r24, r18
    100c:	93 1f       	adc	r25, r19
    100e:	20 91 a1 05 	lds	r18, 0x05A1
    1012:	30 91 a2 05 	lds	r19, 0x05A2
    1016:	96 95       	lsr	r25
    1018:	87 95       	ror	r24
    101a:	28 17       	cp	r18, r24
    101c:	39 07       	cpc	r19, r25
    101e:	08 f4       	brcc	.+2      	; 0x1022 <main+0x788>
    1020:	c9 01       	movw	r24, r18
    1022:	90 93 a2 05 	sts	0x05A2, r25
    1026:	80 93 a1 05 	sts	0x05A1, r24
									if(c1>c) ymax=max(ymax,(c1+c)>>1);
    102a:	20 91 9c 04 	lds	r18, 0x049C
    102e:	30 91 9d 04 	lds	r19, 0x049D
    1032:	80 91 9e 04 	lds	r24, 0x049E
    1036:	90 91 9f 04 	lds	r25, 0x049F
    103a:	82 17       	cp	r24, r18
    103c:	93 07       	cpc	r25, r19
    103e:	80 f4       	brcc	.+32     	; 0x1060 <main+0x7c6>
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	20 91 a5 05 	lds	r18, 0x05A5
    1048:	30 91 a6 05 	lds	r19, 0x05A6
    104c:	96 95       	lsr	r25
    104e:	87 95       	ror	r24
    1050:	82 17       	cp	r24, r18
    1052:	93 07       	cpc	r25, r19
    1054:	08 f4       	brcc	.+2      	; 0x1058 <main+0x7be>
    1056:	c9 01       	movw	r24, r18
    1058:	90 93 a6 05 	sts	0x05A6, r25
    105c:	80 93 a5 05 	sts	0x05A5, r24
								}
								for(s=0;s<8;s++) lcd_block(m,s,0);
    1060:	10 92 a0 04 	sts	0x04A0, r1
    1064:	0a c0       	rjmp	.+20     	; 0x107a <main+0x7e0>
    1066:	80 91 fa 01 	lds	r24, 0x01FA
    106a:	40 e0       	ldi	r20, 0x00	; 0
    106c:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
    1070:	80 91 a0 04 	lds	r24, 0x04A0
    1074:	8f 5f       	subi	r24, 0xFF	; 255
    1076:	80 93 a0 04 	sts	0x04A0, r24
    107a:	60 91 a0 04 	lds	r22, 0x04A0
    107e:	68 30       	cpi	r22, 0x08	; 8
    1080:	90 f3       	brcs	.-28     	; 0x1066 <main+0x7cc>
								lcd_constx_line(m,ymin,ymax);
    1082:	80 91 fa 01 	lds	r24, 0x01FA
    1086:	60 91 a1 05 	lds	r22, 0x05A1
    108a:	40 91 a5 05 	lds	r20, 0x05A5
    108e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_constx_line>
						}
				}
				if((mode==MODE_SIGNAL)||(mode==MODE_DUAL)) {
					if(lcd_skip_c>=lcd_skip) {
						lcd_skip_c=1;
						for(m=0;m<ALL_N;m++) {
    1092:	80 91 fa 01 	lds	r24, 0x01FA
    1096:	8f 5f       	subi	r24, 0xFF	; 255
    1098:	80 93 fa 01 	sts	0x01FA, r24
    109c:	40 91 fa 01 	lds	r20, 0x01FA
    10a0:	47 ff       	sbrs	r20, 7
    10a2:	99 ce       	rjmp	.-718    	; 0xdd6 <main+0x53c>
    10a4:	92 c0       	rjmp	.+292    	; 0x11ca <__stack+0xcb>
								for(s=0;s<8;s++) lcd_block(m,s,0);
								lcd_constx_line(m,ymin,ymax);
							}
						}
					}
					else lcd_skip_c++;
    10a6:	9f 5f       	subi	r25, 0xFF	; 255
    10a8:	90 93 fc 01 	sts	0x01FC, r25
    10ac:	8e c0       	rjmp	.+284    	; 0x11ca <__stack+0xcb>
				}
				else if(mode==MODE_XY) {
    10ae:	83 30       	cpi	r24, 0x03	; 3
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <main+0x81a>
    10b2:	8b c0       	rjmp	.+278    	; 0x11ca <__stack+0xcb>
					if(lcd_skip_c>=lcd_skip) {
    10b4:	90 91 fc 01 	lds	r25, 0x01FC
    10b8:	80 91 fb 01 	lds	r24, 0x01FB
    10bc:	98 17       	cp	r25, r24
    10be:	00 f1       	brcs	.+64     	; 0x1100 <__stack+0x1>
						lcd_skip_c=1;
    10c0:	81 e0       	ldi	r24, 0x01	; 1
    10c2:	80 93 fc 01 	sts	0x01FC, r24
						for(s=64;s<128;s++) {
    10c6:	80 e4       	ldi	r24, 0x40	; 64
    10c8:	14 c0       	rjmp	.+40     	; 0x10f2 <main+0x858>
							for(m=0;m<8;m++) lcd_block(s,m,0);
    10ca:	10 92 fa 01 	sts	0x01FA, r1
    10ce:	0a c0       	rjmp	.+20     	; 0x10e4 <main+0x84a>
    10d0:	80 91 a0 04 	lds	r24, 0x04A0
    10d4:	40 e0       	ldi	r20, 0x00	; 0
    10d6:	0e 94 80 01 	call	0x300	; 0x300 <lcd_block>
    10da:	80 91 fa 01 	lds	r24, 0x01FA
    10de:	8f 5f       	subi	r24, 0xFF	; 255
    10e0:	80 93 fa 01 	sts	0x01FA, r24
    10e4:	60 91 fa 01 	lds	r22, 0x01FA
    10e8:	68 30       	cpi	r22, 0x08	; 8
    10ea:	90 f3       	brcs	.-28     	; 0x10d0 <main+0x836>
					else lcd_skip_c++;
				}
				else if(mode==MODE_XY) {
					if(lcd_skip_c>=lcd_skip) {
						lcd_skip_c=1;
						for(s=64;s<128;s++) {
    10ec:	80 91 a0 04 	lds	r24, 0x04A0
    10f0:	8f 5f       	subi	r24, 0xFF	; 255
    10f2:	80 93 a0 04 	sts	0x04A0, r24
    10f6:	80 91 a0 04 	lds	r24, 0x04A0
    10fa:	87 ff       	sbrs	r24, 7
    10fc:	e6 cf       	rjmp	.-52     	; 0x10ca <main+0x830>
    10fe:	03 c0       	rjmp	.+6      	; 0x1106 <__stack+0x7>
							for(m=0;m<8;m++) lcd_block(s,m,0);
						}
					}
					else lcd_skip_c++;
    1100:	9f 5f       	subi	r25, 0xFF	; 255
    1102:	90 93 fc 01 	sts	0x01FC, r25
					
					for(s=0;s<128;s+=2) {
    1106:	10 92 a0 04 	sts	0x04A0, r1
						lcd_pixel_share(ALL_N/2+(capture[s]>>9),63-(capture[s+1]>>9));
    110a:	1f e3       	ldi	r17, 0x3F	; 63
    110c:	17 c0       	rjmp	.+46     	; 0x113c <__stack+0x3d>
    110e:	f0 e0       	ldi	r31, 0x00	; 0
    1110:	ee 0f       	add	r30, r30
    1112:	ff 1f       	adc	r31, r31
    1114:	df 01       	movw	r26, r30
    1116:	af 55       	subi	r26, 0x5F	; 95
    1118:	bb 4f       	sbci	r27, 0xFB	; 251
    111a:	11 96       	adiw	r26, 0x01	; 1
    111c:	8c 91       	ld	r24, X
    111e:	86 95       	lsr	r24
    1120:	ed 55       	subi	r30, 0x5D	; 93
    1122:	fb 4f       	sbci	r31, 0xFB	; 251
    1124:	91 81       	ldd	r25, Z+1	; 0x01
    1126:	96 95       	lsr	r25
    1128:	61 2f       	mov	r22, r17
    112a:	69 1b       	sub	r22, r25
    112c:	80 5c       	subi	r24, 0xC0	; 192
    112e:	0e 94 17 02 	call	0x42e	; 0x42e <lcd_pixel_share>
							for(m=0;m<8;m++) lcd_block(s,m,0);
						}
					}
					else lcd_skip_c++;
					
					for(s=0;s<128;s+=2) {
    1132:	80 91 a0 04 	lds	r24, 0x04A0
    1136:	8e 5f       	subi	r24, 0xFE	; 254
    1138:	80 93 a0 04 	sts	0x04A0, r24
    113c:	e0 91 a0 04 	lds	r30, 0x04A0
    1140:	e7 ff       	sbrs	r30, 7
    1142:	e5 cf       	rjmp	.-54     	; 0x110e <__stack+0xf>
    1144:	42 c0       	rjmp	.+132    	; 0x11ca <__stack+0xcb>
						lcd_pixel_share(ALL_N/2+(capture[s]>>9),63-(capture[s+1]>>9));
					}
				}
			}
			else if(mode==MODE_UART_BUF) {
    1146:	96 30       	cpi	r25, 0x06	; 6
    1148:	89 f5       	brne	.+98     	; 0x11ac <__stack+0xad>
				m=0;u=0;
    114a:	10 92 fa 01 	sts	0x01FA, r1
    114e:	10 92 a7 05 	sts	0x05A7, r1
				while(m<ALL_N) {
					s=capture[m++]>>7;
					if(s>=256) uart_communicate(254);
					else uart_communicate(s);
					if(u_c==U_M) u++;
					if(u>=10) m=ALL_N;
    1152:	10 e8       	ldi	r17, 0x80	; 128
    1154:	26 c0       	rjmp	.+76     	; 0x11a2 <__stack+0xa3>
				}
			}
			else if(mode==MODE_UART_BUF) {
				m=0;u=0;
				while(m<ALL_N) {
					s=capture[m++]>>7;
    1156:	e2 2f       	mov	r30, r18
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	ee 0f       	add	r30, r30
    115c:	ff 1f       	adc	r31, r31
    115e:	ef 55       	subi	r30, 0x5F	; 95
    1160:	fb 4f       	sbci	r31, 0xFB	; 251
    1162:	80 81       	ld	r24, Z
    1164:	91 81       	ldd	r25, Z+1	; 0x01
    1166:	88 0f       	add	r24, r24
    1168:	89 2f       	mov	r24, r25
    116a:	88 1f       	adc	r24, r24
    116c:	99 0b       	sbc	r25, r25
    116e:	91 95       	neg	r25
    1170:	80 93 a0 04 	sts	0x04A0, r24
    1174:	2f 5f       	subi	r18, 0xFF	; 255
    1176:	20 93 fa 01 	sts	0x01FA, r18
					if(s>=256) uart_communicate(254);
					else uart_communicate(s);
    117a:	0e 94 a2 00 	call	0x144	; 0x144 <uart_communicate>
					if(u_c==U_M) u++;
    117e:	80 91 a3 05 	lds	r24, 0x05A3
    1182:	90 91 a4 05 	lds	r25, 0x05A4
    1186:	88 5e       	subi	r24, 0xE8	; 232
    1188:	93 40       	sbci	r25, 0x03	; 3
    118a:	29 f4       	brne	.+10     	; 0x1196 <__stack+0x97>
    118c:	80 91 a7 05 	lds	r24, 0x05A7
    1190:	8f 5f       	subi	r24, 0xFF	; 255
    1192:	80 93 a7 05 	sts	0x05A7, r24
					if(u>=10) m=ALL_N;
    1196:	80 91 a7 05 	lds	r24, 0x05A7
    119a:	8a 30       	cpi	r24, 0x0A	; 10
    119c:	10 f0       	brcs	.+4      	; 0x11a2 <__stack+0xa3>
    119e:	10 93 fa 01 	sts	0x01FA, r17
					}
				}
			}
			else if(mode==MODE_UART_BUF) {
				m=0;u=0;
				while(m<ALL_N) {
    11a2:	20 91 fa 01 	lds	r18, 0x01FA
    11a6:	27 ff       	sbrs	r18, 7
    11a8:	d6 cf       	rjmp	.-84     	; 0x1156 <__stack+0x57>
    11aa:	0f c0       	rjmp	.+30     	; 0x11ca <__stack+0xcb>
					else uart_communicate(s);
					if(u_c==U_M) u++;
					if(u>=10) m=ALL_N;
				}
			}
			else if(mode==MODE_UART) {
    11ac:	95 30       	cpi	r25, 0x05	; 5
    11ae:	69 f4       	brne	.+26     	; 0x11ca <__stack+0xcb>
				s=capture[ALL_N-1]>>7;
    11b0:	80 91 9f 05 	lds	r24, 0x059F
    11b4:	90 91 a0 05 	lds	r25, 0x05A0
    11b8:	88 0f       	add	r24, r24
    11ba:	89 2f       	mov	r24, r25
    11bc:	88 1f       	adc	r24, r24
    11be:	99 0b       	sbc	r25, r25
    11c0:	91 95       	neg	r25
    11c2:	80 93 a0 04 	sts	0x04A0, r24
				if(s>=256) uart_communicate(254);
				else uart_communicate(s);
    11c6:	0e 94 a2 00 	call	0x144	; 0x144 <uart_communicate>
			}
			current=0;
    11ca:	10 92 06 02 	sts	0x0206, r1
		}
		asm("nop");
    11ce:	00 00       	nop
    11d0:	a6 cb       	rjmp	.-2228   	; 0x91e <main+0x84>

000011d2 <__vector_18>:
		if(mode!=MODE_UART) current++;
	}
}


ISR(TIMER0_OVF_vect) {
    11d2:	1f 92       	push	r1
    11d4:	0f 92       	push	r0
    11d6:	0f b6       	in	r0, 0x3f	; 63
    11d8:	0f 92       	push	r0
    11da:	11 24       	eor	r1, r1
    11dc:	1f 93       	push	r17
    11de:	2f 93       	push	r18
    11e0:	3f 93       	push	r19
    11e2:	4f 93       	push	r20
    11e4:	5f 93       	push	r21
    11e6:	6f 93       	push	r22
    11e8:	7f 93       	push	r23
    11ea:	8f 93       	push	r24
    11ec:	9f 93       	push	r25
    11ee:	af 93       	push	r26
    11f0:	bf 93       	push	r27
    11f2:	ef 93       	push	r30
    11f4:	ff 93       	push	r31
    11f6:	16 e0       	ldi	r17, 0x06	; 6
    11f8:	5b c0       	rjmp	.+182    	; 0x12b0 <__vector_18+0xde>
	while(!(pause_state())&&menu_state==-1) {
		if(mode==MODE_SPECTRUM||mode==MODE_DUAL) fft_maxfreq();
    11fa:	80 91 f7 01 	lds	r24, 0x01F7
    11fe:	82 30       	cpi	r24, 0x02	; 2
    1200:	11 f0       	breq	.+4      	; 0x1206 <__vector_18+0x34>
    1202:	84 30       	cpi	r24, 0x04	; 4
    1204:	31 f4       	brne	.+12     	; 0x1212 <__vector_18+0x40>
    1206:	8d ea       	ldi	r24, 0xAD	; 173
    1208:	91 e0       	ldi	r25, 0x01	; 1
    120a:	60 e4       	ldi	r22, 0x40	; 64
    120c:	40 e0       	ldi	r20, 0x00	; 0
    120e:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1212:	20 91 8a 00 	lds	r18, 0x008A
    1216:	30 91 8b 00 	lds	r19, 0x008B
    121a:	40 e0       	ldi	r20, 0x00	; 0
    121c:	50 e0       	ldi	r21, 0x00	; 0
    121e:	60 e0       	ldi	r22, 0x00	; 0
    1220:	7d e2       	ldi	r23, 0x2D	; 45
    1222:	81 e3       	ldi	r24, 0x31	; 49
    1224:	91 e0       	ldi	r25, 0x01	; 1
    1226:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    122a:	e4 e0       	ldi	r30, 0x04	; 4
    122c:	55 95       	asr	r21
    122e:	47 95       	ror	r20
    1230:	37 95       	ror	r19
    1232:	27 95       	ror	r18
    1234:	ea 95       	dec	r30
    1236:	d1 f7       	brne	.-12     	; 0x122c <__vector_18+0x5a>
    1238:	80 e8       	ldi	r24, 0x80	; 128
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	70 e0       	ldi	r23, 0x00	; 0
    1240:	a9 01       	movw	r20, r18
    1242:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
    1246:	82 eb       	ldi	r24, 0xB2	; 178
    1248:	91 e0       	ldi	r25, 0x01	; 1
    124a:	65 e7       	ldi	r22, 0x75	; 117
    124c:	41 e0       	ldi	r20, 0x01	; 1
    124e:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
		if(mode==MODE_SIGNAL||mode==MODE_DUAL) dfreq();
    1252:	80 91 f7 01 	lds	r24, 0x01F7
    1256:	81 30       	cpi	r24, 0x01	; 1
    1258:	11 f0       	breq	.+4      	; 0x125e <__vector_18+0x8c>
    125a:	84 30       	cpi	r24, 0x04	; 4
    125c:	31 f4       	brne	.+12     	; 0x126a <__vector_18+0x98>
    125e:	8e ee       	ldi	r24, 0xEE	; 238
    1260:	91 e0       	ldi	r25, 0x01	; 1
    1262:	60 e0       	ldi	r22, 0x00	; 0
    1264:	40 e0       	ldi	r20, 0x00	; 0
    1266:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    126a:	20 91 8a 00 	lds	r18, 0x008A
    126e:	30 91 8b 00 	lds	r19, 0x008B
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	50 e0       	ldi	r21, 0x00	; 0
    1276:	60 e8       	ldi	r22, 0x80	; 128
    1278:	76 e9       	ldi	r23, 0x96	; 150
    127a:	88 e9       	ldi	r24, 0x98	; 152
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    1282:	8f e3       	ldi	r24, 0x3F	; 63
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	a9 01       	movw	r20, r18
    128c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
		if(!top_state()&&top_state1) {
    1290:	18 99       	sbic	0x03, 0	; 3
    1292:	09 c0       	rjmp	.+18     	; 0x12a6 <__vector_18+0xd4>
    1294:	80 91 07 02 	lds	r24, 0x0207
    1298:	88 23       	and	r24, r24
    129a:	29 f0       	breq	.+10     	; 0x12a6 <__vector_18+0xd4>
			menu_state=0;
    129c:	10 92 f9 01 	sts	0x01F9, r1
			redraw_menu=1;
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	80 93 0c 02 	sts	0x020C, r24
		}
		buttons_update();
    12a6:	0e 94 0a 03 	call	0x614	; 0x614 <buttons_update>
    12aa:	81 2f       	mov	r24, r17
    12ac:	8a 95       	dec	r24
    12ae:	f1 f7       	brne	.-4      	; 0x12ac <__vector_18+0xda>
	}
}


ISR(TIMER0_OVF_vect) {
	while(!(pause_state())&&menu_state==-1) {
    12b0:	1b 99       	sbic	0x03, 3	; 3
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <__vector_18+0xec>
    12b4:	80 91 f9 01 	lds	r24, 0x01F9
    12b8:	8f 3f       	cpi	r24, 0xFF	; 255
    12ba:	09 f4       	brne	.+2      	; 0x12be <__vector_18+0xec>
    12bc:	9e cf       	rjmp	.-196    	; 0x11fa <__vector_18+0x28>
			redraw_menu=1;
		}
		buttons_update();
		delay_us(1);
	}
	if(menu_state==-1) {
    12be:	90 91 f9 01 	lds	r25, 0x01F9
    12c2:	9f 3f       	cpi	r25, 0xFF	; 255
    12c4:	09 f0       	breq	.+2      	; 0x12c8 <__vector_18+0xf6>
    12c6:	e5 c1       	rjmp	.+970    	; 0x1692 <__vector_18+0x4c0>
		if(!right_state()&&right_state1) {
    12c8:	19 99       	sbic	0x03, 1	; 3
    12ca:	7e c0       	rjmp	.+252    	; 0x13c8 <__vector_18+0x1f6>
    12cc:	80 91 09 02 	lds	r24, 0x0209
    12d0:	88 23       	and	r24, r24
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <__vector_18+0x104>
    12d4:	79 c0       	rjmp	.+242    	; 0x13c8 <__vector_18+0x1f6>
			incr_step(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX,adc_step);
    12d6:	20 91 8a 00 	lds	r18, 0x008A
    12da:	30 91 8b 00 	lds	r19, 0x008B
    12de:	60 91 f8 01 	lds	r22, 0x01F8
    12e2:	40 e0       	ldi	r20, 0x00	; 0
    12e4:	50 e0       	ldi	r21, 0x00	; 0
    12e6:	8f ef       	ldi	r24, 0xFF	; 255
    12e8:	9f ef       	ldi	r25, 0xFF	; 255
    12ea:	a0 e0       	ldi	r26, 0x00	; 0
    12ec:	b0 e0       	ldi	r27, 0x00	; 0
    12ee:	86 1b       	sub	r24, r22
    12f0:	91 09       	sbc	r25, r1
    12f2:	a1 09       	sbc	r26, r1
    12f4:	b1 09       	sbc	r27, r1
    12f6:	82 17       	cp	r24, r18
    12f8:	93 07       	cpc	r25, r19
    12fa:	a4 07       	cpc	r26, r20
    12fc:	b5 07       	cpc	r27, r21
    12fe:	1c f4       	brge	.+6      	; 0x1306 <__vector_18+0x134>
    1300:	88 ec       	ldi	r24, 0xC8	; 200
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	06 c0       	rjmp	.+12     	; 0x1312 <__vector_18+0x140>
    1306:	80 91 8a 00 	lds	r24, 0x008A
    130a:	90 91 8b 00 	lds	r25, 0x008B
    130e:	86 0f       	add	r24, r22
    1310:	91 1d       	adc	r25, r1
    1312:	90 93 8b 00 	sts	0x008B, r25
    1316:	80 93 8a 00 	sts	0x008A, r24
			if(mode==MODE_SPECTRUM||mode==MODE_DUAL) {
    131a:	80 91 f7 01 	lds	r24, 0x01F7
    131e:	82 30       	cpi	r24, 0x02	; 2
    1320:	19 f0       	breq	.+6      	; 0x1328 <__vector_18+0x156>
    1322:	84 30       	cpi	r24, 0x04	; 4
    1324:	09 f0       	breq	.+2      	; 0x1328 <__vector_18+0x156>
    1326:	09 c3       	rjmp	.+1554   	; 0x193a <__vector_18+0x768>
				fft_maxfreq();
    1328:	8d ea       	ldi	r24, 0xAD	; 173
    132a:	91 e0       	ldi	r25, 0x01	; 1
    132c:	60 e4       	ldi	r22, 0x40	; 64
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1334:	20 91 8a 00 	lds	r18, 0x008A
    1338:	30 91 8b 00 	lds	r19, 0x008B
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	7d e2       	ldi	r23, 0x2D	; 45
    1344:	81 e3       	ldi	r24, 0x31	; 49
    1346:	91 e0       	ldi	r25, 0x01	; 1
    1348:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    134c:	74 e0       	ldi	r23, 0x04	; 4
    134e:	55 95       	asr	r21
    1350:	47 95       	ror	r20
    1352:	37 95       	ror	r19
    1354:	27 95       	ror	r18
    1356:	7a 95       	dec	r23
    1358:	d1 f7       	brne	.-12     	; 0x134e <__vector_18+0x17c>
    135a:	80 e8       	ldi	r24, 0x80	; 128
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	60 e0       	ldi	r22, 0x00	; 0
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	a9 01       	movw	r20, r18
    1364:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
    1368:	82 eb       	ldi	r24, 0xB2	; 178
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	65 e7       	ldi	r22, 0x75	; 117
    136e:	41 e0       	ldi	r20, 0x01	; 1
    1370:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				dfreq();
    1374:	8e ee       	ldi	r24, 0xEE	; 238
    1376:	91 e0       	ldi	r25, 0x01	; 1
    1378:	60 e0       	ldi	r22, 0x00	; 0
    137a:	40 e0       	ldi	r20, 0x00	; 0
    137c:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1380:	20 91 8a 00 	lds	r18, 0x008A
    1384:	30 91 8b 00 	lds	r19, 0x008B
    1388:	40 e0       	ldi	r20, 0x00	; 0
    138a:	50 e0       	ldi	r21, 0x00	; 0
    138c:	60 e8       	ldi	r22, 0x80	; 128
    138e:	76 e9       	ldi	r23, 0x96	; 150
    1390:	88 e9       	ldi	r24, 0x98	; 152
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    1398:	8f e3       	ldi	r24, 0x3F	; 63
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	61 e0       	ldi	r22, 0x01	; 1
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	a9 01       	movw	r20, r18
    13a2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
				array_filled=0;
    13a6:	10 92 0d 02 	sts	0x020D, r1
    13aa:	28 ec       	ldi	r18, 0xC8	; 200
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    13ae:	48 e8       	ldi	r20, 0x88	; 136
    13b0:	53 e1       	ldi	r21, 0x13	; 19
    13b2:	03 c0       	rjmp	.+6      	; 0x13ba <__vector_18+0x1e8>
    13b4:	ca 01       	movw	r24, r20
    13b6:	01 97       	sbiw	r24, 0x01	; 1
    13b8:	f1 f7       	brne	.-4      	; 0x13b6 <__vector_18+0x1e4>
#include <avr/eeprom.h>

#define lcd_arrows(x,y) lcd_str("< >",x,y)

void delay_ms(unsigned int delay) {
	while(delay--)
    13ba:	21 50       	subi	r18, 0x01	; 1
    13bc:	30 40       	sbci	r19, 0x00	; 0
    13be:	8f ef       	ldi	r24, 0xFF	; 255
    13c0:	2f 3f       	cpi	r18, 0xFF	; 255
    13c2:	38 07       	cpc	r19, r24
    13c4:	b9 f7       	brne	.-18     	; 0x13b4 <__vector_18+0x1e2>
    13c6:	b9 c2       	rjmp	.+1394   	; 0x193a <__vector_18+0x768>
				delay_ms(200);
			}
		}
		else if(!left_state()&&left_state1) {
    13c8:	1a 99       	sbic	0x03, 2	; 3
    13ca:	77 c0       	rjmp	.+238    	; 0x14ba <__vector_18+0x2e8>
    13cc:	80 91 08 02 	lds	r24, 0x0208
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <__vector_18+0x204>
    13d4:	72 c0       	rjmp	.+228    	; 0x14ba <__vector_18+0x2e8>
			decr_step(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX,adc_step);
    13d6:	20 91 8a 00 	lds	r18, 0x008A
    13da:	30 91 8b 00 	lds	r19, 0x008B
    13de:	80 91 f8 01 	lds	r24, 0x01F8
    13e2:	48 2f       	mov	r20, r24
    13e4:	50 e0       	ldi	r21, 0x00	; 0
    13e6:	ca 01       	movw	r24, r20
    13e8:	88 53       	subi	r24, 0x38	; 56
    13ea:	9f 4f       	sbci	r25, 0xFF	; 255
    13ec:	28 17       	cp	r18, r24
    13ee:	39 07       	cpc	r19, r25
    13f0:	18 f4       	brcc	.+6      	; 0x13f8 <__vector_18+0x226>
    13f2:	8f ef       	ldi	r24, 0xFF	; 255
    13f4:	9f ef       	ldi	r25, 0xFF	; 255
    13f6:	06 c0       	rjmp	.+12     	; 0x1404 <__vector_18+0x232>
    13f8:	80 91 8a 00 	lds	r24, 0x008A
    13fc:	90 91 8b 00 	lds	r25, 0x008B
    1400:	84 1b       	sub	r24, r20
    1402:	95 0b       	sbc	r25, r21
    1404:	90 93 8b 00 	sts	0x008B, r25
    1408:	80 93 8a 00 	sts	0x008A, r24
			if(mode==MODE_SPECTRUM||mode==MODE_DUAL) {
    140c:	80 91 f7 01 	lds	r24, 0x01F7
    1410:	82 30       	cpi	r24, 0x02	; 2
    1412:	19 f0       	breq	.+6      	; 0x141a <__vector_18+0x248>
    1414:	84 30       	cpi	r24, 0x04	; 4
    1416:	09 f0       	breq	.+2      	; 0x141a <__vector_18+0x248>
    1418:	90 c2       	rjmp	.+1312   	; 0x193a <__vector_18+0x768>
				fft_maxfreq();
    141a:	8d ea       	ldi	r24, 0xAD	; 173
    141c:	91 e0       	ldi	r25, 0x01	; 1
    141e:	60 e4       	ldi	r22, 0x40	; 64
    1420:	40 e0       	ldi	r20, 0x00	; 0
    1422:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1426:	20 91 8a 00 	lds	r18, 0x008A
    142a:	30 91 8b 00 	lds	r19, 0x008B
    142e:	40 e0       	ldi	r20, 0x00	; 0
    1430:	50 e0       	ldi	r21, 0x00	; 0
    1432:	60 e0       	ldi	r22, 0x00	; 0
    1434:	7d e2       	ldi	r23, 0x2D	; 45
    1436:	81 e3       	ldi	r24, 0x31	; 49
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    143e:	64 e0       	ldi	r22, 0x04	; 4
    1440:	55 95       	asr	r21
    1442:	47 95       	ror	r20
    1444:	37 95       	ror	r19
    1446:	27 95       	ror	r18
    1448:	6a 95       	dec	r22
    144a:	d1 f7       	brne	.-12     	; 0x1440 <__vector_18+0x26e>
    144c:	80 e8       	ldi	r24, 0x80	; 128
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	60 e0       	ldi	r22, 0x00	; 0
    1452:	70 e0       	ldi	r23, 0x00	; 0
    1454:	a9 01       	movw	r20, r18
    1456:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
    145a:	82 eb       	ldi	r24, 0xB2	; 178
    145c:	91 e0       	ldi	r25, 0x01	; 1
    145e:	65 e7       	ldi	r22, 0x75	; 117
    1460:	41 e0       	ldi	r20, 0x01	; 1
    1462:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				dfreq();
    1466:	8e ee       	ldi	r24, 0xEE	; 238
    1468:	91 e0       	ldi	r25, 0x01	; 1
    146a:	60 e0       	ldi	r22, 0x00	; 0
    146c:	40 e0       	ldi	r20, 0x00	; 0
    146e:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1472:	20 91 8a 00 	lds	r18, 0x008A
    1476:	30 91 8b 00 	lds	r19, 0x008B
    147a:	40 e0       	ldi	r20, 0x00	; 0
    147c:	50 e0       	ldi	r21, 0x00	; 0
    147e:	60 e8       	ldi	r22, 0x80	; 128
    1480:	76 e9       	ldi	r23, 0x96	; 150
    1482:	88 e9       	ldi	r24, 0x98	; 152
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    148a:	8f e3       	ldi	r24, 0x3F	; 63
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	61 e0       	ldi	r22, 0x01	; 1
    1490:	70 e0       	ldi	r23, 0x00	; 0
    1492:	a9 01       	movw	r20, r18
    1494:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
				array_filled=0;
    1498:	10 92 0d 02 	sts	0x020D, r1
    149c:	28 ec       	ldi	r18, 0xC8	; 200
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	48 e8       	ldi	r20, 0x88	; 136
    14a2:	53 e1       	ldi	r21, 0x13	; 19
    14a4:	03 c0       	rjmp	.+6      	; 0x14ac <__vector_18+0x2da>
    14a6:	ca 01       	movw	r24, r20
    14a8:	01 97       	sbiw	r24, 0x01	; 1
    14aa:	f1 f7       	brne	.-4      	; 0x14a8 <__vector_18+0x2d6>
    14ac:	21 50       	subi	r18, 0x01	; 1
    14ae:	30 40       	sbci	r19, 0x00	; 0
    14b0:	8f ef       	ldi	r24, 0xFF	; 255
    14b2:	2f 3f       	cpi	r18, 0xFF	; 255
    14b4:	38 07       	cpc	r19, r24
    14b6:	b9 f7       	brne	.-18     	; 0x14a6 <__vector_18+0x2d4>
    14b8:	40 c2       	rjmp	.+1152   	; 0x193a <__vector_18+0x768>
				delay_ms(200);
			}
		}
		else if(!up_state()&&up_state1) {
    14ba:	1c 99       	sbic	0x03, 4	; 3
    14bc:	6f c0       	rjmp	.+222    	; 0x159c <__vector_18+0x3ca>
    14be:	80 91 0a 02 	lds	r24, 0x020A
    14c2:	88 23       	and	r24, r24
    14c4:	09 f4       	brne	.+2      	; 0x14c8 <__vector_18+0x2f6>
    14c6:	6a c0       	rjmp	.+212    	; 0x159c <__vector_18+0x3ca>
			increment(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX);
    14c8:	80 91 8a 00 	lds	r24, 0x008A
    14cc:	90 91 8b 00 	lds	r25, 0x008B
    14d0:	8f 5f       	subi	r24, 0xFF	; 255
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	19 f4       	brne	.+6      	; 0x14dc <__vector_18+0x30a>
    14d6:	88 ec       	ldi	r24, 0xC8	; 200
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	05 c0       	rjmp	.+10     	; 0x14e6 <__vector_18+0x314>
    14dc:	80 91 8a 00 	lds	r24, 0x008A
    14e0:	90 91 8b 00 	lds	r25, 0x008B
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	90 93 8b 00 	sts	0x008B, r25
    14ea:	80 93 8a 00 	sts	0x008A, r24
			if(mode==MODE_SPECTRUM||mode==MODE_DUAL) {
    14ee:	80 91 f7 01 	lds	r24, 0x01F7
    14f2:	82 30       	cpi	r24, 0x02	; 2
    14f4:	19 f0       	breq	.+6      	; 0x14fc <__vector_18+0x32a>
    14f6:	84 30       	cpi	r24, 0x04	; 4
    14f8:	09 f0       	breq	.+2      	; 0x14fc <__vector_18+0x32a>
    14fa:	1f c2       	rjmp	.+1086   	; 0x193a <__vector_18+0x768>
				fft_maxfreq();
    14fc:	8d ea       	ldi	r24, 0xAD	; 173
    14fe:	91 e0       	ldi	r25, 0x01	; 1
    1500:	60 e4       	ldi	r22, 0x40	; 64
    1502:	40 e0       	ldi	r20, 0x00	; 0
    1504:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1508:	20 91 8a 00 	lds	r18, 0x008A
    150c:	30 91 8b 00 	lds	r19, 0x008B
    1510:	40 e0       	ldi	r20, 0x00	; 0
    1512:	50 e0       	ldi	r21, 0x00	; 0
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	7d e2       	ldi	r23, 0x2D	; 45
    1518:	81 e3       	ldi	r24, 0x31	; 49
    151a:	91 e0       	ldi	r25, 0x01	; 1
    151c:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    1520:	94 e0       	ldi	r25, 0x04	; 4
    1522:	55 95       	asr	r21
    1524:	47 95       	ror	r20
    1526:	37 95       	ror	r19
    1528:	27 95       	ror	r18
    152a:	9a 95       	dec	r25
    152c:	d1 f7       	brne	.-12     	; 0x1522 <__vector_18+0x350>
    152e:	80 e8       	ldi	r24, 0x80	; 128
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	a9 01       	movw	r20, r18
    1538:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
    153c:	82 eb       	ldi	r24, 0xB2	; 178
    153e:	91 e0       	ldi	r25, 0x01	; 1
    1540:	65 e7       	ldi	r22, 0x75	; 117
    1542:	41 e0       	ldi	r20, 0x01	; 1
    1544:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				dfreq();
    1548:	8e ee       	ldi	r24, 0xEE	; 238
    154a:	91 e0       	ldi	r25, 0x01	; 1
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	40 e0       	ldi	r20, 0x00	; 0
    1550:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1554:	20 91 8a 00 	lds	r18, 0x008A
    1558:	30 91 8b 00 	lds	r19, 0x008B
    155c:	40 e0       	ldi	r20, 0x00	; 0
    155e:	50 e0       	ldi	r21, 0x00	; 0
    1560:	60 e8       	ldi	r22, 0x80	; 128
    1562:	76 e9       	ldi	r23, 0x96	; 150
    1564:	88 e9       	ldi	r24, 0x98	; 152
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    156c:	8f e3       	ldi	r24, 0x3F	; 63
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	61 e0       	ldi	r22, 0x01	; 1
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	a9 01       	movw	r20, r18
    1576:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
				array_filled=0;
    157a:	10 92 0d 02 	sts	0x020D, r1
    157e:	28 ec       	ldi	r18, 0xC8	; 200
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	48 e8       	ldi	r20, 0x88	; 136
    1584:	53 e1       	ldi	r21, 0x13	; 19
    1586:	03 c0       	rjmp	.+6      	; 0x158e <__vector_18+0x3bc>
    1588:	ca 01       	movw	r24, r20
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	f1 f7       	brne	.-4      	; 0x158a <__vector_18+0x3b8>
    158e:	21 50       	subi	r18, 0x01	; 1
    1590:	30 40       	sbci	r19, 0x00	; 0
    1592:	8f ef       	ldi	r24, 0xFF	; 255
    1594:	2f 3f       	cpi	r18, 0xFF	; 255
    1596:	38 07       	cpc	r19, r24
    1598:	b9 f7       	brne	.-18     	; 0x1588 <__vector_18+0x3b6>
    159a:	cf c1       	rjmp	.+926    	; 0x193a <__vector_18+0x768>
				delay_ms(200);
			}
		}
		else if(!down_state()&&down_state1) {
    159c:	1d 99       	sbic	0x03, 5	; 3
    159e:	6f c0       	rjmp	.+222    	; 0x167e <__vector_18+0x4ac>
    15a0:	80 91 0b 02 	lds	r24, 0x020B
    15a4:	88 23       	and	r24, r24
    15a6:	09 f4       	brne	.+2      	; 0x15aa <__vector_18+0x3d8>
    15a8:	6a c0       	rjmp	.+212    	; 0x167e <__vector_18+0x4ac>
			decrement(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX);
    15aa:	80 91 8a 00 	lds	r24, 0x008A
    15ae:	90 91 8b 00 	lds	r25, 0x008B
    15b2:	88 3c       	cpi	r24, 0xC8	; 200
    15b4:	91 05       	cpc	r25, r1
    15b6:	19 f4       	brne	.+6      	; 0x15be <__vector_18+0x3ec>
    15b8:	8f ef       	ldi	r24, 0xFF	; 255
    15ba:	9f ef       	ldi	r25, 0xFF	; 255
    15bc:	05 c0       	rjmp	.+10     	; 0x15c8 <__vector_18+0x3f6>
    15be:	80 91 8a 00 	lds	r24, 0x008A
    15c2:	90 91 8b 00 	lds	r25, 0x008B
    15c6:	01 97       	sbiw	r24, 0x01	; 1
    15c8:	90 93 8b 00 	sts	0x008B, r25
    15cc:	80 93 8a 00 	sts	0x008A, r24
			if(mode==MODE_SPECTRUM||mode==MODE_DUAL) {
    15d0:	80 91 f7 01 	lds	r24, 0x01F7
    15d4:	82 30       	cpi	r24, 0x02	; 2
    15d6:	19 f0       	breq	.+6      	; 0x15de <__vector_18+0x40c>
    15d8:	84 30       	cpi	r24, 0x04	; 4
    15da:	09 f0       	breq	.+2      	; 0x15de <__vector_18+0x40c>
    15dc:	ae c1       	rjmp	.+860    	; 0x193a <__vector_18+0x768>
				fft_maxfreq();
    15de:	8d ea       	ldi	r24, 0xAD	; 173
    15e0:	91 e0       	ldi	r25, 0x01	; 1
    15e2:	60 e4       	ldi	r22, 0x40	; 64
    15e4:	40 e0       	ldi	r20, 0x00	; 0
    15e6:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    15ea:	20 91 8a 00 	lds	r18, 0x008A
    15ee:	30 91 8b 00 	lds	r19, 0x008B
    15f2:	40 e0       	ldi	r20, 0x00	; 0
    15f4:	50 e0       	ldi	r21, 0x00	; 0
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	7d e2       	ldi	r23, 0x2D	; 45
    15fa:	81 e3       	ldi	r24, 0x31	; 49
    15fc:	91 e0       	ldi	r25, 0x01	; 1
    15fe:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    1602:	84 e0       	ldi	r24, 0x04	; 4
    1604:	55 95       	asr	r21
    1606:	47 95       	ror	r20
    1608:	37 95       	ror	r19
    160a:	27 95       	ror	r18
    160c:	8a 95       	dec	r24
    160e:	d1 f7       	brne	.-12     	; 0x1604 <__vector_18+0x432>
    1610:	80 e8       	ldi	r24, 0x80	; 128
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	a9 01       	movw	r20, r18
    161a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
    161e:	82 eb       	ldi	r24, 0xB2	; 178
    1620:	91 e0       	ldi	r25, 0x01	; 1
    1622:	65 e7       	ldi	r22, 0x75	; 117
    1624:	41 e0       	ldi	r20, 0x01	; 1
    1626:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
				dfreq();
    162a:	8e ee       	ldi	r24, 0xEE	; 238
    162c:	91 e0       	ldi	r25, 0x01	; 1
    162e:	60 e0       	ldi	r22, 0x00	; 0
    1630:	40 e0       	ldi	r20, 0x00	; 0
    1632:	0e 94 33 04 	call	0x866	; 0x866 <lcd_str>
    1636:	20 91 8a 00 	lds	r18, 0x008A
    163a:	30 91 8b 00 	lds	r19, 0x008B
    163e:	40 e0       	ldi	r20, 0x00	; 0
    1640:	50 e0       	ldi	r21, 0x00	; 0
    1642:	60 e8       	ldi	r22, 0x80	; 128
    1644:	76 e9       	ldi	r23, 0x96	; 150
    1646:	88 e9       	ldi	r24, 0x98	; 152
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <__divmodsi4>
    164e:	8f e3       	ldi	r24, 0x3F	; 63
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	61 e0       	ldi	r22, 0x01	; 1
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	a9 01       	movw	r20, r18
    1658:	0e 94 f5 03 	call	0x7ea	; 0x7ea <lcd_num_from_right>
				array_filled=0;
    165c:	10 92 0d 02 	sts	0x020D, r1
    1660:	28 ec       	ldi	r18, 0xC8	; 200
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	48 e8       	ldi	r20, 0x88	; 136
    1666:	53 e1       	ldi	r21, 0x13	; 19
    1668:	03 c0       	rjmp	.+6      	; 0x1670 <__vector_18+0x49e>
    166a:	ca 01       	movw	r24, r20
    166c:	01 97       	sbiw	r24, 0x01	; 1
    166e:	f1 f7       	brne	.-4      	; 0x166c <__vector_18+0x49a>
    1670:	21 50       	subi	r18, 0x01	; 1
    1672:	30 40       	sbci	r19, 0x00	; 0
    1674:	8f ef       	ldi	r24, 0xFF	; 255
    1676:	2f 3f       	cpi	r18, 0xFF	; 255
    1678:	38 07       	cpc	r19, r24
    167a:	b9 f7       	brne	.-18     	; 0x166a <__vector_18+0x498>
    167c:	5e c1       	rjmp	.+700    	; 0x193a <__vector_18+0x768>
				delay_ms(200);
			}
		}
		else if(!top_state()&&top_state1) {
    167e:	18 99       	sbic	0x03, 0	; 3
    1680:	5c c1       	rjmp	.+696    	; 0x193a <__vector_18+0x768>
    1682:	80 91 07 02 	lds	r24, 0x0207
    1686:	88 23       	and	r24, r24
    1688:	09 f4       	brne	.+2      	; 0x168c <__vector_18+0x4ba>
    168a:	57 c1       	rjmp	.+686    	; 0x193a <__vector_18+0x768>
			menu_state=0;
    168c:	10 92 f9 01 	sts	0x01F9, r1
    1690:	51 c1       	rjmp	.+674    	; 0x1934 <__vector_18+0x762>
			redraw_menu=1;
		}
	}
	else if(menu_state>MENU_MAX) {
    1692:	99 30       	cpi	r25, 0x09	; 9
    1694:	0c f4       	brge	.+2      	; 0x1698 <__vector_18+0x4c6>
    1696:	13 c1       	rjmp	.+550    	; 0x18be <__vector_18+0x6ec>
		if(!top_state()&&(top_state1)) {
    1698:	18 99       	sbic	0x03, 0	; 3
    169a:	08 c0       	rjmp	.+16     	; 0x16ac <__vector_18+0x4da>
    169c:	80 91 07 02 	lds	r24, 0x0207
    16a0:	88 23       	and	r24, r24
    16a2:	21 f0       	breq	.+8      	; 0x16ac <__vector_18+0x4da>
			menu_state-=MENU_MAX;
    16a4:	98 50       	subi	r25, 0x08	; 8
    16a6:	90 93 f9 01 	sts	0x01F9, r25
    16aa:	44 c1       	rjmp	.+648    	; 0x1934 <__vector_18+0x762>
			redraw_menu=1;
		}
		else if(menu_state==(MENU_MAX+MENU_MODE)) {
    16ac:	99 30       	cpi	r25, 0x09	; 9
    16ae:	29 f5       	brne	.+74     	; 0x16fa <__vector_18+0x528>
			if(!right_state()&&right_state1) {
    16b0:	19 99       	sbic	0x03, 1	; 3
    16b2:	0c c0       	rjmp	.+24     	; 0x16cc <__vector_18+0x4fa>
    16b4:	80 91 09 02 	lds	r24, 0x0209
    16b8:	88 23       	and	r24, r24
    16ba:	41 f0       	breq	.+16     	; 0x16cc <__vector_18+0x4fa>
				increment(mode,MODE_MIN,MODE_MAX);
    16bc:	80 91 f7 01 	lds	r24, 0x01F7
    16c0:	86 30       	cpi	r24, 0x06	; 6
    16c2:	11 f4       	brne	.+4      	; 0x16c8 <__vector_18+0x4f6>
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	10 c0       	rjmp	.+32     	; 0x16e8 <__vector_18+0x516>
    16c8:	8f 5f       	subi	r24, 0xFF	; 255
    16ca:	0e c0       	rjmp	.+28     	; 0x16e8 <__vector_18+0x516>
				if(mode!=MODE_XY) ADMUX=0b01100000;
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    16cc:	1a 99       	sbic	0x03, 2	; 3
    16ce:	35 c1       	rjmp	.+618    	; 0x193a <__vector_18+0x768>
    16d0:	80 91 08 02 	lds	r24, 0x0208
    16d4:	88 23       	and	r24, r24
    16d6:	09 f4       	brne	.+2      	; 0x16da <__vector_18+0x508>
    16d8:	30 c1       	rjmp	.+608    	; 0x193a <__vector_18+0x768>
				decrement(mode,MODE_MIN,MODE_MAX);
    16da:	80 91 f7 01 	lds	r24, 0x01F7
    16de:	81 30       	cpi	r24, 0x01	; 1
    16e0:	11 f4       	brne	.+4      	; 0x16e6 <__vector_18+0x514>
    16e2:	86 e0       	ldi	r24, 0x06	; 6
    16e4:	01 c0       	rjmp	.+2      	; 0x16e8 <__vector_18+0x516>
    16e6:	81 50       	subi	r24, 0x01	; 1
    16e8:	80 93 f7 01 	sts	0x01F7, r24
				if(mode!=MODE_XY) ADMUX=0b01100000;
    16ec:	83 30       	cpi	r24, 0x03	; 3
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <__vector_18+0x520>
    16f0:	21 c1       	rjmp	.+578    	; 0x1934 <__vector_18+0x762>
    16f2:	80 e6       	ldi	r24, 0x60	; 96
    16f4:	80 93 7c 00 	sts	0x007C, r24
    16f8:	1d c1       	rjmp	.+570    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_ADCPERIOD)) {
    16fa:	9a 30       	cpi	r25, 0x0A	; 10
    16fc:	89 f5       	brne	.+98     	; 0x1760 <__vector_18+0x58e>
			if(!right_state()&&right_state1) {
    16fe:	19 99       	sbic	0x03, 1	; 3
    1700:	14 c0       	rjmp	.+40     	; 0x172a <__vector_18+0x558>
    1702:	80 91 09 02 	lds	r24, 0x0209
    1706:	88 23       	and	r24, r24
    1708:	81 f0       	breq	.+32     	; 0x172a <__vector_18+0x558>
				increment(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX);
    170a:	80 91 8a 00 	lds	r24, 0x008A
    170e:	90 91 8b 00 	lds	r25, 0x008B
    1712:	8f 5f       	subi	r24, 0xFF	; 255
    1714:	9f 4f       	sbci	r25, 0xFF	; 255
    1716:	19 f4       	brne	.+6      	; 0x171e <__vector_18+0x54c>
    1718:	88 ec       	ldi	r24, 0xC8	; 200
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	1c c0       	rjmp	.+56     	; 0x1756 <__vector_18+0x584>
    171e:	80 91 8a 00 	lds	r24, 0x008A
    1722:	90 91 8b 00 	lds	r25, 0x008B
    1726:	01 96       	adiw	r24, 0x01	; 1
    1728:	16 c0       	rjmp	.+44     	; 0x1756 <__vector_18+0x584>
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    172a:	1a 99       	sbic	0x03, 2	; 3
    172c:	06 c1       	rjmp	.+524    	; 0x193a <__vector_18+0x768>
    172e:	80 91 08 02 	lds	r24, 0x0208
    1732:	88 23       	and	r24, r24
    1734:	09 f4       	brne	.+2      	; 0x1738 <__vector_18+0x566>
    1736:	01 c1       	rjmp	.+514    	; 0x193a <__vector_18+0x768>
				decrement(adc_period,ADC_PERIOD_MIN,ADC_PERIOD_MAX);
    1738:	80 91 8a 00 	lds	r24, 0x008A
    173c:	90 91 8b 00 	lds	r25, 0x008B
    1740:	88 3c       	cpi	r24, 0xC8	; 200
    1742:	91 05       	cpc	r25, r1
    1744:	19 f4       	brne	.+6      	; 0x174c <__vector_18+0x57a>
    1746:	8f ef       	ldi	r24, 0xFF	; 255
    1748:	9f ef       	ldi	r25, 0xFF	; 255
    174a:	05 c0       	rjmp	.+10     	; 0x1756 <__vector_18+0x584>
    174c:	80 91 8a 00 	lds	r24, 0x008A
    1750:	90 91 8b 00 	lds	r25, 0x008B
    1754:	01 97       	sbiw	r24, 0x01	; 1
    1756:	90 93 8b 00 	sts	0x008B, r25
    175a:	80 93 8a 00 	sts	0x008A, r24
    175e:	ea c0       	rjmp	.+468    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_ADCCHECK)) {
    1760:	9b 30       	cpi	r25, 0x0B	; 11
    1762:	41 f5       	brne	.+80     	; 0x17b4 <__vector_18+0x5e2>
			if(!right_state()&&right_state1) {
    1764:	19 99       	sbic	0x03, 1	; 3
    1766:	10 c0       	rjmp	.+32     	; 0x1788 <__vector_18+0x5b6>
    1768:	80 91 09 02 	lds	r24, 0x0209
    176c:	88 23       	and	r24, r24
    176e:	61 f0       	breq	.+24     	; 0x1788 <__vector_18+0x5b6>
				increment(adc_check,0,ALL_N-1);
    1770:	80 91 01 02 	lds	r24, 0x0201
    1774:	90 91 02 02 	lds	r25, 0x0202
    1778:	8f 37       	cpi	r24, 0x7F	; 127
    177a:	91 05       	cpc	r25, r1
    177c:	19 f4       	brne	.+6      	; 0x1784 <__vector_18+0x5b2>
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	13 c0       	rjmp	.+38     	; 0x17aa <__vector_18+0x5d8>
    1784:	01 96       	adiw	r24, 0x01	; 1
    1786:	11 c0       	rjmp	.+34     	; 0x17aa <__vector_18+0x5d8>
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    1788:	1a 99       	sbic	0x03, 2	; 3
    178a:	d7 c0       	rjmp	.+430    	; 0x193a <__vector_18+0x768>
    178c:	80 91 08 02 	lds	r24, 0x0208
    1790:	88 23       	and	r24, r24
    1792:	09 f4       	brne	.+2      	; 0x1796 <__vector_18+0x5c4>
    1794:	d2 c0       	rjmp	.+420    	; 0x193a <__vector_18+0x768>
				decrement(adc_check,0,ALL_N-1);
    1796:	80 91 01 02 	lds	r24, 0x0201
    179a:	90 91 02 02 	lds	r25, 0x0202
    179e:	00 97       	sbiw	r24, 0x00	; 0
    17a0:	19 f4       	brne	.+6      	; 0x17a8 <__vector_18+0x5d6>
    17a2:	8f e7       	ldi	r24, 0x7F	; 127
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	01 c0       	rjmp	.+2      	; 0x17aa <__vector_18+0x5d8>
    17a8:	01 97       	sbiw	r24, 0x01	; 1
    17aa:	90 93 02 02 	sts	0x0202, r25
    17ae:	80 93 01 02 	sts	0x0201, r24
    17b2:	c0 c0       	rjmp	.+384    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_ADCERROR)) {
    17b4:	9c 30       	cpi	r25, 0x0C	; 12
    17b6:	61 f5       	brne	.+88     	; 0x1810 <__vector_18+0x63e>
			if(!right_state()&&right_state1) {
    17b8:	19 99       	sbic	0x03, 1	; 3
    17ba:	12 c0       	rjmp	.+36     	; 0x17e0 <__vector_18+0x60e>
    17bc:	80 91 09 02 	lds	r24, 0x0209
    17c0:	88 23       	and	r24, r24
    17c2:	71 f0       	breq	.+28     	; 0x17e0 <__vector_18+0x60e>
				incr_step(adc_error,ADC_ERROR_STEP,ADC_ERROR_MAX,ADC_ERROR_STEP);
    17c4:	80 91 ff 01 	lds	r24, 0x01FF
    17c8:	90 91 00 02 	lds	r25, 0x0200
    17cc:	2f ef       	ldi	r18, 0xFF	; 255
    17ce:	8c 39       	cpi	r24, 0x9C	; 156
    17d0:	92 07       	cpc	r25, r18
    17d2:	18 f0       	brcs	.+6      	; 0x17da <__vector_18+0x608>
    17d4:	84 e6       	ldi	r24, 0x64	; 100
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	16 c0       	rjmp	.+44     	; 0x1806 <__vector_18+0x634>
    17da:	8c 59       	subi	r24, 0x9C	; 156
    17dc:	9f 4f       	sbci	r25, 0xFF	; 255
    17de:	13 c0       	rjmp	.+38     	; 0x1806 <__vector_18+0x634>
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    17e0:	1a 99       	sbic	0x03, 2	; 3
    17e2:	ab c0       	rjmp	.+342    	; 0x193a <__vector_18+0x768>
    17e4:	80 91 08 02 	lds	r24, 0x0208
    17e8:	88 23       	and	r24, r24
    17ea:	09 f4       	brne	.+2      	; 0x17ee <__vector_18+0x61c>
    17ec:	a6 c0       	rjmp	.+332    	; 0x193a <__vector_18+0x768>
				decr_step(adc_error,ADC_ERROR_STEP,ADC_ERROR_MAX,ADC_ERROR_STEP);
    17ee:	80 91 ff 01 	lds	r24, 0x01FF
    17f2:	90 91 00 02 	lds	r25, 0x0200
    17f6:	88 3c       	cpi	r24, 0xC8	; 200
    17f8:	91 05       	cpc	r25, r1
    17fa:	18 f4       	brcc	.+6      	; 0x1802 <__vector_18+0x630>
    17fc:	8f ef       	ldi	r24, 0xFF	; 255
    17fe:	9f ef       	ldi	r25, 0xFF	; 255
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <__vector_18+0x634>
    1802:	84 56       	subi	r24, 0x64	; 100
    1804:	90 40       	sbci	r25, 0x00	; 0
    1806:	90 93 00 02 	sts	0x0200, r25
    180a:	80 93 ff 01 	sts	0x01FF, r24
    180e:	92 c0       	rjmp	.+292    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_ADCSTEP)) {
    1810:	9d 30       	cpi	r25, 0x0D	; 13
    1812:	d9 f4       	brne	.+54     	; 0x184a <__vector_18+0x678>
			if(!right_state()&&right_state1) {
    1814:	19 99       	sbic	0x03, 1	; 3
    1816:	08 c0       	rjmp	.+16     	; 0x1828 <__vector_18+0x656>
    1818:	80 91 09 02 	lds	r24, 0x0209
    181c:	88 23       	and	r24, r24
    181e:	21 f0       	breq	.+8      	; 0x1828 <__vector_18+0x656>
				increment(adc_step,ADC_STEP_MIN,ADC_PERIOD_MAX);
    1820:	80 91 f8 01 	lds	r24, 0x01F8
    1824:	8f 5f       	subi	r24, 0xFF	; 255
    1826:	0e c0       	rjmp	.+28     	; 0x1844 <__vector_18+0x672>
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    1828:	1a 99       	sbic	0x03, 2	; 3
    182a:	87 c0       	rjmp	.+270    	; 0x193a <__vector_18+0x768>
    182c:	80 91 08 02 	lds	r24, 0x0208
    1830:	88 23       	and	r24, r24
    1832:	09 f4       	brne	.+2      	; 0x1836 <__vector_18+0x664>
    1834:	82 c0       	rjmp	.+260    	; 0x193a <__vector_18+0x768>
				decrement(adc_step,ADC_STEP_MIN,ADC_PERIOD_MAX);
    1836:	80 91 f8 01 	lds	r24, 0x01F8
    183a:	81 30       	cpi	r24, 0x01	; 1
    183c:	11 f4       	brne	.+4      	; 0x1842 <__vector_18+0x670>
    183e:	8f ef       	ldi	r24, 0xFF	; 255
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <__vector_18+0x672>
    1842:	81 50       	subi	r24, 0x01	; 1
    1844:	80 93 f8 01 	sts	0x01F8, r24
    1848:	75 c0       	rjmp	.+234    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_LCDSKIP)) {
    184a:	9e 30       	cpi	r25, 0x0E	; 14
    184c:	f9 f4       	brne	.+62     	; 0x188c <__vector_18+0x6ba>
			if(!right_state()&&right_state1) {
    184e:	19 99       	sbic	0x03, 1	; 3
    1850:	0c c0       	rjmp	.+24     	; 0x186a <__vector_18+0x698>
    1852:	80 91 09 02 	lds	r24, 0x0209
    1856:	88 23       	and	r24, r24
    1858:	41 f0       	breq	.+16     	; 0x186a <__vector_18+0x698>
				increment(lcd_skip,LCD_SKIP_MIN,LCD_SKIP_MAX);
    185a:	80 91 fb 01 	lds	r24, 0x01FB
    185e:	8f 3f       	cpi	r24, 0xFF	; 255
    1860:	11 f4       	brne	.+4      	; 0x1866 <__vector_18+0x694>
    1862:	81 e0       	ldi	r24, 0x01	; 1
    1864:	10 c0       	rjmp	.+32     	; 0x1886 <__vector_18+0x6b4>
    1866:	8f 5f       	subi	r24, 0xFF	; 255
    1868:	0e c0       	rjmp	.+28     	; 0x1886 <__vector_18+0x6b4>
				redraw_menu=1;
			}
			else if(!left_state()&&left_state1) {
    186a:	1a 99       	sbic	0x03, 2	; 3
    186c:	66 c0       	rjmp	.+204    	; 0x193a <__vector_18+0x768>
    186e:	80 91 08 02 	lds	r24, 0x0208
    1872:	88 23       	and	r24, r24
    1874:	09 f4       	brne	.+2      	; 0x1878 <__vector_18+0x6a6>
    1876:	61 c0       	rjmp	.+194    	; 0x193a <__vector_18+0x768>
				decrement(lcd_skip,LCD_SKIP_MIN,LCD_SKIP_MAX);
    1878:	80 91 fb 01 	lds	r24, 0x01FB
    187c:	81 30       	cpi	r24, 0x01	; 1
    187e:	11 f4       	brne	.+4      	; 0x1884 <__vector_18+0x6b2>
    1880:	8f ef       	ldi	r24, 0xFF	; 255
    1882:	01 c0       	rjmp	.+2      	; 0x1886 <__vector_18+0x6b4>
    1884:	81 50       	subi	r24, 0x01	; 1
    1886:	80 93 fb 01 	sts	0x01FB, r24
    188a:	54 c0       	rjmp	.+168    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
		else if(menu_state==(MENU_MAX+MENU_SPECTRUMSCALE)) {
    188c:	9f 30       	cpi	r25, 0x0F	; 15
    188e:	09 f0       	breq	.+2      	; 0x1892 <__vector_18+0x6c0>
    1890:	54 c0       	rjmp	.+168    	; 0x193a <__vector_18+0x768>
			if((!right_state()&&right_state1)||(!left_state()&&left_state1)) {
    1892:	19 99       	sbic	0x03, 1	; 3
    1894:	04 c0       	rjmp	.+8      	; 0x189e <__vector_18+0x6cc>
    1896:	80 91 09 02 	lds	r24, 0x0209
    189a:	88 23       	and	r24, r24
    189c:	39 f4       	brne	.+14     	; 0x18ac <__vector_18+0x6da>
    189e:	1a 99       	sbic	0x03, 2	; 3
    18a0:	4c c0       	rjmp	.+152    	; 0x193a <__vector_18+0x768>
    18a2:	80 91 08 02 	lds	r24, 0x0208
    18a6:	88 23       	and	r24, r24
    18a8:	09 f4       	brne	.+2      	; 0x18ac <__vector_18+0x6da>
    18aa:	47 c0       	rjmp	.+142    	; 0x193a <__vector_18+0x768>
				spectrum_scale=spectrum_scale?0:1;
    18ac:	90 e0       	ldi	r25, 0x00	; 0
    18ae:	80 91 0f 02 	lds	r24, 0x020F
    18b2:	88 23       	and	r24, r24
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <__vector_18+0x6e6>
    18b6:	91 e0       	ldi	r25, 0x01	; 1
    18b8:	90 93 0f 02 	sts	0x020F, r25
    18bc:	3b c0       	rjmp	.+118    	; 0x1934 <__vector_18+0x762>
				redraw_menu=1;
			}
		}
	}
	else {
		if(!right_state()&&right_state1) {
    18be:	19 99       	sbic	0x03, 1	; 3
    18c0:	0f c0       	rjmp	.+30     	; 0x18e0 <__vector_18+0x70e>
    18c2:	80 91 09 02 	lds	r24, 0x0209
    18c6:	88 23       	and	r24, r24
    18c8:	59 f0       	breq	.+22     	; 0x18e0 <__vector_18+0x70e>
			menu_state=(menu_state==MENU_MAX)?0:menu_state+1;
    18ca:	98 30       	cpi	r25, 0x08	; 8
    18cc:	11 f4       	brne	.+4      	; 0x18d2 <__vector_18+0x700>
    18ce:	80 e0       	ldi	r24, 0x00	; 0
    18d0:	02 c0       	rjmp	.+4      	; 0x18d6 <__vector_18+0x704>
    18d2:	89 2f       	mov	r24, r25
    18d4:	8f 5f       	subi	r24, 0xFF	; 255
    18d6:	80 93 f9 01 	sts	0x01F9, r24
			redraw_menu=1;
    18da:	81 e0       	ldi	r24, 0x01	; 1
    18dc:	80 93 0c 02 	sts	0x020C, r24
		}
		if(!left_state()&&left_state1) {
    18e0:	1a 99       	sbic	0x03, 2	; 3
    18e2:	10 c0       	rjmp	.+32     	; 0x1904 <__vector_18+0x732>
    18e4:	80 91 08 02 	lds	r24, 0x0208
    18e8:	88 23       	and	r24, r24
    18ea:	61 f0       	breq	.+24     	; 0x1904 <__vector_18+0x732>
			menu_state=menu_state?menu_state-1:MENU_MAX;
    18ec:	80 91 f9 01 	lds	r24, 0x01F9
    18f0:	88 23       	and	r24, r24
    18f2:	11 f4       	brne	.+4      	; 0x18f8 <__vector_18+0x726>
    18f4:	88 e0       	ldi	r24, 0x08	; 8
    18f6:	01 c0       	rjmp	.+2      	; 0x18fa <__vector_18+0x728>
    18f8:	81 50       	subi	r24, 0x01	; 1
    18fa:	80 93 f9 01 	sts	0x01F9, r24
			redraw_menu=1;
    18fe:	81 e0       	ldi	r24, 0x01	; 1
    1900:	80 93 0c 02 	sts	0x020C, r24
		}
		if(!top_state()&&(top_state1)) {
    1904:	18 99       	sbic	0x03, 0	; 3
    1906:	19 c0       	rjmp	.+50     	; 0x193a <__vector_18+0x768>
    1908:	80 91 07 02 	lds	r24, 0x0207
    190c:	88 23       	and	r24, r24
    190e:	a9 f0       	breq	.+42     	; 0x193a <__vector_18+0x768>
			if(menu_state==0) {
    1910:	80 91 f9 01 	lds	r24, 0x01F9
    1914:	88 23       	and	r24, r24
    1916:	49 f4       	brne	.+18     	; 0x192a <__vector_18+0x758>
				menu_state=-1;
    1918:	8f ef       	ldi	r24, 0xFF	; 255
    191a:	80 93 f9 01 	sts	0x01F9, r24
				redraw_menu=1;
    191e:	81 e0       	ldi	r24, 0x01	; 1
    1920:	80 93 0c 02 	sts	0x020C, r24
				top_state1=0;
    1924:	10 92 07 02 	sts	0x0207, r1
    1928:	08 c0       	rjmp	.+16     	; 0x193a <__vector_18+0x768>
			}
			else {
				menu_state+=MENU_MAX;
    192a:	88 5f       	subi	r24, 0xF8	; 248
    192c:	80 93 f9 01 	sts	0x01F9, r24
				top_state1=0;
    1930:	10 92 07 02 	sts	0x0207, r1
				redraw_menu=1;
    1934:	81 e0       	ldi	r24, 0x01	; 1
    1936:	80 93 0c 02 	sts	0x020C, r24
			}
		}
	}
	buttons_update();
    193a:	0e 94 0a 03 	call	0x614	; 0x614 <buttons_update>
}
    193e:	ff 91       	pop	r31
    1940:	ef 91       	pop	r30
    1942:	bf 91       	pop	r27
    1944:	af 91       	pop	r26
    1946:	9f 91       	pop	r25
    1948:	8f 91       	pop	r24
    194a:	7f 91       	pop	r23
    194c:	6f 91       	pop	r22
    194e:	5f 91       	pop	r21
    1950:	4f 91       	pop	r20
    1952:	3f 91       	pop	r19
    1954:	2f 91       	pop	r18
    1956:	1f 91       	pop	r17
    1958:	0f 90       	pop	r0
    195a:	0f be       	out	0x3f, r0	; 63
    195c:	0f 90       	pop	r0
    195e:	1f 90       	pop	r1
    1960:	18 95       	reti

00001962 <tbl_window>:
    1962:	3d 0a       	sbc	r3, r29
    1964:	4f 0a       	sbc	r4, r31
    1966:	85 0a       	sbc	r8, r21
    1968:	e0 0a       	sbc	r14, r16
    196a:	5e 0b       	sbc	r21, r30
    196c:	01 0c       	add	r0, r1
    196e:	c6 0c       	add	r12, r6
    1970:	ae 0d       	add	r26, r14
    1972:	b8 0e       	add	r11, r24
    1974:	e4 0f       	add	r30, r20
    1976:	31 11       	cpse	r19, r1
    1978:	9d 12       	cpse	r9, r29
    197a:	29 14       	cp	r2, r9
    197c:	d3 15       	cp	r29, r3
    197e:	9a 17       	cp	r25, r26
    1980:	7d 19       	sub	r23, r13
    1982:	7c 1b       	sub	r23, r28
    1984:	93 1d       	adc	r25, r3
    1986:	c4 1f       	adc	r28, r20
    1988:	0b 22       	and	r0, r27
    198a:	68 24       	eor	r6, r8
    198c:	d9 26       	eor	r13, r25
    198e:	5c 29       	or	r21, r12
    1990:	f1 2b       	or	r31, r17
    1992:	96 2e       	mov	r9, r22
    1994:	48 31       	cpi	r20, 0x18	; 24
    1996:	06 34       	cpi	r16, 0x46	; 70
    1998:	cf 36       	cpi	r28, 0x6F	; 111
    199a:	a1 39       	cpi	r26, 0x91	; 145
    199c:	7a 3c       	cpi	r23, 0xCA	; 202
    199e:	58 3f       	cpi	r21, 0xF8	; 248
    19a0:	3a 42       	sbci	r19, 0x2A	; 42
    19a2:	1e 45       	sbci	r17, 0x5E	; 94
    19a4:	01 48       	sbci	r16, 0x81	; 129
    19a6:	e3 4a       	sbci	r30, 0xA3	; 163
    19a8:	c1 4d       	sbci	r28, 0xD1	; 209
    19aa:	9a 50       	subi	r25, 0x0A	; 10
    19ac:	6c 53       	subi	r22, 0x3C	; 60
    19ae:	35 56       	subi	r19, 0x65	; 101
    19b0:	f4 58       	subi	r31, 0x84	; 132
    19b2:	a6 5b       	subi	r26, 0xB6	; 182
    19b4:	4a 5e       	subi	r20, 0xEA	; 234
    19b6:	df 60       	ori	r29, 0x0F	; 15
    19b8:	63 63       	ori	r22, 0x33	; 51
    19ba:	d4 65       	ori	r29, 0x54	; 84
    19bc:	31 68       	ori	r19, 0x81	; 129
    19be:	78 6a       	ori	r23, 0xA8	; 168
    19c0:	a8 6c       	ori	r26, 0xC8	; 200
    19c2:	c0 6e       	ori	r28, 0xE0	; 224
    19c4:	be 70       	andi	r27, 0x0E	; 14
    19c6:	a1 72       	andi	r26, 0x21	; 33
    19c8:	68 74       	andi	r22, 0x48	; 72
    19ca:	12 76       	andi	r17, 0x62	; 98
    19cc:	9e 77       	andi	r25, 0x7E	; 126
    19ce:	0b 79       	andi	r16, 0x9B	; 155
    19d0:	57 7a       	andi	r21, 0xA7	; 167
    19d2:	83 7b       	andi	r24, 0xB3	; 179
    19d4:	8d 7c       	andi	r24, 0xCD	; 205
    19d6:	75 7d       	andi	r23, 0xD5	; 213
    19d8:	3b 7e       	andi	r19, 0xEB	; 235
    19da:	dd 7e       	andi	r29, 0xED	; 237
    19dc:	5b 7f       	andi	r21, 0xFB	; 251
    19de:	b6 7f       	andi	r27, 0xF6	; 246
    19e0:	ec 7f       	andi	r30, 0xFC	; 252
    19e2:	fe 7f       	andi	r31, 0xFE	; 254
    19e4:	ec 7f       	andi	r30, 0xFC	; 252
    19e6:	b6 7f       	andi	r27, 0xF6	; 246
    19e8:	5b 7f       	andi	r21, 0xFB	; 251
    19ea:	dd 7e       	andi	r29, 0xED	; 237
    19ec:	3b 7e       	andi	r19, 0xEB	; 235
    19ee:	75 7d       	andi	r23, 0xD5	; 213
    19f0:	8d 7c       	andi	r24, 0xCD	; 205
    19f2:	83 7b       	andi	r24, 0xB3	; 179
    19f4:	57 7a       	andi	r21, 0xA7	; 167
    19f6:	0b 79       	andi	r16, 0x9B	; 155
    19f8:	9e 77       	andi	r25, 0x7E	; 126
    19fa:	12 76       	andi	r17, 0x62	; 98
    19fc:	68 74       	andi	r22, 0x48	; 72
    19fe:	a1 72       	andi	r26, 0x21	; 33
    1a00:	be 70       	andi	r27, 0x0E	; 14
    1a02:	c0 6e       	ori	r28, 0xE0	; 224
    1a04:	a8 6c       	ori	r26, 0xC8	; 200
    1a06:	78 6a       	ori	r23, 0xA8	; 168
    1a08:	31 68       	ori	r19, 0x81	; 129
    1a0a:	d4 65       	ori	r29, 0x54	; 84
    1a0c:	63 63       	ori	r22, 0x33	; 51
    1a0e:	df 60       	ori	r29, 0x0F	; 15
    1a10:	4a 5e       	subi	r20, 0xEA	; 234
    1a12:	a6 5b       	subi	r26, 0xB6	; 182
    1a14:	f4 58       	subi	r31, 0x84	; 132
    1a16:	35 56       	subi	r19, 0x65	; 101
    1a18:	6c 53       	subi	r22, 0x3C	; 60
    1a1a:	9a 50       	subi	r25, 0x0A	; 10
    1a1c:	c1 4d       	sbci	r28, 0xD1	; 209
    1a1e:	e3 4a       	sbci	r30, 0xA3	; 163
    1a20:	01 48       	sbci	r16, 0x81	; 129
    1a22:	1e 45       	sbci	r17, 0x5E	; 94
    1a24:	3a 42       	sbci	r19, 0x2A	; 42
    1a26:	58 3f       	cpi	r21, 0xF8	; 248
    1a28:	7a 3c       	cpi	r23, 0xCA	; 202
    1a2a:	a1 39       	cpi	r26, 0x91	; 145
    1a2c:	cf 36       	cpi	r28, 0x6F	; 111
    1a2e:	06 34       	cpi	r16, 0x46	; 70
    1a30:	48 31       	cpi	r20, 0x18	; 24
    1a32:	96 2e       	mov	r9, r22
    1a34:	f1 2b       	or	r31, r17
    1a36:	5c 29       	or	r21, r12
    1a38:	d9 26       	eor	r13, r25
    1a3a:	68 24       	eor	r6, r8
    1a3c:	0b 22       	and	r0, r27
    1a3e:	c4 1f       	adc	r28, r20
    1a40:	93 1d       	adc	r25, r3
    1a42:	7c 1b       	sub	r23, r28
    1a44:	7e 19       	sub	r23, r14
    1a46:	9a 17       	cp	r25, r26
    1a48:	d3 15       	cp	r29, r3
    1a4a:	29 14       	cp	r2, r9
    1a4c:	9d 12       	cpse	r9, r29
    1a4e:	31 11       	cpse	r19, r1
    1a50:	e4 0f       	add	r30, r20
    1a52:	b8 0e       	add	r11, r24
    1a54:	ae 0d       	add	r26, r14
    1a56:	c6 0c       	add	r12, r6
    1a58:	01 0c       	add	r0, r1
    1a5a:	5e 0b       	sbc	r21, r30
    1a5c:	e0 0a       	sbc	r14, r16
    1a5e:	85 0a       	sbc	r8, r21
    1a60:	4f 0a       	sbc	r4, r31

00001a62 <tbl_cos_sin>:
    1a62:	ff 7f       	andi	r31, 0xFF	; 255
    1a64:	00 00       	nop
    1a66:	d7 7f       	andi	r29, 0xF7	; 247
    1a68:	47 06       	cpc	r4, r23
    1a6a:	61 7f       	andi	r22, 0xF1	; 241
    1a6c:	8b 0c       	add	r8, r11
    1a6e:	9c 7e       	andi	r25, 0xEC	; 236
    1a70:	c7 12       	cpse	r12, r23
    1a72:	89 7d       	andi	r24, 0xD9	; 217
    1a74:	f8 18       	sub	r15, r8
    1a76:	29 7c       	andi	r18, 0xC9	; 201
    1a78:	19 1f       	adc	r17, r25
    1a7a:	7c 7a       	andi	r23, 0xAC	; 172
    1a7c:	27 25       	eor	r18, r7
    1a7e:	83 78       	andi	r24, 0x83	; 131
    1a80:	1e 2b       	or	r17, r30
    1a82:	40 76       	andi	r20, 0x60	; 96
    1a84:	fb 30       	cpi	r31, 0x0B	; 11
    1a86:	b5 73       	andi	r27, 0x35	; 53
    1a88:	b9 36       	cpi	r27, 0x69	; 105
    1a8a:	e1 70       	andi	r30, 0x01	; 1
    1a8c:	56 3c       	cpi	r21, 0xC6	; 198
    1a8e:	c9 6d       	ori	r28, 0xD9	; 217
    1a90:	cd 41       	sbci	r28, 0x1D	; 29
    1a92:	6c 6a       	ori	r22, 0xAC	; 172
    1a94:	1c 47       	sbci	r17, 0x7C	; 124
    1a96:	ce 66       	ori	r28, 0x6E	; 110
    1a98:	3f 4c       	sbci	r19, 0xCF	; 207
    1a9a:	f1 62       	ori	r31, 0x21	; 33
    1a9c:	33 51       	subi	r19, 0x13	; 19
    1a9e:	d6 5e       	subi	r29, 0xE6	; 230
    1aa0:	f4 55       	subi	r31, 0x54	; 84
    1aa2:	81 5a       	subi	r24, 0xA1	; 161
    1aa4:	81 5a       	subi	r24, 0xA1	; 161
    1aa6:	f4 55       	subi	r31, 0x54	; 84
    1aa8:	d6 5e       	subi	r29, 0xE6	; 230
    1aaa:	33 51       	subi	r19, 0x13	; 19
    1aac:	f1 62       	ori	r31, 0x21	; 33
    1aae:	3f 4c       	sbci	r19, 0xCF	; 207
    1ab0:	ce 66       	ori	r28, 0x6E	; 110
    1ab2:	1c 47       	sbci	r17, 0x7C	; 124
    1ab4:	6c 6a       	ori	r22, 0xAC	; 172
    1ab6:	cd 41       	sbci	r28, 0x1D	; 29
    1ab8:	c9 6d       	ori	r28, 0xD9	; 217
    1aba:	56 3c       	cpi	r21, 0xC6	; 198
    1abc:	e1 70       	andi	r30, 0x01	; 1
    1abe:	b9 36       	cpi	r27, 0x69	; 105
    1ac0:	b5 73       	andi	r27, 0x35	; 53
    1ac2:	fb 30       	cpi	r31, 0x0B	; 11
    1ac4:	40 76       	andi	r20, 0x60	; 96
    1ac6:	1e 2b       	or	r17, r30
    1ac8:	83 78       	andi	r24, 0x83	; 131
    1aca:	27 25       	eor	r18, r7
    1acc:	7c 7a       	andi	r23, 0xAC	; 172
    1ace:	19 1f       	adc	r17, r25
    1ad0:	29 7c       	andi	r18, 0xC9	; 201
    1ad2:	f8 18       	sub	r15, r8
    1ad4:	89 7d       	andi	r24, 0xD9	; 217
    1ad6:	c7 12       	cpse	r12, r23
    1ad8:	9c 7e       	andi	r25, 0xEC	; 236
    1ada:	8b 0c       	add	r8, r11
    1adc:	61 7f       	andi	r22, 0xF1	; 241
    1ade:	47 06       	cpc	r4, r23
    1ae0:	d7 7f       	andi	r29, 0xF7	; 247
    1ae2:	00 00       	nop
    1ae4:	fe 7f       	andi	r31, 0xFE	; 254
    1ae6:	b9 f9       	.word	0xf9b9	; ????
    1ae8:	d7 7f       	andi	r29, 0xF7	; 247
    1aea:	75 f3       	brhs	.-36     	; 0x1ac8 <tbl_cos_sin+0x66>
    1aec:	61 7f       	andi	r22, 0xF1	; 241
    1aee:	39 ed       	ldi	r19, 0xD9	; 217
    1af0:	9c 7e       	andi	r25, 0xEC	; 236
    1af2:	08 e7       	ldi	r16, 0x78	; 120
    1af4:	89 7d       	andi	r24, 0xD9	; 217
    1af6:	e7 e0       	ldi	r30, 0x07	; 7
    1af8:	29 7c       	andi	r18, 0xC9	; 201
    1afa:	d9 da       	rcall	.-2638   	; 0x10ae <main+0x814>
    1afc:	7c 7a       	andi	r23, 0xAC	; 172
    1afe:	e2 d4       	rcall	.+2500   	; 0x24c4 <__data_load_end+0x36a>
    1b00:	83 78       	andi	r24, 0x83	; 131
    1b02:	05 cf       	rjmp	.-502    	; 0x190e <__vector_18+0x73c>
    1b04:	40 76       	andi	r20, 0x60	; 96
    1b06:	47 c9       	rjmp	.-3442   	; 0xd96 <main+0x4fc>
    1b08:	b5 73       	andi	r27, 0x35	; 53
    1b0a:	aa c3       	rjmp	.+1876   	; 0x2260 <__data_load_end+0x106>
    1b0c:	e1 70       	andi	r30, 0x01	; 1
    1b0e:	33 be       	out	0x33, r3	; 51
    1b10:	c9 6d       	ori	r28, 0xD9	; 217
    1b12:	e4 b8       	out	0x04, r14	; 4
    1b14:	6c 6a       	ori	r22, 0xAC	; 172
    1b16:	c1 b3       	in	r28, 0x11	; 17
    1b18:	ce 66       	ori	r28, 0x6E	; 110
    1b1a:	cd ae       	std	Y+61, r12	; 0x3d
    1b1c:	f1 62       	ori	r31, 0x21	; 33
    1b1e:	0c aa       	std	Y+52, r0	; 0x34
    1b20:	d6 5e       	subi	r29, 0xE6	; 230
    1b22:	7f a5       	ldd	r23, Y+47	; 0x2f
    1b24:	81 5a       	subi	r24, 0xA1	; 161
    1b26:	2a a1       	ldd	r18, Y+34	; 0x22
    1b28:	f5 55       	subi	r31, 0x55	; 85
    1b2a:	0f 9d       	mul	r16, r15
    1b2c:	33 51       	subi	r19, 0x13	; 19
    1b2e:	32 99       	sbic	0x06, 2	; 6
    1b30:	3f 4c       	sbci	r19, 0xCF	; 207
    1b32:	94 95       	.word	0x9594	; ????
    1b34:	1c 47       	sbci	r17, 0x7C	; 124
    1b36:	37 92       	.word	0x9237	; ????
    1b38:	cd 41       	sbci	r28, 0x1D	; 29
    1b3a:	1f 8f       	std	Y+31, r17	; 0x1f
    1b3c:	56 3c       	cpi	r21, 0xC6	; 198
    1b3e:	4c 8c       	ldd	r4, Y+28	; 0x1c
    1b40:	b9 36       	cpi	r27, 0x69	; 105
    1b42:	c0 89       	ldd	r28, Z+16	; 0x10
    1b44:	fb 30       	cpi	r31, 0x0B	; 11
    1b46:	7d 87       	std	Y+13, r23	; 0x0d
    1b48:	1e 2b       	or	r17, r30
    1b4a:	84 85       	ldd	r24, Z+12	; 0x0c
    1b4c:	27 25       	eor	r18, r7
    1b4e:	d8 83       	st	Y, r29
    1b50:	19 1f       	adc	r17, r25
    1b52:	77 82       	std	Z+7, r7	; 0x07
    1b54:	f8 18       	sub	r15, r8
    1b56:	64 81       	ldd	r22, Z+4	; 0x04
    1b58:	c7 12       	cpse	r12, r23
    1b5a:	9f 80       	ldd	r9, Y+7	; 0x07
    1b5c:	8b 0c       	add	r8, r11
    1b5e:	29 80       	ldd	r2, Y+1	; 0x01
    1b60:	47 06       	cpc	r4, r23

00001b62 <tbl_bitrev>:
    1b62:	00 00       	nop
    1b64:	00 01       	movw	r0, r0
    1b66:	80 00       	.word	0x0080	; ????
    1b68:	80 01       	movw	r16, r0
    1b6a:	40 00       	.word	0x0040	; ????
    1b6c:	40 01       	movw	r8, r0
    1b6e:	c0 00       	.word	0x00c0	; ????
    1b70:	c0 01       	movw	r24, r0
    1b72:	20 00       	.word	0x0020	; ????
    1b74:	20 01       	movw	r4, r0
    1b76:	a0 00       	.word	0x00a0	; ????
    1b78:	a0 01       	movw	r20, r0
    1b7a:	60 00       	.word	0x0060	; ????
    1b7c:	60 01       	movw	r12, r0
    1b7e:	e0 00       	.word	0x00e0	; ????
    1b80:	e0 01       	movw	r28, r0
    1b82:	10 00       	.word	0x0010	; ????
    1b84:	10 01       	movw	r2, r0
    1b86:	90 00       	.word	0x0090	; ????
    1b88:	90 01       	movw	r18, r0
    1b8a:	50 00       	.word	0x0050	; ????
    1b8c:	50 01       	movw	r10, r0
    1b8e:	d0 00       	.word	0x00d0	; ????
    1b90:	d0 01       	movw	r26, r0
    1b92:	30 00       	.word	0x0030	; ????
    1b94:	30 01       	movw	r6, r0
    1b96:	b0 00       	.word	0x00b0	; ????
    1b98:	b0 01       	movw	r22, r0
    1b9a:	70 00       	.word	0x0070	; ????
    1b9c:	70 01       	movw	r14, r0
    1b9e:	f0 00       	.word	0x00f0	; ????
    1ba0:	f0 01       	movw	r30, r0
    1ba2:	08 00       	.word	0x0008	; ????
    1ba4:	08 01       	movw	r0, r16
    1ba6:	88 00       	.word	0x0088	; ????
    1ba8:	88 01       	movw	r16, r16
    1baa:	48 00       	.word	0x0048	; ????
    1bac:	48 01       	movw	r8, r16
    1bae:	c8 00       	.word	0x00c8	; ????
    1bb0:	c8 01       	movw	r24, r16
    1bb2:	28 00       	.word	0x0028	; ????
    1bb4:	28 01       	movw	r4, r16
    1bb6:	a8 00       	.word	0x00a8	; ????
    1bb8:	a8 01       	movw	r20, r16
    1bba:	68 00       	.word	0x0068	; ????
    1bbc:	68 01       	movw	r12, r16
    1bbe:	e8 00       	.word	0x00e8	; ????
    1bc0:	e8 01       	movw	r28, r16
    1bc2:	18 00       	.word	0x0018	; ????
    1bc4:	18 01       	movw	r2, r16
    1bc6:	98 00       	.word	0x0098	; ????
    1bc8:	98 01       	movw	r18, r16
    1bca:	58 00       	.word	0x0058	; ????
    1bcc:	58 01       	movw	r10, r16
    1bce:	d8 00       	.word	0x00d8	; ????
    1bd0:	d8 01       	movw	r26, r16
    1bd2:	38 00       	.word	0x0038	; ????
    1bd4:	38 01       	movw	r6, r16
    1bd6:	b8 00       	.word	0x00b8	; ????
    1bd8:	b8 01       	movw	r22, r16
    1bda:	78 00       	.word	0x0078	; ????
    1bdc:	78 01       	movw	r14, r16
    1bde:	f8 00       	.word	0x00f8	; ????
    1be0:	f8 01       	movw	r30, r16

00001be2 <fft_input>:
;----------------------------------------------------------------------------;
#ifndef INPUT_NOUSE
.global fft_input
.func fft_input
fft_input:
	pushw	T2H,T2L
    1be2:	3f 92       	push	r3
    1be4:	2f 92       	push	r2
	pushw	AH,AL
    1be6:	1f 93       	push	r17
    1be8:	0f 93       	push	r16
	pushw	YH,YL
    1bea:	df 93       	push	r29
    1bec:	cf 93       	push	r28

	movw	XL, EL				;X = array_src;
    1bee:	dc 01       	movw	r26, r24
	movw	YL, DL				;Y = array_bfly;
    1bf0:	eb 01       	movw	r28, r22
	clr	EH				;Zero
    1bf2:	99 27       	eor	r25, r25
	ldiw	ZH,ZL, tbl_window		;Z = &tbl_window[0];
    1bf4:	e2 e6       	ldi	r30, 0x62	; 98
    1bf6:	f9 e1       	ldi	r31, 0x19	; 25
	ldiw	AH,AL, FFT_N			;A = FFT_N;
    1bf8:	00 e8       	ldi	r16, 0x80	; 128
    1bfa:	10 e0       	ldi	r17, 0x00	; 0
1:	lpmw	BH,BL, Z+			;B = *Z++; (window)
    1bfc:	25 91       	lpm	r18, Z+
    1bfe:	35 91       	lpm	r19, Z+
	ldw	CH,CL, X+			;C = *X++; (I-axis)
    1c00:	4d 91       	ld	r20, X+
    1c02:	5d 91       	ld	r21, X+
	FMULS16	DH,DL,T2H,T2L, BH,BL, CH,CL	;D = B * C;
    1c04:	b5 03       	fmuls	r19, r21
    1c06:	b0 01       	movw	r22, r0
    1c08:	2c 03       	fmul	r18, r20
    1c0a:	10 01       	movw	r2, r0
    1c0c:	69 1f       	adc	r22, r25
    1c0e:	bc 03       	fmulsu	r19, r20
    1c10:	79 0b       	sbc	r23, r25
    1c12:	30 0c       	add	r3, r0
    1c14:	61 1d       	adc	r22, r1
    1c16:	79 1f       	adc	r23, r25
    1c18:	da 03       	fmulsu	r21, r18
    1c1a:	79 0b       	sbc	r23, r25
    1c1c:	30 0c       	add	r3, r0
    1c1e:	61 1d       	adc	r22, r1
    1c20:	79 1f       	adc	r23, r25
	stw	Y+, DH,DL			;*Y++ = D;
    1c22:	69 93       	st	Y+, r22
    1c24:	79 93       	st	Y+, r23
#ifdef INPUT_IQ
	ldw	CH,CL, X+			;C = *X++; (Q-axis)
	FMULS16	DH,DL,T2H,T2L, BH,BL, CH,CL	;D = B * C;
#endif
	stw	Y+, DH,DL			;*Y++ = D;
    1c26:	69 93       	st	Y+, r22
    1c28:	79 93       	st	Y+, r23
	subiw	AH,AL, 1			;while(--A)
    1c2a:	01 50       	subi	r16, 0x01	; 1
    1c2c:	10 40       	sbci	r17, 0x00	; 0
	brne	1b				;/
    1c2e:	31 f7       	brne	.-52     	; 0x1bfc <fft_input+0x1a>

	popw	YH,YL
    1c30:	cf 91       	pop	r28
    1c32:	df 91       	pop	r29
	popw	AH,AL
    1c34:	0f 91       	pop	r16
    1c36:	1f 91       	pop	r17
	popw	T2H,T2L
    1c38:	2f 90       	pop	r2
    1c3a:	3f 90       	pop	r3
	clr	r1
    1c3c:	11 24       	eor	r1, r1
	ret
    1c3e:	08 95       	ret

00001c40 <fft_execute>:

;----------------------------------------------------------------------------;
.global fft_execute
.func fft_execute
fft_execute:
	pushw	T2H,T2L
    1c40:	3f 92       	push	r3
    1c42:	2f 92       	push	r2
	pushw	T4H,T4L
    1c44:	5f 92       	push	r5
    1c46:	4f 92       	push	r4
	pushw	T6H,T6L
    1c48:	7f 92       	push	r7
    1c4a:	6f 92       	push	r6
	pushw	T8H,T8L
    1c4c:	9f 92       	push	r9
    1c4e:	8f 92       	push	r8
	pushw	T10H,T10L
    1c50:	bf 92       	push	r11
    1c52:	af 92       	push	r10
	pushw	T12H,T12L
    1c54:	df 92       	push	r13
    1c56:	cf 92       	push	r12
	pushw	T14H,T14L
    1c58:	ff 92       	push	r15
    1c5a:	ef 92       	push	r14
	pushw	AH,AL
    1c5c:	1f 93       	push	r17
    1c5e:	0f 93       	push	r16
	pushw	YH,YL
    1c60:	df 93       	push	r29
    1c62:	cf 93       	push	r28

	movw	ZL, EL				;Z = array_bfly;
    1c64:	fc 01       	movw	r30, r24
	ldiw	EH,EL, 1			;E = 1;
    1c66:	81 e0       	ldi	r24, 0x01	; 1
    1c68:	90 e0       	ldi	r25, 0x00	; 0
	ldiw	XH,XL, FFT_N/2			;X = FFT_N/2;
    1c6a:	a0 e4       	ldi	r26, 0x40	; 64
    1c6c:	b0 e0       	ldi	r27, 0x00	; 0
1:	ldi	AL, 4				;T12 = E; (angular speed)
    1c6e:	04 e0       	ldi	r16, 0x04	; 4
	mul	EL, AL				;
    1c70:	80 9f       	mul	r24, r16
	movw	T12L, T0L			;
    1c72:	60 01       	movw	r12, r0
	mul	EH, AL				;
    1c74:	90 9f       	mul	r25, r16
	add	T12H, T0L			;/
    1c76:	d0 0c       	add	r13, r0
	movw	T14L, EL			;T14 = E;
    1c78:	7c 01       	movw	r14, r24
	pushw	EH,EL
    1c7a:	9f 93       	push	r25
    1c7c:	8f 93       	push	r24
	movw	YL, ZL				;Z = &array_bfly[0];
    1c7e:	ef 01       	movw	r28, r30
	mul	XL, AL				;Y = &array_bfly[X];
    1c80:	a0 9f       	mul	r26, r16
	addw	YH,YL, T0H,T0L			;
    1c82:	c0 0d       	add	r28, r0
    1c84:	d1 1d       	adc	r29, r1
	mul	XH, AL				;
    1c86:	b0 9f       	mul	r27, r16
	add	YH, T0L				;/
    1c88:	d0 0d       	add	r29, r0
	pushw	ZH,ZL
    1c8a:	ff 93       	push	r31
    1c8c:	ef 93       	push	r30
2:	clrw	T10H,T10L			;T10 = 0 (angle)
    1c8e:	bb 24       	eor	r11, r11
    1c90:	aa 24       	eor	r10, r10
	clr	EH				;Zero reg.
    1c92:	99 27       	eor	r25, r25
3:	lddw	AH,AL, Z+0			;A = *Z - *Y; *Z++ += *Y;
    1c94:	00 81       	ld	r16, Z
    1c96:	11 81       	ldd	r17, Z+1	; 0x01
	asrw	AH,AL				;
    1c98:	15 95       	asr	r17
    1c9a:	07 95       	ror	r16
	lddw	DH,DL, Y+0			;
    1c9c:	68 81       	ld	r22, Y
    1c9e:	79 81       	ldd	r23, Y+1	; 0x01
	asrw	DH,DL				;
    1ca0:	75 95       	asr	r23
    1ca2:	67 95       	ror	r22
	movw	CL, AL				;
    1ca4:	a8 01       	movw	r20, r16
	subw	AH,AL, DH,DL			;
    1ca6:	06 1b       	sub	r16, r22
    1ca8:	17 0b       	sbc	r17, r23
	addw	CH,CL, DH,DL			;
    1caa:	46 0f       	add	r20, r22
    1cac:	57 1f       	adc	r21, r23
	stw	Z+, CH,CL			;/
    1cae:	41 93       	st	Z+, r20
    1cb0:	51 93       	st	Z+, r21
	lddw	BH,BL, Z+0			;B = *Z - *Y; *Z++ += *Y;
    1cb2:	20 81       	ld	r18, Z
    1cb4:	31 81       	ldd	r19, Z+1	; 0x01
	asrw	BH,BL				;
    1cb6:	35 95       	asr	r19
    1cb8:	27 95       	ror	r18
	lddw	DH,DL, Y+2			;
    1cba:	6a 81       	ldd	r22, Y+2	; 0x02
    1cbc:	7b 81       	ldd	r23, Y+3	; 0x03
	asrw	DH,DL				;
    1cbe:	75 95       	asr	r23
    1cc0:	67 95       	ror	r22
	movw	CL, BL				;
    1cc2:	a9 01       	movw	r20, r18
	subw	BH,BL, DH,DL			;
    1cc4:	26 1b       	sub	r18, r22
    1cc6:	37 0b       	sbc	r19, r23
	addw	CH,CL, DH,DL			;
    1cc8:	46 0f       	add	r20, r22
    1cca:	57 1f       	adc	r21, r23
	stw	Z+, CH,CL			;/
    1ccc:	41 93       	st	Z+, r20
    1cce:	51 93       	st	Z+, r21
	movw	T0L, ZL
    1cd0:	0f 01       	movw	r0, r30
	ldiw	ZH,ZL, tbl_cos_sin		;C = cos(T10); D = sin(T10);
    1cd2:	e2 e6       	ldi	r30, 0x62	; 98
    1cd4:	fa e1       	ldi	r31, 0x1A	; 26
	addw	ZH,ZL, T10H,T10L		;
    1cd6:	ea 0d       	add	r30, r10
    1cd8:	fb 1d       	adc	r31, r11
	lpmw	CH,CL, Z+			;
    1cda:	45 91       	lpm	r20, Z+
    1cdc:	55 91       	lpm	r21, Z+
	lpmw	DH,DL, Z+			;/
    1cde:	65 91       	lpm	r22, Z+
    1ce0:	75 91       	lpm	r23, Z+
	movw	ZL, T0L
    1ce2:	f0 01       	movw	r30, r0
	FMULS16	T4H,T4L,T2H,T2L, AH,AL, CH,CL	;*Y++ = A * C + B * D;
    1ce4:	95 03       	fmuls	r17, r21
    1ce6:	20 01       	movw	r4, r0
    1ce8:	0c 03       	fmul	r16, r20
    1cea:	10 01       	movw	r2, r0
    1cec:	49 1e       	adc	r4, r25
    1cee:	9c 03       	fmulsu	r17, r20
    1cf0:	59 0a       	sbc	r5, r25
    1cf2:	30 0c       	add	r3, r0
    1cf4:	41 1c       	adc	r4, r1
    1cf6:	59 1e       	adc	r5, r25
    1cf8:	d8 03       	fmulsu	r21, r16
    1cfa:	59 0a       	sbc	r5, r25
    1cfc:	30 0c       	add	r3, r0
    1cfe:	41 1c       	adc	r4, r1
    1d00:	59 1e       	adc	r5, r25
	FMULS16	T8H,T8L,T6H,T6L, BH,BL, DH,DL	;
    1d02:	b7 03       	fmuls	r19, r23
    1d04:	40 01       	movw	r8, r0
    1d06:	2e 03       	fmul	r18, r22
    1d08:	30 01       	movw	r6, r0
    1d0a:	89 1e       	adc	r8, r25
    1d0c:	be 03       	fmulsu	r19, r22
    1d0e:	99 0a       	sbc	r9, r25
    1d10:	70 0c       	add	r7, r0
    1d12:	81 1c       	adc	r8, r1
    1d14:	99 1e       	adc	r9, r25
    1d16:	fa 03       	fmulsu	r23, r18
    1d18:	99 0a       	sbc	r9, r25
    1d1a:	70 0c       	add	r7, r0
    1d1c:	81 1c       	adc	r8, r1
    1d1e:	99 1e       	adc	r9, r25
	addd	T4H,T4L,T2H,T2L, T8H,T8L,T6H,T6L;
    1d20:	26 0c       	add	r2, r6
    1d22:	37 1c       	adc	r3, r7
    1d24:	48 1c       	adc	r4, r8
    1d26:	59 1c       	adc	r5, r9
	stw	Y+, T4H,T4L			;/
    1d28:	49 92       	st	Y+, r4
    1d2a:	59 92       	st	Y+, r5
	FMULS16	T4H,T4L,T2H,T2L, BH,BL, CH,CL 	;*Y++ = B * C - A * D;
    1d2c:	b5 03       	fmuls	r19, r21
    1d2e:	20 01       	movw	r4, r0
    1d30:	2c 03       	fmul	r18, r20
    1d32:	10 01       	movw	r2, r0
    1d34:	49 1e       	adc	r4, r25
    1d36:	bc 03       	fmulsu	r19, r20
    1d38:	59 0a       	sbc	r5, r25
    1d3a:	30 0c       	add	r3, r0
    1d3c:	41 1c       	adc	r4, r1
    1d3e:	59 1e       	adc	r5, r25
    1d40:	da 03       	fmulsu	r21, r18
    1d42:	59 0a       	sbc	r5, r25
    1d44:	30 0c       	add	r3, r0
    1d46:	41 1c       	adc	r4, r1
    1d48:	59 1e       	adc	r5, r25
	FMULS16	T8H,T8L,T6H,T6L, AH,AL, DH,DL 	;
    1d4a:	97 03       	fmuls	r17, r23
    1d4c:	40 01       	movw	r8, r0
    1d4e:	0e 03       	fmul	r16, r22
    1d50:	30 01       	movw	r6, r0
    1d52:	89 1e       	adc	r8, r25
    1d54:	9e 03       	fmulsu	r17, r22
    1d56:	99 0a       	sbc	r9, r25
    1d58:	70 0c       	add	r7, r0
    1d5a:	81 1c       	adc	r8, r1
    1d5c:	99 1e       	adc	r9, r25
    1d5e:	f8 03       	fmulsu	r23, r16
    1d60:	99 0a       	sbc	r9, r25
    1d62:	70 0c       	add	r7, r0
    1d64:	81 1c       	adc	r8, r1
    1d66:	99 1e       	adc	r9, r25
	subd	T4H,T4L,T2H,T2L, T8H,T8L,T6H,T6L;
    1d68:	26 18       	sub	r2, r6
    1d6a:	37 08       	sbc	r3, r7
    1d6c:	48 08       	sbc	r4, r8
    1d6e:	59 08       	sbc	r5, r9
	stw	Y+, T4H,T4L			;/
    1d70:	49 92       	st	Y+, r4
    1d72:	59 92       	st	Y+, r5
	addw	T10H,T10L, T12H,T12L		;T10 += T12; (next angle)
    1d74:	ac 0c       	add	r10, r12
    1d76:	bd 1c       	adc	r11, r13
#if FFT_N >= 128
	sbrs	T10H, FFT_B - 7			;while(T10 < pi)
    1d78:	b0 fe       	sbrs	r11, 0
#else
	sbrs	T10L, FFT_B + 1
#endif
	rjmp	3b				;/
    1d7a:	8c cf       	rjmp	.-232    	; 0x1c94 <fft_execute+0x54>
	ldi	AL, 4				;Y += X; Z += X; (skip split segment)
    1d7c:	04 e0       	ldi	r16, 0x04	; 4
	mul	XL, AL
    1d7e:	a0 9f       	mul	r26, r16
	addw	YH,YL, T0H,T0L			;
    1d80:	c0 0d       	add	r28, r0
    1d82:	d1 1d       	adc	r29, r1
	addw	ZH,ZL, T0H,T0L			;
    1d84:	e0 0d       	add	r30, r0
    1d86:	f1 1d       	adc	r31, r1
	mul	XH, AL				;
    1d88:	b0 9f       	mul	r27, r16
	add	YH, T0L				;
    1d8a:	d0 0d       	add	r29, r0
	add	ZH, T0L				;/
    1d8c:	f0 0d       	add	r31, r0
	ldi	EL, 1				;while(--T14)
    1d8e:	81 e0       	ldi	r24, 0x01	; 1
	subw	T14H,T14L, EH,EL		;
    1d90:	e8 1a       	sub	r14, r24
    1d92:	f9 0a       	sbc	r15, r25
	rjne	2b				;/
    1d94:	09 f0       	breq	.+2      	; 0x1d98 <fft_execute+0x158>
    1d96:	7b cf       	rjmp	.-266    	; 0x1c8e <fft_execute+0x4e>
	popw	ZH,ZL
    1d98:	ef 91       	pop	r30
    1d9a:	ff 91       	pop	r31
	popw	EH,EL
    1d9c:	8f 91       	pop	r24
    1d9e:	9f 91       	pop	r25
	lslw	EH,EL				;E *= 2;
    1da0:	88 0f       	add	r24, r24
    1da2:	99 1f       	adc	r25, r25
	lsrw	XH,XL				;while(X /= 2)
    1da4:	b6 95       	lsr	r27
    1da6:	a7 95       	ror	r26
	adiw	XL, 0				;
    1da8:	10 96       	adiw	r26, 0x00	; 0
	rjne	1b				;/
    1daa:	09 f0       	breq	.+2      	; 0x1dae <fft_execute+0x16e>
    1dac:	60 cf       	rjmp	.-320    	; 0x1c6e <fft_execute+0x2e>

	popw	YH,YL
    1dae:	cf 91       	pop	r28
    1db0:	df 91       	pop	r29
	popw	AH,AL
    1db2:	0f 91       	pop	r16
    1db4:	1f 91       	pop	r17
	popw	T14H,T14L
    1db6:	ef 90       	pop	r14
    1db8:	ff 90       	pop	r15
	popw	T12H,T12L
    1dba:	cf 90       	pop	r12
    1dbc:	df 90       	pop	r13
	popw	T10H,T10L
    1dbe:	af 90       	pop	r10
    1dc0:	bf 90       	pop	r11
	popw	T8H,T8L
    1dc2:	8f 90       	pop	r8
    1dc4:	9f 90       	pop	r9
	popw	T6H,T6L
    1dc6:	6f 90       	pop	r6
    1dc8:	7f 90       	pop	r7
	popw	T4H,T4L
    1dca:	4f 90       	pop	r4
    1dcc:	5f 90       	pop	r5
	popw	T2H,T2L
    1dce:	2f 90       	pop	r2
    1dd0:	3f 90       	pop	r3
;	clr	r1
	ret
    1dd2:	08 95       	ret

00001dd4 <fft_output>:

;----------------------------------------------------------------------------;
.global fft_output
.func fft_output
fft_output:
	pushw	T2H,T2L
    1dd4:	3f 92       	push	r3
    1dd6:	2f 92       	push	r2
	pushw	T4H,T4L
    1dd8:	5f 92       	push	r5
    1dda:	4f 92       	push	r4
	pushw	T6H,T6L
    1ddc:	7f 92       	push	r7
    1dde:	6f 92       	push	r6
	pushw	T8H,T8L
    1de0:	9f 92       	push	r9
    1de2:	8f 92       	push	r8
	pushw	T10H,T10L
    1de4:	bf 92       	push	r11
    1de6:	af 92       	push	r10
	pushw	AH,AL
    1de8:	1f 93       	push	r17
    1dea:	0f 93       	push	r16
	pushw	YH,YL
    1dec:	df 93       	push	r29
    1dee:	cf 93       	push	r28

	movw	T10L, EL			;T10 = array_bfly;
    1df0:	5c 01       	movw	r10, r24
	movw	YL, DL				;Y = array_output;
    1df2:	eb 01       	movw	r28, r22
	ldiw	ZH,ZL, tbl_bitrev		;Z = tbl_bitrev;
    1df4:	e2 e6       	ldi	r30, 0x62	; 98
    1df6:	fb e1       	ldi	r31, 0x1B	; 27
	clr	EH				;Zero
    1df8:	99 27       	eor	r25, r25
#ifdef INPUT_IQ
	ldiw	AH,AL, FFT_N			;A = FFT_N; (pluse/minus)
#else
	ldiw	AH,AL, FFT_N / 2		;A = FFT_N / 2; (pluse only)
    1dfa:	00 e4       	ldi	r16, 0x40	; 64
    1dfc:	10 e0       	ldi	r17, 0x00	; 0
#endif
1:	lpmw	XH,XL, Z+			;X = *Z++;
    1dfe:	a5 91       	lpm	r26, Z+
    1e00:	b5 91       	lpm	r27, Z+
	addw	XH,XL, T10H,T10L		;X += array_bfly;
    1e02:	aa 0d       	add	r26, r10
    1e04:	bb 1d       	adc	r27, r11
	ldw	BH,BL, X+			;B = *X++;
    1e06:	2d 91       	ld	r18, X+
    1e08:	3d 91       	ld	r19, X+
	ldw	CH,CL, X+			;C = *X++;
    1e0a:	4d 91       	ld	r20, X+
    1e0c:	5d 91       	ld	r21, X+
	FMULS16	T4H,T4L,T2H,T2L, BH,BL, BH,BL	;T4:T2 = B * B;
    1e0e:	b3 03       	fmuls	r19, r19
    1e10:	20 01       	movw	r4, r0
    1e12:	2a 03       	fmul	r18, r18
    1e14:	10 01       	movw	r2, r0
    1e16:	49 1e       	adc	r4, r25
    1e18:	ba 03       	fmulsu	r19, r18
    1e1a:	59 0a       	sbc	r5, r25
    1e1c:	30 0c       	add	r3, r0
    1e1e:	41 1c       	adc	r4, r1
    1e20:	59 1e       	adc	r5, r25
    1e22:	ba 03       	fmulsu	r19, r18
    1e24:	59 0a       	sbc	r5, r25
    1e26:	30 0c       	add	r3, r0
    1e28:	41 1c       	adc	r4, r1
    1e2a:	59 1e       	adc	r5, r25
	FMULS16	T8H,T8L,T6H,T6L, CH,CL, CH,CL	;T8:T6 = C * C;
    1e2c:	d5 03       	fmuls	r21, r21
    1e2e:	40 01       	movw	r8, r0
    1e30:	4c 03       	fmul	r20, r20
    1e32:	30 01       	movw	r6, r0
    1e34:	89 1e       	adc	r8, r25
    1e36:	dc 03       	fmulsu	r21, r20
    1e38:	99 0a       	sbc	r9, r25
    1e3a:	70 0c       	add	r7, r0
    1e3c:	81 1c       	adc	r8, r1
    1e3e:	99 1e       	adc	r9, r25
    1e40:	dc 03       	fmulsu	r21, r20
    1e42:	99 0a       	sbc	r9, r25
    1e44:	70 0c       	add	r7, r0
    1e46:	81 1c       	adc	r8, r1
    1e48:	99 1e       	adc	r9, r25
	addd	T4H,T4L,T2H,T2L, T8H,T8L,T6H,T6L;T4:T2 += T8:T6;
    1e4a:	26 0c       	add	r2, r6
    1e4c:	37 1c       	adc	r3, r7
    1e4e:	48 1c       	adc	r4, r8
    1e50:	59 1c       	adc	r5, r9
	SQRT32					;B = sqrt(T4:T2);
    1e52:	66 24       	eor	r6, r6
    1e54:	77 24       	eor	r7, r7
    1e56:	88 24       	eor	r8, r8
    1e58:	99 24       	eor	r9, r9
    1e5a:	21 e0       	ldi	r18, 0x01	; 1
    1e5c:	30 e0       	ldi	r19, 0x00	; 0
    1e5e:	44 27       	eor	r20, r20
    1e60:	55 27       	eor	r21, r21
    1e62:	70 e1       	ldi	r23, 0x10	; 16
    1e64:	22 0c       	add	r2, r2
    1e66:	33 1c       	adc	r3, r3
    1e68:	44 1c       	adc	r4, r4
    1e6a:	55 1c       	adc	r5, r5
    1e6c:	66 1c       	adc	r6, r6
    1e6e:	77 1c       	adc	r7, r7
    1e70:	88 1c       	adc	r8, r8
    1e72:	99 1c       	adc	r9, r9
    1e74:	22 0c       	add	r2, r2
    1e76:	33 1c       	adc	r3, r3
    1e78:	44 1c       	adc	r4, r4
    1e7a:	55 1c       	adc	r5, r5
    1e7c:	66 1c       	adc	r6, r6
    1e7e:	77 1c       	adc	r7, r7
    1e80:	88 1c       	adc	r8, r8
    1e82:	99 1c       	adc	r9, r9
    1e84:	2a f4       	brpl	.+10     	; 0x1e90 <fft_output+0xbc>
    1e86:	62 0e       	add	r6, r18
    1e88:	73 1e       	adc	r7, r19
    1e8a:	84 1e       	adc	r8, r20
    1e8c:	95 1e       	adc	r9, r21
    1e8e:	04 c0       	rjmp	.+8      	; 0x1e98 <fft_output+0xc4>
    1e90:	62 1a       	sub	r6, r18
    1e92:	73 0a       	sbc	r7, r19
    1e94:	84 0a       	sbc	r8, r20
    1e96:	95 0a       	sbc	r9, r21
    1e98:	22 0f       	add	r18, r18
    1e9a:	33 1f       	adc	r19, r19
    1e9c:	44 1f       	adc	r20, r20
    1e9e:	28 7f       	andi	r18, 0xF8	; 248
    1ea0:	25 60       	ori	r18, 0x05	; 5
    1ea2:	97 fc       	sbrc	r9, 7
    1ea4:	22 50       	subi	r18, 0x02	; 2
    1ea6:	7a 95       	dec	r23
    1ea8:	e9 f6       	brne	.-70     	; 0x1e64 <fft_output+0x90>
    1eaa:	46 95       	lsr	r20
    1eac:	37 95       	ror	r19
    1eae:	27 95       	ror	r18
    1eb0:	46 95       	lsr	r20
    1eb2:	37 95       	ror	r19
    1eb4:	27 95       	ror	r18
	stw	Y+, BH,BL			;*Y++ = B;
    1eb6:	29 93       	st	Y+, r18
    1eb8:	39 93       	st	Y+, r19
	subiw	AH,AL, 1			;while(--A)
    1eba:	01 50       	subi	r16, 0x01	; 1
    1ebc:	10 40       	sbci	r17, 0x00	; 0
	rjne	1b				;/
    1ebe:	09 f0       	breq	.+2      	; 0x1ec2 <fft_output+0xee>
    1ec0:	9e cf       	rjmp	.-196    	; 0x1dfe <fft_output+0x2a>

	popw	YH,YL
    1ec2:	cf 91       	pop	r28
    1ec4:	df 91       	pop	r29
	popw	AH,AL
    1ec6:	0f 91       	pop	r16
    1ec8:	1f 91       	pop	r17
	popw	T10H,T10L
    1eca:	af 90       	pop	r10
    1ecc:	bf 90       	pop	r11
	popw	T8H,T8L
    1ece:	8f 90       	pop	r8
    1ed0:	9f 90       	pop	r9
	popw	T6H,T6L
    1ed2:	6f 90       	pop	r6
    1ed4:	7f 90       	pop	r7
	popw	T4H,T4L
    1ed6:	4f 90       	pop	r4
    1ed8:	5f 90       	pop	r5
	popw	T2H,T2L
    1eda:	2f 90       	pop	r2
    1edc:	3f 90       	pop	r3
	clr	r1
    1ede:	11 24       	eor	r1, r1
	ret
    1ee0:	08 95       	ret

00001ee2 <fmuls_f>:

;----------------------------------------------------------------------------;
.global fmuls_f
.func fmuls_f
fmuls_f:
	movw	CL, EL				;C = E;
    1ee2:	ac 01       	movw	r20, r24
	clr	EH	;Zero
    1ee4:	99 27       	eor	r25, r25
	FMULS16	ZH,ZL,XH,XL, CH,CL, DH,DL	;Z:X = C * D;
    1ee6:	d7 03       	fmuls	r21, r23
    1ee8:	f0 01       	movw	r30, r0
    1eea:	4e 03       	fmul	r20, r22
    1eec:	d0 01       	movw	r26, r0
    1eee:	e9 1f       	adc	r30, r25
    1ef0:	de 03       	fmulsu	r21, r22
    1ef2:	f9 0b       	sbc	r31, r25
    1ef4:	b0 0d       	add	r27, r0
    1ef6:	e1 1d       	adc	r30, r1
    1ef8:	f9 1f       	adc	r31, r25
    1efa:	fc 03       	fmulsu	r23, r20
    1efc:	f9 0b       	sbc	r31, r25
    1efe:	b0 0d       	add	r27, r0
    1f00:	e1 1d       	adc	r30, r1
    1f02:	f9 1f       	adc	r31, r25
	movw	EL, ZL
    1f04:	cf 01       	movw	r24, r30
	clr	r1
    1f06:	11 24       	eor	r1, r1
	ret
    1f08:	08 95       	ret

00001f0a <__udivmodhi4>:
    1f0a:	aa 1b       	sub	r26, r26
    1f0c:	bb 1b       	sub	r27, r27
    1f0e:	51 e1       	ldi	r21, 0x11	; 17
    1f10:	07 c0       	rjmp	.+14     	; 0x1f20 <__udivmodhi4_ep>

00001f12 <__udivmodhi4_loop>:
    1f12:	aa 1f       	adc	r26, r26
    1f14:	bb 1f       	adc	r27, r27
    1f16:	a6 17       	cp	r26, r22
    1f18:	b7 07       	cpc	r27, r23
    1f1a:	10 f0       	brcs	.+4      	; 0x1f20 <__udivmodhi4_ep>
    1f1c:	a6 1b       	sub	r26, r22
    1f1e:	b7 0b       	sbc	r27, r23

00001f20 <__udivmodhi4_ep>:
    1f20:	88 1f       	adc	r24, r24
    1f22:	99 1f       	adc	r25, r25
    1f24:	5a 95       	dec	r21
    1f26:	a9 f7       	brne	.-22     	; 0x1f12 <__udivmodhi4_loop>
    1f28:	80 95       	com	r24
    1f2a:	90 95       	com	r25
    1f2c:	bc 01       	movw	r22, r24
    1f2e:	cd 01       	movw	r24, r26
    1f30:	08 95       	ret

00001f32 <__divmodhi4>:
    1f32:	97 fb       	bst	r25, 7
    1f34:	09 2e       	mov	r0, r25
    1f36:	07 26       	eor	r0, r23
    1f38:	0a d0       	rcall	.+20     	; 0x1f4e <__divmodhi4_neg1>
    1f3a:	77 fd       	sbrc	r23, 7
    1f3c:	04 d0       	rcall	.+8      	; 0x1f46 <__divmodhi4_neg2>
    1f3e:	e5 df       	rcall	.-54     	; 0x1f0a <__udivmodhi4>
    1f40:	06 d0       	rcall	.+12     	; 0x1f4e <__divmodhi4_neg1>
    1f42:	00 20       	and	r0, r0
    1f44:	1a f4       	brpl	.+6      	; 0x1f4c <__divmodhi4_exit>

00001f46 <__divmodhi4_neg2>:
    1f46:	70 95       	com	r23
    1f48:	61 95       	neg	r22
    1f4a:	7f 4f       	sbci	r23, 0xFF	; 255

00001f4c <__divmodhi4_exit>:
    1f4c:	08 95       	ret

00001f4e <__divmodhi4_neg1>:
    1f4e:	f6 f7       	brtc	.-4      	; 0x1f4c <__divmodhi4_exit>
    1f50:	90 95       	com	r25
    1f52:	81 95       	neg	r24
    1f54:	9f 4f       	sbci	r25, 0xFF	; 255
    1f56:	08 95       	ret

00001f58 <__divmodsi4>:
    1f58:	97 fb       	bst	r25, 7
    1f5a:	09 2e       	mov	r0, r25
    1f5c:	05 26       	eor	r0, r21
    1f5e:	0e d0       	rcall	.+28     	; 0x1f7c <__divmodsi4_neg1>
    1f60:	57 fd       	sbrc	r21, 7
    1f62:	04 d0       	rcall	.+8      	; 0x1f6c <__divmodsi4_neg2>
    1f64:	4b d0       	rcall	.+150    	; 0x1ffc <__udivmodsi4>
    1f66:	0a d0       	rcall	.+20     	; 0x1f7c <__divmodsi4_neg1>
    1f68:	00 1c       	adc	r0, r0
    1f6a:	38 f4       	brcc	.+14     	; 0x1f7a <__divmodsi4_exit>

00001f6c <__divmodsi4_neg2>:
    1f6c:	50 95       	com	r21
    1f6e:	40 95       	com	r20
    1f70:	30 95       	com	r19
    1f72:	21 95       	neg	r18
    1f74:	3f 4f       	sbci	r19, 0xFF	; 255
    1f76:	4f 4f       	sbci	r20, 0xFF	; 255
    1f78:	5f 4f       	sbci	r21, 0xFF	; 255

00001f7a <__divmodsi4_exit>:
    1f7a:	08 95       	ret

00001f7c <__divmodsi4_neg1>:
    1f7c:	f6 f7       	brtc	.-4      	; 0x1f7a <__divmodsi4_exit>
    1f7e:	90 95       	com	r25
    1f80:	80 95       	com	r24
    1f82:	70 95       	com	r23
    1f84:	61 95       	neg	r22
    1f86:	7f 4f       	sbci	r23, 0xFF	; 255
    1f88:	8f 4f       	sbci	r24, 0xFF	; 255
    1f8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8c:	08 95       	ret

00001f8e <__prologue_saves__>:
    1f8e:	2f 92       	push	r2
    1f90:	3f 92       	push	r3
    1f92:	4f 92       	push	r4
    1f94:	5f 92       	push	r5
    1f96:	6f 92       	push	r6
    1f98:	7f 92       	push	r7
    1f9a:	8f 92       	push	r8
    1f9c:	9f 92       	push	r9
    1f9e:	af 92       	push	r10
    1fa0:	bf 92       	push	r11
    1fa2:	cf 92       	push	r12
    1fa4:	df 92       	push	r13
    1fa6:	ef 92       	push	r14
    1fa8:	ff 92       	push	r15
    1faa:	0f 93       	push	r16
    1fac:	1f 93       	push	r17
    1fae:	cf 93       	push	r28
    1fb0:	df 93       	push	r29
    1fb2:	cd b7       	in	r28, 0x3d	; 61
    1fb4:	de b7       	in	r29, 0x3e	; 62
    1fb6:	ca 1b       	sub	r28, r26
    1fb8:	db 0b       	sbc	r29, r27
    1fba:	0f b6       	in	r0, 0x3f	; 63
    1fbc:	f8 94       	cli
    1fbe:	de bf       	out	0x3e, r29	; 62
    1fc0:	0f be       	out	0x3f, r0	; 63
    1fc2:	cd bf       	out	0x3d, r28	; 61
    1fc4:	09 94       	ijmp

00001fc6 <__epilogue_restores__>:
    1fc6:	2a 88       	ldd	r2, Y+18	; 0x12
    1fc8:	39 88       	ldd	r3, Y+17	; 0x11
    1fca:	48 88       	ldd	r4, Y+16	; 0x10
    1fcc:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fce:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fd0:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fd2:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fd4:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fd6:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fd8:	b9 84       	ldd	r11, Y+9	; 0x09
    1fda:	c8 84       	ldd	r12, Y+8	; 0x08
    1fdc:	df 80       	ldd	r13, Y+7	; 0x07
    1fde:	ee 80       	ldd	r14, Y+6	; 0x06
    1fe0:	fd 80       	ldd	r15, Y+5	; 0x05
    1fe2:	0c 81       	ldd	r16, Y+4	; 0x04
    1fe4:	1b 81       	ldd	r17, Y+3	; 0x03
    1fe6:	aa 81       	ldd	r26, Y+2	; 0x02
    1fe8:	b9 81       	ldd	r27, Y+1	; 0x01
    1fea:	ce 0f       	add	r28, r30
    1fec:	d1 1d       	adc	r29, r1
    1fee:	0f b6       	in	r0, 0x3f	; 63
    1ff0:	f8 94       	cli
    1ff2:	de bf       	out	0x3e, r29	; 62
    1ff4:	0f be       	out	0x3f, r0	; 63
    1ff6:	cd bf       	out	0x3d, r28	; 61
    1ff8:	ed 01       	movw	r28, r26
    1ffa:	08 95       	ret

00001ffc <__udivmodsi4>:
    1ffc:	a1 e2       	ldi	r26, 0x21	; 33
    1ffe:	1a 2e       	mov	r1, r26
    2000:	aa 1b       	sub	r26, r26
    2002:	bb 1b       	sub	r27, r27
    2004:	fd 01       	movw	r30, r26
    2006:	0d c0       	rjmp	.+26     	; 0x2022 <__udivmodsi4_ep>

00002008 <__udivmodsi4_loop>:
    2008:	aa 1f       	adc	r26, r26
    200a:	bb 1f       	adc	r27, r27
    200c:	ee 1f       	adc	r30, r30
    200e:	ff 1f       	adc	r31, r31
    2010:	a2 17       	cp	r26, r18
    2012:	b3 07       	cpc	r27, r19
    2014:	e4 07       	cpc	r30, r20
    2016:	f5 07       	cpc	r31, r21
    2018:	20 f0       	brcs	.+8      	; 0x2022 <__udivmodsi4_ep>
    201a:	a2 1b       	sub	r26, r18
    201c:	b3 0b       	sbc	r27, r19
    201e:	e4 0b       	sbc	r30, r20
    2020:	f5 0b       	sbc	r31, r21

00002022 <__udivmodsi4_ep>:
    2022:	66 1f       	adc	r22, r22
    2024:	77 1f       	adc	r23, r23
    2026:	88 1f       	adc	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	1a 94       	dec	r1
    202c:	69 f7       	brne	.-38     	; 0x2008 <__udivmodsi4_loop>
    202e:	60 95       	com	r22
    2030:	70 95       	com	r23
    2032:	80 95       	com	r24
    2034:	90 95       	com	r25
    2036:	9b 01       	movw	r18, r22
    2038:	ac 01       	movw	r20, r24
    203a:	bd 01       	movw	r22, r26
    203c:	cf 01       	movw	r24, r30
    203e:	08 95       	ret

00002040 <__eerd_byte_m644>:
    2040:	f9 99       	sbic	0x1f, 1	; 31
    2042:	fe cf       	rjmp	.-4      	; 0x2040 <__eerd_byte_m644>
    2044:	92 bd       	out	0x22, r25	; 34
    2046:	81 bd       	out	0x21, r24	; 33
    2048:	f8 9a       	sbi	0x1f, 0	; 31
    204a:	99 27       	eor	r25, r25
    204c:	80 b5       	in	r24, 0x20	; 32
    204e:	08 95       	ret

00002050 <_exit>:
    2050:	f8 94       	cli

00002052 <__stop_program>:
    2052:	ff cf       	rjmp	.-2      	; 0x2052 <__stop_program>
